{"version":3,"sources":["utilities/Data.js","utilities/Graph.js","utilities/TableData.js","components/Deaths.js","utilities/Utils.js","components/Cases.js","components/Tests.js","components/Hospital.js","components/Admissions.js","components/IntensiveCare.js","components/Footer.js","components/Input.js","utilities/utla.js","utilities/ltla.js","containers/App.js","serviceWorker.js","index.js"],"names":["Data","areaType","areaName","this","weekdays","filters","structure","request","JSON","stringify","fetch","response","json","results","requiredData","extractRequiredFields","data","latest","deaths","count","length","undefined","filter","la","prefix","code","charAt","latestDate","Date","setDate","getDate","getFullYear","getMonth","slice","sort","a","b","deathsByLocation","forEach","locn","push","date","location","count1","cases","casesByLocation","nhsRegions","hosp","region","k","i","c","rowDay","getDay","patients","admissions","intensiveCare","hospital","Object","entries","key","value","patientsEastOfEngland","patientsLondon","patientsMidlands","patientsNorthEastAndYorkshire","patientsNorthWest","patientsSouthEast","patientsSouthWest","day","admissionsEastOfEngland","admissionsLondon","admissionsMidlands","admissionsNorthEastAndYorkshire","admissionsNorthWest","admissionsSouthEast","admissionsSouthWest","intensiveCareEastOfEngland","intensiveCareLondon","intensiveCareMidlands","intensiveCareNorthEastAndYorkshire","intensiveCareNorthWest","intensiveCareSouthEast","intensiveCareSouthWest","apiData","dateLatest","deathsDate","deathsDateYMD","deathsNew","deathsCum","deathsRate","deathsDateAct","deathsNewAct","deathsCumAct","deathsRateAct","casesDate","casesDateYMD","casesNew","casesCum","casesRate","casesDateAct","casesNewAct","casesCumAct","casesRateAct","hospitalDate","hospitalNew","admissionsDate","admissionsNew","admissionsCum","intensiveCareDate","intensiveCareNew","testsDate","newP1","newP2","newP3","newP4","newTests","cumP1","cumP2","cumP3","cumP4","cumTests","deathsPub","deathsAct","casesPub","casesAct","tests1","tests2","tests3","tests4","testsTot","rowDate","toLocaleDateString","newDeaths28DaysByPublishDate","toLocaleString","cumDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDateRate","newDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDateRate","newCasesByPublishDate","cumCasesByPublishDate","cumCasesByPublishDateRate","newCasesBySpecimenDate","cumCasesBySpecimenDate","cumCasesBySpecimenDateRate","newPillarOneTestsByPublishDate","newPillarTwoTestsByPublishDate","newPillarThreeTestsByPublishDate","newPillarFourTestsByPublishDate","parseInt","cumPillarOneTestsByPublishDate","cumPillarTwoTestsByPublishDate","cumPillarThreeTestsByPublishDate","cumPillarFourTestsByPublishDate","hospitalCases","newAdmissions","cumAdmissions","covidOccupiedMVBeds","count2","count3","count4","count5","Graph","props","desc","useState","height","window","innerHeight","width","innerWidth","sizes","setSizes","CustomTooltip","payload","label","active","className","map","load","name","useEffect","handleResize","addEventListener","removeEventListener","formatXAxis","tickItem","month","w","Math","floor","h","margin","top","right","bottom","left","stroke","vertical","tick","fontSize","interval","tickFormatter","dataKey","content","verticalAlign","wrapperStyle","paddingtop","type","dot","count6","count7","count8","count9","count10","TableData","cols","id","elem","Deaths","datePub","newPub","cumPub","ratePub","dateAct","newAct","cumAct","rateAct","deathsLoc","deathsPubSorted","deathsActSorted","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","Cases","casesLoc","casesPubSorted","casesActSorted","Tests","newTotal","cumTotal","testsTotSorted","Hospital","regions","patientsSorted","regionsSorted","Admissions","cumulative","admissionsSorted","IntensiveCare","intensiveCareSorted","Footer","Input","updateAreaTypeAndName","areaNames","setAreaNames","nameOptions","overview","nation","nhsRegion","utla","ltla","onAreaTypeChange","event","target","onSubmitClick","document","getElementById","htmlFor","defaultValue","onChange","onClick","App","setAreaType","setAreaName","setAPIData","apiCaseData","setAPICaseData","apiDeathData","setAPIDeathData","apiHospitalData","setAPIHospitalData","noData","setNoData","getAPIData","then","catch","err","console","log","getAPICaseDataByLA","getAPIDeathDataByLA","getAPIHospitalDataByNHSRegion","newAreaType","newAreaName","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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AW,CAAC,kBAAmB,SAAU,WACvC,2BAA4B,aAAc,aAC1C,cACFC,KCjByB,CAC3B,gBACA,gBACA,QACA,0BACA,sBACA,kBACA,uCACA,uBACA,SACA,WACA,+BACA,UACA,UACA,SACA,aACA,wBACA,YACA,gBACA,SACA,sCACA,mBACA,WACA,QACA,WACA,oBACA,mBACA,UACA,kBACA,OACA,aACA,aACA,iBACA,SACA,UACA,kBACA,2BACA,uBACA,aACA,gBACA,4BACA,oBACA,iBACA,mBACA,QACA,+BACA,gBACA,WACA,UACA,UACA,aACA,eACA,QACA,aACA,0BACA,QACA,YACA,SACA,SACA,wBACA,cACA,SACA,gBACA,sBACA,eACA,oBACA,2BACA,cACA,UACA,QACA,UACA,sBACA,OACA,aACA,YACA,eACA,kBACA,YACA,UACA,6BACA,SACA,yBACA,YACA,WACA,SACA,aACA,WACA,2BACA,gBACA,WACA,aACA,WACA,aACA,mBACA,gBACA,kBACA,YACA,yBACA,OACA,8BACA,uBACA,WACA,WACA,UACA,aACA,QACA,YACA,iBACA,WACA,eACA,0BACA,YACA,QACA,aACA,SACA,iBACA,sBACA,aACA,gBACA,aACA,gBACA,gBACA,QACA,qBACA,oBACA,sBACA,SACA,UACA,yBACA,UACA,iBACA,0BACA,oBACA,qBACA,iBACA,iBACA,kBACA,mBACA,iBACA,aACA,kBACA,SACA,iBACA,cACA,gBACA,oBACA,eACA,WACA,aACA,QACA,UACA,YACA,uBACA,eACA,yBACA,oBACA,uBACA,WACA,YACA,UACA,UACA,WACA,mBACA,SACA,YACA,mBACA,aACA,SACA,WACA,WACA,iBACA,wBACA,oBACA,iBACA,cACA,kBACA,YACA,aACA,gBACA,WACA,YACA,mBACA,iBACA,UACA,aACA,SACA,SACA,UACA,UACA,WACA,qBACA,WACA,SACA,UACA,gBACA,WACA,oBACA,YACA,UACA,iBACA,aACA,aACA,eACA,iBACA,sBACA,eACA,cACA,cACA,QACA,YACA,yBACA,SACA,YACA,gBACA,iBACA,UACA,QDtMEC,KElByB,CAC3B,gBACA,gBACA,OACA,YACA,eACA,QACA,0BACA,sBACA,kBACA,uCACA,OACA,WACA,UACA,iBACA,UACA,uBACA,SACA,WACA,oBACA,WACA,wBACA,YACA,+BACA,UACA,UACA,SACA,aACA,QACA,wBACA,YACA,gBACA,WACA,SACA,SACA,sCACA,mBACA,WACA,YACA,YACA,QACA,YACA,WACA,oBACA,mBACA,YACA,UACA,aACA,aACA,WACA,UACA,OACA,aACA,aACA,YACA,SACA,gBACA,aACA,UACA,WACA,kBACA,eACA,2BACA,uBACA,aACA,YACA,aACA,aACA,WACA,gBACA,4BACA,eACA,aACA,WACA,UACA,oBACA,iBACA,mBACA,aACA,QACA,WACA,QACA,+BACA,WACA,gBACA,WACA,SACA,UACA,UACA,UACA,aACA,WACA,WACA,eACA,QACA,mBACA,0BACA,YACA,SACA,QACA,SACA,wBACA,cACA,SACA,gBACA,sBACA,aACA,sBACA,iBACA,qBACA,eACA,eACA,wBACA,oBACA,2BACA,qBACA,eACA,aACA,YACA,OACA,YACA,UACA,gBACA,kBACA,UACA,SACA,UACA,UACA,UACA,sBACA,OACA,aACA,uBACA,iBACA,QACA,YACA,UACA,eACA,aACA,UACA,YACA,iBACA,YACA,YACA,UACA,6BACA,SACA,YACA,yBACA,aACA,WACA,SACA,YACA,SACA,OACA,aACA,WACA,SACA,WACA,2BACA,YACA,YACA,WACA,aACA,wBACA,UACA,WACA,kBACA,WACA,aACA,UACA,mBACA,gBACA,kBACA,YACA,yBACA,YACA,+BACA,8BACA,uBACA,WACA,WACA,UACA,YACA,QACA,YACA,QACA,WACA,YACA,UACA,0BACA,YACA,QACA,YACA,SACA,gBACA,aACA,YACA,SACA,SACA,SACA,iBACA,SACA,sBACA,YACA,cACA,aACA,aACA,gBACA,aACA,gBACA,cACA,gBACA,QACA,qBACA,oBACA,aACA,sBACA,sBACA,uBACA,SACA,UACA,yBACA,iBACA,cACA,wBACA,0BACA,sBACA,iBACA,oBACA,qBACA,gBACA,iBACA,iBACA,qBACA,4BACA,cACA,iBACA,UACA,aACA,wBACA,oBACA,SACA,iBACA,SACA,gBACA,SACA,oBACA,eACA,WACA,aACA,QACA,UACA,UACA,YACA,uBACA,WACA,uBACA,eACA,yBACA,oBACA,gBACA,uBACA,gBACA,WACA,WACA,aACA,SACA,YACA,QACA,YACA,aACA,WACA,UACA,UACA,UACA,WACA,cACA,mBACA,YACA,SACA,QACA,YACA,YACA,mBACA,aACA,SACA,WACA,4BACA,iBACA,cACA,uBACA,mBACA,wBACA,aACA,gBACA,iBACA,iBACA,oBACA,gBACA,yBACA,oBACA,eACA,iBACA,sBACA,iBACA,cACA,kBACA,YACA,aACA,YACA,aACA,WACA,0BACA,YACA,WACA,YACA,mBACA,iBACA,oBACA,SACA,aACA,eACA,SACA,QACA,UACA,UACA,WACA,WACA,YACA,cACA,qBACA,WACA,cACA,aACA,SACA,eACA,WACA,wBACA,SACA,UACA,WACA,gBACA,WACA,kBACA,aACA,oBACA,sBACA,YACA,UACA,iBACA,aACA,aACA,UACA,UACA,WACA,UACA,iBACA,kBACA,iBACA,aACA,sBACA,kBACA,eACA,eACA,mBACA,eACA,cACA,QACA,YACA,aACA,yBACA,SACA,SACA,YACA,gBACA,YACA,WACA,UACA,WACA,UACA,OACA,cACA,SF1WMC,EAAmB,SAACC,GACxBR,EAAaC,EAAYO,EAAMC,OAAO/M,SAGlCgN,EAAgB,SAACF,GACrBV,EACEa,SAASC,eAAe,YAAYlN,MACpCiN,SAASC,eAAe,YAAYlN,QAGxC,OAEE,yBAAKqH,UAAU,mBACb,0BAAMA,UAAU,eAEd,yBAAKA,UAAU,uBACb,2BAAO8F,QAAQ,WAAW9F,UAAU,QAApC,aACA,4BAAQA,UAAU,yBAAyBwC,GAAG,WAAWuD,aAAchR,EAAUiR,SAAUR,GACzF,4BAAQ7M,MAAM,YAAd,MA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","file":"static/js/main.131d146d.chunk.js","sourcesContent":["export default class Data {\n\n  constructor(areaType, areaName) {\n    this.areaType = areaType;\n    this.areaName = areaName;\n    this.weekdays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat']\n  }\n\n  // Fetch data from the government API\n  async getAPIData() {\n\n    let filters = `areaType=${this.areaType}`\n    if (this.areaName !== '') {\n      filters += `;areaName=${this.areaName}`\n    }\n\n    const structure = {\n      \"areaType\": \"areaType\",\n      \"areaName\": \"areaName\",\n      \"areaCode\": \"areaCode\",\n      \"date\": \"date\",\n      \"newCasesByPublishDate\": \"newCasesByPublishDate\",\n      \"cumCasesByPublishDate\": \"cumCasesByPublishDate\",\n      \"cumCasesByPublishDateRate\": \"cumCasesByPublishDateRate\",\n      \"newCasesBySpecimenDate\": \"newCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDate\": \"cumCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDateRate\": \"cumCasesBySpecimenDateRate\",\n      \"maleCases\": \"maleCases\",\n      \"femaleCases\": \"femaleCases\",\n      \"newPillarOneTestsByPublishDate\": \"newPillarOneTestsByPublishDate\",\n      \"cumPillarOneTestsByPublishDate\": \"cumPillarOneTestsByPublishDate\",\n      \"newPillarTwoTestsByPublishDate\": \"newPillarTwoTestsByPublishDate\",\n      \"cumPillarTwoTestsByPublishDate\": \"cumPillarTwoTestsByPublishDate\",\n      \"newPillarThreeTestsByPublishDate\": \"newPillarThreeTestsByPublishDate\",\n      \"cumPillarThreeTestsByPublishDate\": \"cumPillarThreeTestsByPublishDate\",\n      \"newPillarFourTestsByPublishDate\": \"newPillarFourTestsByPublishDate\",\n      \"cumPillarFourTestsByPublishDate\": \"cumPillarFourTestsByPublishDate\",\n      \"newAdmissions\": \"newAdmissions\", \"cumAdmissions\": \"cumAdmissions\",\n      \"cumAdmissionsByAge\": \"cumAdmissionsByAge\",\n      \"cumTestsByPublishDate\": \"cumTestsByPublishDate\",\n      \"newTestsByPublishDate\": \"newTestsByPublishDate\",\n      \"covidOccupiedMVBeds\": \"covidOccupiedMVBeds\",\n      \"hospitalCases\": \"hospitalCases\",\n      \"plannedCapacityByPublishDate\": \"plannedCapacityByPublishDate\",\n      \"newDeaths28DaysByPublishDate\": \"newDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDate\": \"cumDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDateRate\": \"cumDeaths28DaysByPublishDateRate\",\n      \"newDeaths28DaysByDeathDate\": \"newDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDate\": \"cumDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDateRate\": \"cumDeaths28DaysByDeathDateRate\",\n    }\n\n    const request = `\n    https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n    `\n    let response = await fetch(request);\n    let results = await response.json();\n    const requiredData = this.extractRequiredFields(results.data)\n    response = null\n    results = null\n    return requiredData;\n  }\n\n  // Fetch todays or most recent death data from API\n  // May vary by nation\n  async getAPIDeathDataByLA(latest) {\n\n    let deaths = []\n    let count = 0\n\n    const structure = {\n      \"locn\": \"areaName\",\n      \"code\": \"areaCode\",\n      \"date\": \"date\",\n      \"count\": \"newDeaths28DaysByPublishDate\",\n    }\n\n    while (deaths.length === 0 && count <= 3) {\n      count = count + 1\n      let filters = \"areaType=ltla\"\n      filters += `;date=${latest}`\n\n      const request = `\n      https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      if (results.data === undefined) {\n        break\n      } else {\n        deaths = results.data.filter(la => {\n          const prefix = la.code.charAt(0)\n          return la.count !== 0 &&\n            (\n              this.areaName === '' ||\n              (this.areaName === 'England' && prefix === 'E') ||\n              (this.areaName === 'Scotland' && prefix === 'S') ||\n              (this.areaName === 'Wales' && prefix === 'W') ||\n              (this.areaName === 'Northern Ireland' && prefix === 'N')\n            )\n        })\n\n        if (deaths.length === 0) {\n          const latestDate = new Date(latest)\n          latestDate.setDate(latestDate.getDate() - 1)\n          latest = '' + latestDate.getFullYear() + '-' + (\"0\" + (latestDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + latestDate.getDate()).slice(-2)\n        }\n      }\n    }\n\n    deaths.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n    let deathsByLocation = []\n    deaths.forEach((locn) => {\n      deathsByLocation.push({\n        date: locn.date,\n        location: locn.locn,\n        code: locn.code,\n        count1: locn.count\n      })\n    })\n    return deathsByLocation;\n  }\n\n  // Fetch todays or most recent cases data from API\n  // May vary by nation\n  async getAPICaseDataByLA(latest) {\n\n    const structure = {\n      \"locn\": \"areaName\",\n      \"code\": \"areaCode\",\n      \"date\": \"date\",\n      \"count\": \"newCasesByPublishDate\",\n    }\n\n    let cases = []\n    let count = 0\n\n    while (cases.length === 0 && count <= 3) {\n      count = count + 1\n      let filters = \"areaType=ltla\"\n      filters += `;date=${latest}`\n\n      const request = `\n      https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      if (results.data === undefined) {\n        break\n      } else {\n        cases = results.data.filter(la => {\n          const prefix = la.code.charAt(0)\n          return la.count !== 0 &&\n            (\n              this.areaName === '' ||\n              (this.areaName === 'England' && prefix === 'E') ||\n              (this.areaName === 'Scotland' && prefix === 'S') ||\n              (this.areaName === 'Wales' && prefix === 'W') ||\n              (this.areaName === 'Northern Ireland' && prefix === 'N')\n            )\n        })\n\n        if (cases.length === 0) {\n          const latestDate = new Date(latest)\n          latestDate.setDate(latestDate.getDate() - 1)\n          latest = '' + latestDate.getFullYear() + '-' + (\"0\" + (latestDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + latestDate.getDate()).slice(-2)\n        }\n      }\n    }\n\n    cases.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n    let casesByLocation = []\n    cases.forEach((locn) => {\n      casesByLocation.push({\n        date: locn.date,\n        location: locn.locn,\n        code: locn.code,\n        count1: locn.count\n      })\n    })\n    return casesByLocation;\n  }\n\n  // Fetch todays or most recent hospital data from API\n  async getAPIHospitalDataByNHSRegion() {\n\n    const structure = {\n      \"locn\": \"areaName\",\n      \"code\": \"areaCode\",\n      \"date\": \"date\",\n      \"admissions\": \"newAdmissions\",\n      \"intensiveCare\": \"covidOccupiedMVBeds\",\n      \"patients\": \"hospitalCases\"\n    }\n\n    const nhsRegions = ['East of England', 'London', 'Midlands',\n      'North East and Yorkshire', 'North West', 'South East',\n      'South West']\n\n    let hosp = {}\n    let region = ''\n\n    // Retrieve data for each region and merge results\n    for (let k = 0; k < nhsRegions.length; k++) {\n      region = nhsRegions[k]\n      let filters = \"areaType=nhsRegion\"\n      filters += `;areaName=${region}`\n\n      const request = `\n      https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      if (results.data !== undefined && results.data != null) {\n        for (let i = 0; i < results.data.length; i++) {\n          const c = results.data[i]\n          const rowDay = this.weekdays[(new Date(c.date)).getDay()]\n\n          if (!(c.date in hosp)) {\n            hosp[c.date] = {\n              'day': rowDay,\n              'patientsEastOfEngland': null,\n              'patientsLondon': null,\n              'patientsMidlands': null,\n              'patientsNorthEastAndYorkshire': null,\n              'patientsNorthWest': null,\n              'patientsSouthEast': null,\n              'patientsSouthWest': null,\n              'admissionsEastOfEngland': null,\n              'admissionsLondon': null,\n              'admissionsMidlands': null,\n              'admissionsNorthEastAndYorkshire': null,\n              'admissionsNorthWest': null,\n              'admissionsSouthEast': null,\n              'admissionsSouthWest': null,\n              'intensiveCareEastOfEngland': null,\n              'intensiveCareLondon': null,\n              'intensiveCareMidlands': null,\n              'intensiveCareNorthEastAndYorkshire': null,\n              'intensiveCareNorthWest': null,\n              'intensiveCareSouthEast': null,\n              'intensiveCareSouthWest': null,\n            }\n          }\n\n          switch (region) {\n            case 'East of England': {\n              hosp[c.date]['patientsEastOfEngland'] = c.patients\n              hosp[c.date]['admissionsEastOfEngland'] = c.admissions\n              hosp[c.date]['intensiveCareEastOfEngland'] = c.intensiveCare\n              break\n            }\n            case 'London': {\n              hosp[c.date]['patientsLondon'] = c.patients\n              hosp[c.date]['admissionsLondon'] = c.admissions\n              hosp[c.date]['intensiveCareLondon'] = c.intensiveCare\n              break\n            }\n            case 'Midlands': {\n              hosp[c.date]['patientsMidlands'] = c.patients\n              hosp[c.date]['admissionsMidlands'] = c.admissions\n              hosp[c.date]['intensiveCareMidlands'] = c.intensiveCare\n              break\n            }\n            case 'North East and Yorkshire': {\n              hosp[c.date]['patientsNorthEastAndYorkshire'] = c.patients\n              hosp[c.date]['admissionsNorthEastAndYorkshire'] = c.admissions\n              hosp[c.date]['intensiveCareNorthEastAndYorkshire'] = c.intensiveCare\n              break\n            }\n            case 'North West': {\n              hosp[c.date]['patientsNorthWest'] = c.patients\n              hosp[c.date]['admissionsNorthWest'] = c.admissions\n              hosp[c.date]['intensiveCareNorthWest'] = c.intensiveCare\n              break\n            }\n            case 'South East': {\n              hosp[c.date]['patientsSouthEast'] = c.patients\n              hosp[c.date]['admissionsSouthEast'] = c.admissions\n              hosp[c.date]['intensiveCareSouthEast'] = c.intensiveCare\n              break\n            }\n            case 'South West': {\n              hosp[c.date]['patientsSouthWest'] = c.patients\n              hosp[c.date]['admissionsSouthWest'] = c.admissions\n              hosp[c.date]['intensiveCareSouthWest'] = c.intensiveCare\n              break\n            }\n            default: {\n\n            }\n          }\n        }\n      }\n    }\n\n    // Split out patients, admissions, intensiveCare\n    let hospital = {\n      patients: [],\n      admissions: [],\n      intensiveCare: []\n    }\n\n    for (const [key, value] of Object.entries(hosp)) {\n      if (value.patientsEastOfEngland != null ||\n        value.patientsLondon != null ||\n        value.patientsMidlands != null ||\n        value.patientsNorthEastAndYorkshire != null ||\n        value.patientsNorthWest != null ||\n        value.patientsSouthEast != null ||\n        value.patientsSouthWest != null\n      ) {\n        hospital.patients[hospital.patients.length] = {\n          'date': key,\n          'day': value.day,\n          'count1': value.patientsEastOfEngland,\n          'count2': value.patientsLondon,\n          'count3': value.patientsMidlands,\n          'count4': value.patientsNorthEastAndYorkshire,\n          'count5': value.patientsNorthWest,\n          'count6': value.patientsSouthEast,\n          'count7': value.patientsSouthWest,\n        }\n      }\n      if (value.admissionsEastOfEngland != null ||\n        value.admissionsLondon != null ||\n        value.admissionsMidlands != null ||\n        value.admissionsNorthEastAndYorkshire != null ||\n        value.admissionsNorthWest != null ||\n        value.admissionsSouthEast != null ||\n        value.admissionsSouthWest != null\n      ) {\n        hospital.admissions[hospital.admissions.length] = {\n          'date': key,\n          'day': value.day,\n          'count1': value.admissionsEastOfEngland,\n          'count2': value.admissionsLondon,\n          'count3': value.admissionsMidlands,\n          'count4': value.admissionsNorthEastAndYorkshire,\n          'count5': value.admissionsNorthWest,\n          'count6': value.admissionsSouthEast,\n          'count7': value.admissionsSouthWest,\n        }\n      }\n      if (value.intensiveCareEastOfEngland != null ||\n        value.intensiveCareLondon != null ||\n        value.intensiveCareMidlands != null ||\n        value.intensiveCareNorthEastAndYorkshire != null ||\n        value.intensiveCareNorthWest != null ||\n        value.intensiveCareSouthEast != null ||\n        value.intensiveCareSouthWest != null\n      ) {\n        hospital.intensiveCare[hospital.intensiveCare.length] = {\n          'date': key,\n          'day': value.day,\n          'count1': value.intensiveCareEastOfEngland,\n          'count2': value.intensiveCareLondon,\n          'count3': value.intensiveCareMidlands,\n          'count4': value.intensiveCareNorthEastAndYorkshire,\n          'count5': value.intensiveCareNorthWest,\n          'count6': value.intensiveCareSouthEast,\n          'count7': value.intensiveCareSouthWest,\n        }\n      }\n    }\n\n    return hospital;\n  }\n\n  extractRequiredFields(apiData) {\n\n    const data = {\n      dateLatest: null, deathsDate: null, deathsDateYMD: null, deathsNew: null, deathsCum: null, deathsRate: null, deathsDateAct: null, deathsNewAct: null, deathsCumAct: null, deathsRateAct: null, casesDate: null, casesDateYMD: null, casesNew: null, casesCum: null, casesRate: null, casesDateAct: null, casesNewAct: null, casesCumAct: null, casesRateAct: null, hospitalDate: null, hospitalNew: null, admissionsDate: null, admissionsNew: null, admissionsCum: null, intensiveCareDate: null, intensiveCareNew: null, testsDate: null, newP1: null, newP2: null, newP3: null, newP4: null, newTests: null, cumP1: null, cumP2: null, cumP3: null, cumP4: null, cumTests: null, deathsPub: [], deathsAct: [], casesPub: [], casesAct: [], tests1: [], tests2: [], tests3: [], tests4: [], testsTot: [], patients: [], admissions: [], intensiveCare: []\n    }\n\n    if (apiData !== undefined && apiData.length > 0) {\n\n      data.dateLatest = apiData[0].date\n\n      if (data.dateLatest != null) {\n        for (let i = 0; i < apiData.length; i++) {\n          const c = apiData[i]\n          const rowDate = (new Date(c.date)).toLocaleDateString()\n          const rowDay = this.weekdays[(new Date(c.date)).getDay()]\n\n          // Get the latest values for each variable, may be on different dates\n          // Deaths Published\n          if (data.deathsNew == null && c.newDeaths28DaysByPublishDate != null) {\n            data.deathsNew = (c.newDeaths28DaysByPublishDate || '').toLocaleString()\n            data.deathsCum = (c.cumDeaths28DaysByPublishDate || '').toLocaleString()\n            data.deathsRate = c.cumDeaths28DaysByPublishDateRate\n            data.deathsDate = rowDate\n            data.deathsDateYMD = c.date\n          }\n          // Deaths by Death Date\n          if (data.deathsNewAct == null && c.newDeaths28DaysByDeathDate != null) {\n            data.deathsNewAct = (c.newDeaths28DaysByDeathDate || '').toLocaleString()\n            data.deathsCumAct = (c.cumDeaths28DaysByDeathDate || '').toLocaleString()\n            data.deathsRateAct = c.cumDeaths28DaysByDeathDateRate\n            data.deathsDateAct = rowDate\n          }\n          // Cases Published\n          if (data.casesNew == null && c.newCasesByPublishDate != null) {\n            data.casesNew = (c.newCasesByPublishDate || '').toLocaleString()\n            data.casesCum = (c.cumCasesByPublishDate || '').toLocaleString()\n            data.casesRate = c.cumCasesByPublishDateRate\n            data.casesDate = rowDate\n            data.casesDateYMD = c.date\n          }\n          // Cases by specimen date\n          if (data.casesNewAct == null && c.newCasesBySpecimenDate != null) {\n            data.casesNewAct = (c.newCasesBySpecimenDate || '').toLocaleString()\n            data.casesCumAct = (c.cumCasesBySpecimenDate || '').toLocaleString()\n            data.casesRateAct = c.cumCasesBySpecimenDateRate\n            data.casesDateAct = rowDate\n          }\n          // Tests\n          if (data.newP1 == null && c.newPillarOneTestsByPublishDate != null) {\n            data.newP1 = (c.newPillarOneTestsByPublishDate || '').toLocaleString()\n            data.newP2 = (c.newPillarTwoTestsByPublishDate || '').toLocaleString()\n            data.newP3 = (c.newPillarThreeTestsByPublishDate || '').toLocaleString()\n            data.newP4 = (c.newPillarFourTestsByPublishDate || '').toLocaleString()\n            data.newTests = (parseInt(c.newPillarOneTestsByPublishDate || '0') +\n              parseInt(c.newPillarTwoTestsByPublishDate || '0') +\n              parseInt(c.newPillarThreeTestsByPublishDate || '0') +\n              parseInt(c.newPillarFourTestsByPublishDate || '0')).toLocaleString()\n            data.cumP1 = (c.cumPillarOneTestsByPublishDate || '').toLocaleString()\n            data.cumP2 = (c.cumPillarTwoTestsByPublishDate || '').toLocaleString()\n            data.cumP3 = (c.cumPillarThreeTestsByPublishDate || '').toLocaleString()\n            data.cumP4 = (c.cumPillarFourTestsByPublishDate || '').toLocaleString()\n            data.cumTests = (\n              parseInt(c.cumPillarOneTestsByPublishDate || '0') +\n              parseInt(c.cumPillarTwoTestsByPublishDate || '0') +\n              parseInt(c.cumPillarThreeTestsByPublishDate || '0') +\n              parseInt(c.cumPillarFourTestsByPublishDate || '0')).toLocaleString()\n            data.testsDate = rowDate\n          }\n\n          // Hospital patients\n          if (data.hospitalNew == null && c.hospitalCases != null) {\n            data.hospitalNew = (c.hospitalCases).toLocaleString()\n            data.hospitalDate = rowDate\n          }\n          // Hospital admissions\n          if (data.admissionsNew == null && c.newAdmissions != null) {\n            data.admissionsNew = (c.newAdmissions).toLocaleString()\n            data.admissionsCum = (c.cumAdmissions || '').toLocaleString()\n            data.admissionsDate = rowDate\n          }\n          // Intensive care\n          if (data.intensiveCareNew == null && c.covidOccupiedMVBeds != null) {\n            data.intensiveCareNew = (c.covidOccupiedMVBeds).toLocaleString()\n            data.intensiveCareDate = rowDate\n          }\n          // Arrays of date / values after covid start date\n          if (c.date >= '2020-03-01') {\n            if (c.newDeaths28DaysByPublishDate != null) {\n              data.deathsPub[data.deathsPub.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newDeaths28DaysByPublishDate\n              }\n            }\n            if (c.newDeaths28DaysByDeathDate != null) {\n              data.deathsAct[data.deathsAct.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newDeaths28DaysByDeathDate\n              }\n            }\n            if (c.newCasesByPublishDate != null) {\n              data.casesPub[data.casesPub.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newCasesByPublishDate\n              }\n            }\n            if (c.newCasesBySpecimenDate != null) {\n              data.casesAct[data.casesAct.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newCasesBySpecimenDate\n              }\n            }\n            if (c.newPillarOneTestsByPublishDate != null) {\n              data.tests1[data.tests1.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newPillarOneTestsByPublishDate\n              }\n            }\n            if (c.newPillarTwoTestsByPublishDate != null) {\n              data.tests2[data.tests2.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newPillarTwoTestsByPublishDate\n              }\n            }\n            if (c.newPillarThreeTestsByPublishDate != null) {\n              data.tests3[data.tests3.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newPillarThreeTestsByPublishDate\n              }\n            }\n            if (c.newPillarFourTestsByPublishDate != null) {\n              data.tests4[data.tests4.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newPillarFourTestsByPublishDate\n              }\n            }\n            data.testsTot[data.testsTot.length] = {\n              date: c.date,\n              day: rowDay,\n              count1: parseInt(c.newPillarOneTestsByPublishDate || 0) +\n                parseInt(c.newPillarTwoTestsByPublishDate || 0) +\n                parseInt(c.newPillarThreeTestsByPublishDate || 0) +\n                parseInt(c.newPillarFourTestsByPublishDate || 0),\n              count2: parseInt(c.newPillarOneTestsByPublishDate || 0),\n              count3: parseInt(c.newPillarTwoTestsByPublishDate || 0),\n              count4: parseInt(c.newPillarThreeTestsByPublishDate || 0),\n              count5: parseInt(c.newPillarFourTestsByPublishDate || 0),\n            }\n            if (c.hospitalCases != null) {\n              data.patients[data.patients.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.hospitalCases\n              }\n            }\n            if (c.newAdmissions != null) {\n              data.admissions[data.admissions.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.newAdmissions\n              }\n            }\n            if (c.covidOccupiedMVBeds != null) {\n              data.intensiveCare[data.intensiveCare.length] = {\n                date: c.date,\n                day: rowDay,\n                count1: c.covidOccupiedMVBeds\n              }\n            }\n          }\n        }\n      }\n    }\n    return data\n  }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  Tooltip, Legend, CartesianGrid\n} from 'recharts';\n\nexport default function Graph({ data, desc } = this.props) {\n\n  if (data === undefined) data = []\n  if (desc === undefined) desc = []\n\n  const [sizes, setSizes] = useState(\n    {\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n\n  useEffect(() => {\n    function handleResize() {\n      setSizes({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n\n  })\n\n  function CustomTooltip({ payload, label, active }) {\n    if (active && payload != null && payload[0] !== undefined) {\n      return (\n        <div className=\"custom-tooltip\">\n          <div className=\"label\">{(new Date(payload[0].payload.date)).toLocaleDateString()} </div>\n          {payload.map((load) => {\n            return (\n              <div key={load.name}>\n                <span className=\"label\">{load.name} </span>\n                <span className=\"data\">{load.value.toLocaleString()}</span>\n              </div>\n            )\n          })\n          }\n        </div>\n      );\n    }\n    return null;\n  }\n  const formatXAxis = (tickItem) => {\n    const d = new Date(tickItem);\n    return d.toLocaleString('default', { month: 'short' });\n  };\n\n  let w = 0\n  if (sizes.width >= 770) {\n    w = Math.floor(400 * sizes.width / 1440)\n  } else if (sizes.width >= 540) {\n    w = Math.floor(400 * sizes.width / 1440) * (3 / 2)\n  } else {\n    w = Math.floor(400 * sizes.width / 1440) * 3\n  }\n  const h = Math.floor(w * 0.8)\n\n  return (\n    <div className=\"line-chart-wrapper\">\n      <LineChart\n        width={w} height={h} data={data}\n        margin={{ top: 30, right: 10, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid stroke=\"#ccc\" vertical={false} />\n        <YAxis tick={{ fontSize: '0.8rem' }} />\n        <XAxis interval={30} tickFormatter={formatXAxis}\n          tick={{ fontSize: '0.8rem' }} dataKey=\"date\" height={80} />\n        <Tooltip content={<CustomTooltip />} />\n        <Legend verticalAlign=\"bottom\" height={5}\n          wrapperStyle={{ paddingtop: \"20px\" }} />\n\n        <Line name={(desc !== undefined) ? desc[0] : 'data'} type=\"monotone\" dataKey=\"count1\" stroke=\"#ff7300\" dot={false} />\n\n        {(data.length > 0 && data[0].count2 === undefined) ? null :\n          <Line name={desc[1]} type=\"monotone\" dataKey=\"count2\" stroke=\"#003EFF\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count3 === undefined) ? null :\n          <Line name={desc[2]} type=\"monotone\" dataKey=\"count3\" stroke=\"#008000\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count4 === undefined) ? null :\n          <Line name={desc[3]} type=\"monotone\" dataKey=\"count4\" stroke=\"#00C5CD\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count5 === undefined) ? null :\n          <Line name={desc[4]} type=\"monotone\" dataKey=\"count5\" stroke=\"#1A1A1A\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count6 === undefined) ? null :\n          <Line name={desc[5]} type=\"monotone\" dataKey=\"count6\" stroke=\"#8B2500\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count7 === undefined) ? null :\n          <Line name={desc[6]} type=\"monotone\" dataKey=\"count7\" stroke=\"#551A8B\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count8 === undefined) ? null :\n          <Line name={desc[7]} type=\"monotone\" dataKey=\"count8\" stroke=\"#551011\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count9 === undefined) ? null :\n          <Line name={desc[8]} type=\"monotone\" dataKey=\"count9\" stroke=\"#EEC900\" dot={false} />\n        }\n        {(data.length > 0 && data[0].count10 === undefined) ? null :\n          <Line name={desc[9]} type=\"monotone\" dataKey=\"count10\" stroke=\"#F08080\" dot={false} />\n        }\n\n      </LineChart>\n    </div>\n  );\n}\n\n\n","import React from 'react'\n\nexport default function TableData({ data, cols, id } = this.props) {\n  if (data === undefined) data = []\n\n  return (\n    <div className=\"table-wrapper-scroll-y custom-scrollbar\">\n      <div className=\"table-responsive\">\n        <table id={id} className=\"table table-striped table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th>{cols[0]}</th>\n              <th>{cols[1]}</th>\n              <th>{cols[2]}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.map((elem) => {\n                return (\n                  <tr key={(elem.location !== undefined) ? elem.location : elem.date}>\n                    {(elem.date !== undefined)\n                      ? <td>{(new Date(elem.date)).toLocaleDateString()}</td>\n                      : null}\n                    {(elem.location !== undefined)\n                      ? <td>{elem.location}</td>\n                      : null}\n                    {(elem.day !== undefined)\n                      ? <td>{elem.day}</td>\n                      : null}\n                    <td>{elem.count1.toLocaleString()}</td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Deaths(\n  { areaType, datePub, newPub, cumPub, ratePub, deathsPub,\n    dateAct, newAct, cumAct, rateAct, deathsAct, deathsLoc }\n    = this.props) {\n\n  if (deathsPub === undefined) deathsPub = []\n  if (deathsAct === undefined) deathsAct = []\n  const deathsPubSorted = [...deathsPub].sort(compare())\n  const deathsActSorted = [...deathsAct].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Deaths\n          <ul className=\"nav nav-tabs\" id=\"deaths-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-tab\" data-toggle=\"tab\" href=\"#published\" role=\"tab\" aria-controls=\"published\" aria-selected=\"true\">Published</a>\n            </li>\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" id=\"area-deaths-tab\" data-toggle=\"tab\" href=\"#areadeaths\" role=\"tab\" aria-controls=\"areadeaths\" aria-selected=\"false\">Areas</a>\n              </li>\n              : null}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-data-tab\" data-toggle=\"tab\" href=\"#publisheddata\" role=\"tab\" aria-controls=\"publisheddata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-tab\" data-toggle=\"tab\" href=\"#actual\" role=\"tab\" aria-controls=\"actual\" aria-selected=\"false\">Actual</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-data-tab\" data-toggle=\"tab\" href=\"#actualdata\" role=\"tab\" aria-controls=\"actualdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"deaths-content\">\n            <div className=\"tab-pane fade show active\" id=\"published\" role=\"tabpanel\"\n              aria-labelledby=\"published-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {datePub}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {ratePub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={deathsPubSorted} desc={['Deaths by Published Date']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publisheddata\" role=\"tabpanel\" aria-labelledby=\"published-data-tab\">\n              <TableData data={deathsPub} cols={['Date', 'Day', 'Deaths']} id=\"deathspubtable\" />\n            </div>\n\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <div className=\"tab-pane fade\" id=\"areadeaths\" role=\"tabpanel\" aria-labelledby=\"area-deaths-tab\">\n                <TableData data={deathsLoc} cols={['Date', 'Location', 'Deaths']} id=\"casesareatable\" />\n              </div>\n              : null}\n\n            <div className=\"tab-pane fade\" id=\"actual\" role=\"tabpanel\" aria-labelledby=\"actual-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {dateAct}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {rateAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={deathsActSorted} desc={['Deaths by Date of Death']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualdata\" role=\"tabpanel\" aria-labelledby=\"actual-data-tab\">\n              <TableData data={deathsAct} cols={['Date', 'Day', 'Deaths']} id=\"casesacttable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","export const compare = () => {\n  return function (a, b) {\n    if (a.date > b.date) return 1\n    if (a.date < b.date) return -1\n    return 0\n  }\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Cases(\n  { areaType, datePub, newPub, cumPub, ratePub, casesPub,\n    dateAct, newAct, cumAct, rateAct, casesAct, casesLoc }\n    = this.props) {\n\n  if (casesPub === undefined) casesPub = []\n  if (casesAct === undefined) casesAct = []\n  const casesPubSorted = [...casesPub].sort(compare())\n  const casesActSorted = [...casesAct].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Cases\n          <ul className=\"nav nav-tabs\" id=\"cases-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-cases-tab\" data-toggle=\"tab\" href=\"#publishedcases\" role=\"tab\" aria-controls=\"publishedcases\" aria-selected=\"true\">Published</a>\n            </li>\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" id=\"area-cases-tab\" data-toggle=\"tab\" href=\"#areacases\" role=\"tab\" aria-controls=\"areacases\" aria-selected=\"false\">Areas</a>\n              </li>\n              : null}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-cases-data-tab\" data-toggle=\"tab\" href=\"#publishedcasesdata\" role=\"tab\" aria-controls=\"publishedcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-tab\" data-toggle=\"tab\" href=\"#actualcases\" role=\"tab\" aria-controls=\"actualcases\" aria-selected=\"false\">Actual</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-data-tab\" data-toggle=\"tab\" href=\"#actualcasesdata\" role=\"tab\" aria-controls=\"actualcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"cases-content\">\n            <div className=\"tab-pane fade show active\" id=\"publishedcases\" role=\"tabpanel\"\n              aria-labelledby=\"published-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {datePub}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n            </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n            </span>\n                <span className=\"col-sm-6 text-right\">\n                  {ratePub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={casesPubSorted} desc={['Cases by Published Date']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publishedcasesdata\" role=\"tabpanel\" aria-labelledby=\"published-cases-data-tab\">\n              <TableData data={casesPub} cols={['Date', 'Day', 'Cases']} id=\"casespubtable\" />\n            </div>\n\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <div className=\"tab-pane fade\" id=\"areacases\" role=\"tabpanel\" aria-labelledby=\"area-cases-tab\">\n                <TableData data={casesLoc} cols={['Date', 'Location', 'Cases']} id=\"casesareatable\" />\n              </div>\n              : null}\n\n            <div className=\"tab-pane fade\" id=\"actualcases\" role=\"tabpanel\" aria-labelledby=\"actual-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {dateAct}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {rateAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={casesActSorted} desc={['Cases by Specimen Date']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualcasesdata\" role=\"tabpanel\" aria-labelledby=\"actual-cases-data-tab\">\n              <TableData data={casesAct} cols={['Date', 'Day', 'Cases']} id=\"casesacttable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Tests(\n  { date, newP1, newP2, newP3, newP4, newTotal,\n    cumP1, cumP2, cumP3, cumP4, cumTotal,\n    tests1, tests2, tests3, tests4, testsTot } = this.props) {\n  if (tests1 === undefined) tests1 = []\n  if (tests2 === undefined) tests2 = []\n  if (tests3 === undefined) tests3 = []\n  if (tests4 === undefined) tests4 = []\n  if (testsTot === undefined) testsTot = []\n  const testsTotSorted = [...testsTot].sort(compare())\n\n  return (\n\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Tests\n          <ul className=\"nav nav-tabs\" id=\"tests-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"tests-tab\" data-toggle=\"tab\" href=\"#tests\" role=\"tab\" aria-controls=\"tests\" aria-selected=\"true\">Tests</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p1-data-tab\" data-toggle=\"tab\" href=\"#p1data\" role=\"tab\" aria-controls=\"p1data\" aria-selected=\"false\">P1</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p2-data-tab\" data-toggle=\"tab\" href=\"#p2data\" role=\"tab\" aria-controls=\"p2data\" aria-selected=\"false\">P2</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p3-data-tab\" data-toggle=\"tab\" href=\"#p3data\" role=\"tab\" aria-controls=\"p3data\" aria-selected=\"false\">P3</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p4-data-tab\" data-toggle=\"tab\" href=\"#p4data\" role=\"tab\" aria-controls=\"p4data\" aria-selected=\"false\">P4</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"tests-data-tab\" data-toggle=\"tab\" href=\"#testsdata\" role=\"tab\" aria-controls=\"testsdata\" aria-selected=\"false\">Total</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"tests-content\">\n            <div className=\"tab-pane fade show active\" id=\"tests\" role=\"tabpanel\"\n              aria-labelledby=\"tests-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 1\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP1}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP1}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 2\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP2}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP2}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 3\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP3}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP3}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 4\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP4}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP4}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Total\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newTotal}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumTotal}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={testsTotSorted} desc={['Total Tests', 'Pillar 1', 'Pillar 2', 'Pillar 3', 'Pillar 4']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p1data\" role=\"tabpanel\" aria-labelledby=\"p1-data-tab\">\n              <TableData data={tests1} cols={['Date', 'Day', 'Tests']} id=\"testsp1table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p2data\" role=\"tabpanel\" aria-labelledby=\"p2-data-tab\">\n              <TableData data={tests2} cols={['Date', 'Day', 'Tests']} id=\"testsp2table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p3data\" role=\"tabpanel\" aria-labelledby=\"p3-data-tab\">\n              <TableData data={tests3} cols={['Date', 'Day', 'Tests']} id=\"testsp3table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p4data\" role=\"tabpanel\" aria-labelledby=\"p4-data-tab\">\n              <TableData data={tests4} cols={['Date', 'Day', 'Tests']} id=\"testsp4table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"testsdata\" role=\"tabpanel\" aria-labelledby=\"tests-data-tab\">\n              <TableData data={testsTot} cols={['Date', 'Day', 'Tests']} id=\"teststottable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Hospital({ date, latest, patients, regions } = this.props) {\n  if (patients === undefined) patients = []\n  if (regions === undefined) regions = []\n  const patientsSorted = [...patients].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n\n  const nhsRegions = ['East of England', 'London', 'Midlands',\n    'North East and Yorkshire', 'North West', 'South East',\n    'South West']\n\n  return (\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Patients in Hospital\n          <ul className=\"nav nav-tabs\" id=\"patients-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"patients-tab\" data-toggle=\"tab\" href=\"#patients\" role=\"tab\" aria-controls=\"patients\" aria-selected=\"true\">Patients</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"patients-data-tab\" data-toggle=\"tab\" href=\"#patientsdata\" role=\"tab\" aria-controls=\"patientsdata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-data-tab\" data-toggle=\"tab\" href=\"#regionsdata\" role=\"tab\" aria-controls=\"regionsdata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"patients-content\">\n            <div className=\"tab-pane fade show active\" id=\"patients\" role=\"tabpanel\"\n              aria-labelledby=\"patients-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={patientsSorted} desc={['Patients']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"patientsdata\" role=\"tabpanel\" aria-labelledby=\"patients-data-tab\">\n              <TableData data={patients} cols={['Date', 'Day', 'Patients']} id=\"hospitaltable\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"regionsdata\" role=\"tabpanel\"\n              aria-labelledby=\"regions-data-tab\">\n              <div className=\"row\">\n                <Graph data={regionsSorted} desc={nhsRegions} />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Admissions({ date, latest, cumulative, admissions, regions } = this.props) {\n\n  if (admissions === undefined) admissions = []\n  if (regions === undefined) regions = []\n  const admissionsSorted = [...admissions].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n\n  const nhsRegions = ['East of England', 'London', 'Midlands',\n    'North East and Yorkshire', 'North West', 'South East',\n    'South West']\n\n  return (\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Hospital Admissions\n          <ul className=\"nav nav-tabs\" id=\"admissions-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"admissions-tab\" data-toggle=\"tab\" href=\"#admissions\" role=\"tab\" aria-controls=\"admissions\" aria-selected=\"true\">Admissions</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"admissions-data-tab\" data-toggle=\"tab\" href=\"#admissionsdata\" role=\"tab\" aria-controls=\"admissionsdata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-admissions-data-tab\" data-toggle=\"tab\" href=\"#regionsadmissionsdata\" role=\"tab\" aria-controls=\"regionsadmissionsdata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"admissions-content\">\n            <div className=\"tab-pane fade show active\" id=\"admissions\" role=\"tabpanel\"\n              aria-labelledby=\"admissions-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={admissionsSorted} desc={['Admissions']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"admissionsdata\" role=\"tabpanel\" aria-labelledby=\"admissions-data-tab\">\n              <TableData data={admissions} cols={['Date', 'Day', 'Admissions']} id='admissionstable' />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"regionsadmissionsdata\" role=\"tabpanel\"\n              aria-labelledby=\"regions-admissions-data-tab\">\n              <div className=\"row\">\n                <Graph data={regionsSorted} desc={nhsRegions} />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function IntensiveCare({ date, latest, intensiveCare, regions } = this.props) {\n  if (intensiveCare === undefined) intensiveCare = []\n  if (regions === undefined) regions = []\n  const intensiveCareSorted = [...intensiveCare].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n\n  const nhsRegions = ['East of England', 'London', 'Midlands',\n    'North East and Yorkshire', 'North West', 'South East',\n    'South West']\n\n  return (\n    <div className=\"col-md-4 col-sm-6 mb-3\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Intensive Care Beds Occupied\n          <ul className=\"nav nav-tabs\" id=\"intensivecare-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"intensivecare-tab\" data-toggle=\"tab\" href=\"#intensivecare\" role=\"tab\" aria-controls=\"intensivecare\" aria-selected=\"true\">Intensive Care</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"intensivecare-data-tab\" data-toggle=\"tab\" href=\"#intensivecaredata\" role=\"tab\" aria-controls=\"intensivecaredata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-intensivecare-data-tab\" data-toggle=\"tab\" href=\"#regionsintensivecaredata\" role=\"tab\" aria-controls=\"regionsintensivecaredata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"intensivecare-content\">\n            <div className=\"tab-pane fade show active\" id=\"intensivecare\" role=\"tabpanel\"\n              aria-labelledby=\"intensivecare-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={intensiveCareSorted} desc={['Intensive Care']} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"intensivecaredata\" role=\"tabpanel\" aria-labelledby=\"intensivecare-data-tab\">\n              <TableData data={intensiveCare} cols={['Date', 'Day', 'Beds']} id=\"intensivecaretable\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"regionsintensivecaredata\" role=\"tabpanel\"\n              aria-labelledby=\"regions-intensivecare-data-tab\">\n              <div className=\"row\">\n                <Graph data={regionsSorted} desc={nhsRegions} />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <div className=\"col-sm-12\">\n      <p className=\"text-right\">Data from https://api.coronavirus.data.gov.uk/v1/data</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { getUtla } from '../utilities/utla'\nimport { getLtla } from '../utilities/ltla'\n\nexport default function Input({ areaType, areaName, updateAreaTypeAndName } = this.props) {\n\n  const [areaNames, setAreaNames] = useState(['']);\n\n  const nameOptions = {\n    overview: [''],\n    nation: ['England', 'Scotland', 'Wales', 'Northern Ireland'],\n    region: ['East Midlands', 'East of England', 'London', 'North East',\n      'North West', 'South East', 'South West', 'West Midlands',\n      'Yorkshire and The Humber'],\n    nhsRegion: ['East of England', 'London', 'Midlands',\n      'North East and Yorkshire', 'North West', 'South East',\n      'South West'],\n    utla: getUtla(),\n    ltla: getLtla()\n  }\n\n  const onAreaTypeChange = (event) => {\n    setAreaNames(nameOptions[event.target.value])\n  }\n\n  const onSubmitClick = (event) => {\n    updateAreaTypeAndName(\n      document.getElementById(\"areaType\").value,\n      document.getElementById(\"areaName\").value)\n  }\n\n  return (\n\n    <div className=\"container-fluid\">\n      <form className=\"form-inline\">\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaType\" className=\"mr-2\">Area Type</label>\n          <select className=\"form-control w-75 mr-2\" id=\"areaType\" defaultValue={areaType} onChange={onAreaTypeChange}>\n            <option value='overview'>UK</option>\n            <option value='nation'>Nation</option>\n            <option value='region'>Region</option>\n            <option value='nhsRegion'>NHS Region</option>\n            <option value='utla'>Upper-tier Local Authority</option>\n            <option value='ltla'>Lower-tier Local Authority</option>\n          </select>\n        </div>\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaName\" className=\"mr-2\">Area Name</label>\n          <select className=\"form-control w-75\" id=\"areaName\" defaultValue={areaName}>\n            {areaNames.map((name) => (\n              <option value={name} key={name}>{name}</option>\n            ))}\n          </select>\n        </div>\n\n        <input className=\"btn btn-secondary ml-3\" type=\"button\" value=\"Submit\" onClick={onSubmitClick} />\n      </form >\n    </div>\n  )\n}\n","export const getUtla = () => [\n  \"Aberdeen City\",\n  \"Aberdeenshire\",\n  \"Angus\",\n  \"Antrim and Newtownabbey\",\n  \"Ards and North Down\",\n  \"Argyll and Bute\",\n  \"Armagh City, Banbridge and Craigavon\",\n  \"Barking and Dagenham\",\n  \"Barnet\",\n  \"Barnsley\",\n  \"Bath and North East Somerset\",\n  \"Bedford\",\n  \"Belfast\",\n  \"Bexley\",\n  \"Birmingham\",\n  \"Blackburn with Darwen\",\n  \"Blackpool\",\n  \"Blaenau Gwent\",\n  \"Bolton\",\n  \"Bournemouth, Christchurch and Poole\",\n  \"Bracknell Forest\",\n  \"Bradford\",\n  \"Brent\",\n  \"Bridgend\",\n  \"Brighton and Hove\",\n  \"Bristol, City of\",\n  \"Bromley\",\n  \"Buckinghamshire\",\n  \"Bury\",\n  \"Caerphilly\",\n  \"Calderdale\",\n  \"Cambridgeshire\",\n  \"Camden\",\n  \"Cardiff\",\n  \"Carmarthenshire\",\n  \"Causeway Coast and Glens\",\n  \"Central Bedfordshire\",\n  \"Ceredigion\",\n  \"Cheshire East\",\n  \"Cheshire West and Chester\",\n  \"City of Edinburgh\",\n  \"City of London\",\n  \"Clackmannanshire\",\n  \"Conwy\",\n  \"Cornwall and Isles of Scilly\",\n  \"County Durham\",\n  \"Coventry\",\n  \"Croydon\",\n  \"Cumbria\",\n  \"Darlington\",\n  \"Denbighshire\",\n  \"Derby\",\n  \"Derbyshire\",\n  \"Derry City and Strabane\",\n  \"Devon\",\n  \"Doncaster\",\n  \"Dorset\",\n  \"Dudley\",\n  \"Dumfries and Galloway\",\n  \"Dundee City\",\n  \"Ealing\",\n  \"East Ayrshire\",\n  \"East Dunbartonshire\",\n  \"East Lothian\",\n  \"East Renfrewshire\",\n  \"East Riding of Yorkshire\",\n  \"East Sussex\",\n  \"Enfield\",\n  \"Essex\",\n  \"Falkirk\",\n  \"Fermanagh and Omagh\",\n  \"Fife\",\n  \"Flintshire\",\n  \"Gateshead\",\n  \"Glasgow City\",\n  \"Gloucestershire\",\n  \"Greenwich\",\n  \"Gwynedd\",\n  \"Hackney and City of London\",\n  \"Halton\",\n  \"Hammersmith and Fulham\",\n  \"Hampshire\",\n  \"Haringey\",\n  \"Harrow\",\n  \"Hartlepool\",\n  \"Havering\",\n  \"Herefordshire, County of\",\n  \"Hertfordshire\",\n  \"Highland\",\n  \"Hillingdon\",\n  \"Hounslow\",\n  \"Inverclyde\",\n  \"Isle of Anglesey\",\n  \"Isle of Wight\",\n  \"Isles of Scilly\",\n  \"Islington\",\n  \"Kensington and Chelsea\",\n  \"Kent\",\n  \"Kingston upon Hull, City of\",\n  \"Kingston upon Thames\",\n  \"Kirklees\",\n  \"Knowsley\",\n  \"Lambeth\",\n  \"Lancashire\",\n  \"Leeds\",\n  \"Leicester\",\n  \"Leicestershire\",\n  \"Lewisham\",\n  \"Lincolnshire\",\n  \"Lisburn and Castlereagh\",\n  \"Liverpool\",\n  \"Luton\",\n  \"Manchester\",\n  \"Medway\",\n  \"Merthyr Tydfil\",\n  \"Mid and East Antrim\",\n  \"Mid Ulster\",\n  \"Middlesbrough\",\n  \"Midlothian\",\n  \"Milton Keynes\",\n  \"Monmouthshire\",\n  \"Moray\",\n  \"Na h-Eileanan Siar\",\n  \"Neath Port Talbot\",\n  \"Newcastle upon Tyne\",\n  \"Newham\",\n  \"Newport\",\n  \"Newry, Mourne and Down\",\n  \"Norfolk\",\n  \"North Ayrshire\",\n  \"North East Lincolnshire\",\n  \"North Lanarkshire\",\n  \"North Lincolnshire\",\n  \"North Somerset\",\n  \"North Tyneside\",\n  \"North Yorkshire\",\n  \"Northamptonshire\",\n  \"Northumberland\",\n  \"Nottingham\",\n  \"Nottinghamshire\",\n  \"Oldham\",\n  \"Orkney Islands\",\n  \"Oxfordshire\",\n  \"Pembrokeshire\",\n  \"Perth and Kinross\",\n  \"Peterborough\",\n  \"Plymouth\",\n  \"Portsmouth\",\n  \"Powys\",\n  \"Reading\",\n  \"Redbridge\",\n  \"Redcar and Cleveland\",\n  \"Renfrewshire\",\n  \"Resident outside Wales\",\n  \"Rhondda Cynon Taf\",\n  \"Richmond upon Thames\",\n  \"Rochdale\",\n  \"Rotherham\",\n  \"Rutland\",\n  \"Salford\",\n  \"Sandwell\",\n  \"Scottish Borders\",\n  \"Sefton\",\n  \"Sheffield\",\n  \"Shetland Islands\",\n  \"Shropshire\",\n  \"Slough\",\n  \"Solihull\",\n  \"Somerset\",\n  \"South Ayrshire\",\n  \"South Gloucestershire\",\n  \"South Lanarkshire\",\n  \"South Tyneside\",\n  \"Southampton\",\n  \"Southend-on-Sea\",\n  \"Southwark\",\n  \"St. Helens\",\n  \"Staffordshire\",\n  \"Stirling\",\n  \"Stockport\",\n  \"Stockton-on-Tees\",\n  \"Stoke-on-Trent\",\n  \"Suffolk\",\n  \"Sunderland\",\n  \"Surrey\",\n  \"Sutton\",\n  \"Swansea\",\n  \"Swindon\",\n  \"Tameside\",\n  \"Telford and Wrekin\",\n  \"Thurrock\",\n  \"Torbay\",\n  \"Torfaen\",\n  \"Tower Hamlets\",\n  \"Trafford\",\n  \"Vale of Glamorgan\",\n  \"Wakefield\",\n  \"Walsall\",\n  \"Waltham Forest\",\n  \"Wandsworth\",\n  \"Warrington\",\n  \"Warwickshire\",\n  \"West Berkshire\",\n  \"West Dunbartonshire\",\n  \"West Lothian\",\n  \"West Sussex\",\n  \"Westminster\",\n  \"Wigan\",\n  \"Wiltshire\",\n  \"Windsor and Maidenhead\",\n  \"Wirral\",\n  \"Wokingham\",\n  \"Wolverhampton\",\n  \"Worcestershire\",\n  \"Wrexham\",\n  \"York\"\n]\n","export const getLtla = () => [\n  \"Aberdeen City\",\n  \"Aberdeenshire\",\n  \"Adur\",\n  \"Allerdale\",\n  \"Amber Valley\",\n  \"Angus\",\n  \"Antrim and Newtownabbey\",\n  \"Ards and North Down\",\n  \"Argyll and Bute\",\n  \"Armagh City, Banbridge and Craigavon\",\n  \"Arun\",\n  \"Ashfield\",\n  \"Ashford\",\n  \"Aylesbury Vale\",\n  \"Babergh\",\n  \"Barking and Dagenham\",\n  \"Barnet\",\n  \"Barnsley\",\n  \"Barrow-in-Furness\",\n  \"Basildon\",\n  \"Basingstoke and Deane\",\n  \"Bassetlaw\",\n  \"Bath and North East Somerset\",\n  \"Bedford\",\n  \"Belfast\",\n  \"Bexley\",\n  \"Birmingham\",\n  \"Blaby\",\n  \"Blackburn with Darwen\",\n  \"Blackpool\",\n  \"Blaenau Gwent\",\n  \"Bolsover\",\n  \"Bolton\",\n  \"Boston\",\n  \"Bournemouth, Christchurch and Poole\",\n  \"Bracknell Forest\",\n  \"Bradford\",\n  \"Braintree\",\n  \"Breckland\",\n  \"Brent\",\n  \"Brentwood\",\n  \"Bridgend\",\n  \"Brighton and Hove\",\n  \"Bristol, City of\",\n  \"Broadland\",\n  \"Bromley\",\n  \"Bromsgrove\",\n  \"Broxbourne\",\n  \"Broxtowe\",\n  \"Burnley\",\n  \"Bury\",\n  \"Caerphilly\",\n  \"Calderdale\",\n  \"Cambridge\",\n  \"Camden\",\n  \"Cannock Chase\",\n  \"Canterbury\",\n  \"Cardiff\",\n  \"Carlisle\",\n  \"Carmarthenshire\",\n  \"Castle Point\",\n  \"Causeway Coast and Glens\",\n  \"Central Bedfordshire\",\n  \"Ceredigion\",\n  \"Charnwood\",\n  \"Chelmsford\",\n  \"Cheltenham\",\n  \"Cherwell\",\n  \"Cheshire East\",\n  \"Cheshire West and Chester\",\n  \"Chesterfield\",\n  \"Chichester\",\n  \"Chiltern\",\n  \"Chorley\",\n  \"City of Edinburgh\",\n  \"City of London\",\n  \"Clackmannanshire\",\n  \"Colchester\",\n  \"Conwy\",\n  \"Copeland\",\n  \"Corby\",\n  \"Cornwall and Isles of Scilly\",\n  \"Cotswold\",\n  \"County Durham\",\n  \"Coventry\",\n  \"Craven\",\n  \"Crawley\",\n  \"Croydon\",\n  \"Dacorum\",\n  \"Darlington\",\n  \"Dartford\",\n  \"Daventry\",\n  \"Denbighshire\",\n  \"Derby\",\n  \"Derbyshire Dales\",\n  \"Derry City and Strabane\",\n  \"Doncaster\",\n  \"Dorset\",\n  \"Dover\",\n  \"Dudley\",\n  \"Dumfries and Galloway\",\n  \"Dundee City\",\n  \"Ealing\",\n  \"East Ayrshire\",\n  \"East Cambridgeshire\",\n  \"East Devon\",\n  \"East Dunbartonshire\",\n  \"East Hampshire\",\n  \"East Hertfordshire\",\n  \"East Lindsey\",\n  \"East Lothian\",\n  \"East Northamptonshire\",\n  \"East Renfrewshire\",\n  \"East Riding of Yorkshire\",\n  \"East Staffordshire\",\n  \"East Suffolk\",\n  \"Eastbourne\",\n  \"Eastleigh\",\n  \"Eden\",\n  \"Elmbridge\",\n  \"Enfield\",\n  \"Epping Forest\",\n  \"Epsom and Ewell\",\n  \"Erewash\",\n  \"Exeter\",\n  \"Falkirk\",\n  \"Fareham\",\n  \"Fenland\",\n  \"Fermanagh and Omagh\",\n  \"Fife\",\n  \"Flintshire\",\n  \"Folkestone and Hythe\",\n  \"Forest of Dean\",\n  \"Fylde\",\n  \"Gateshead\",\n  \"Gedling\",\n  \"Glasgow City\",\n  \"Gloucester\",\n  \"Gosport\",\n  \"Gravesham\",\n  \"Great Yarmouth\",\n  \"Greenwich\",\n  \"Guildford\",\n  \"Gwynedd\",\n  \"Hackney and City of London\",\n  \"Halton\",\n  \"Hambleton\",\n  \"Hammersmith and Fulham\",\n  \"Harborough\",\n  \"Haringey\",\n  \"Harlow\",\n  \"Harrogate\",\n  \"Harrow\",\n  \"Hart\",\n  \"Hartlepool\",\n  \"Hastings\",\n  \"Havant\",\n  \"Havering\",\n  \"Herefordshire, County of\",\n  \"Hertsmere\",\n  \"High Peak\",\n  \"Highland\",\n  \"Hillingdon\",\n  \"Hinckley and Bosworth\",\n  \"Horsham\",\n  \"Hounslow\",\n  \"Huntingdonshire\",\n  \"Hyndburn\",\n  \"Inverclyde\",\n  \"Ipswich\",\n  \"Isle of Anglesey\",\n  \"Isle of Wight\",\n  \"Isles of Scilly\",\n  \"Islington\",\n  \"Kensington and Chelsea\",\n  \"Kettering\",\n  \"King's Lynn and West Norfolk\",\n  \"Kingston upon Hull, City of\",\n  \"Kingston upon Thames\",\n  \"Kirklees\",\n  \"Knowsley\",\n  \"Lambeth\",\n  \"Lancaster\",\n  \"Leeds\",\n  \"Leicester\",\n  \"Lewes\",\n  \"Lewisham\",\n  \"Lichfield\",\n  \"Lincoln\",\n  \"Lisburn and Castlereagh\",\n  \"Liverpool\",\n  \"Luton\",\n  \"Maidstone\",\n  \"Maldon\",\n  \"Malvern Hills\",\n  \"Manchester\",\n  \"Mansfield\",\n  \"Medway\",\n  \"Melton\",\n  \"Mendip\",\n  \"Merthyr Tydfil\",\n  \"Merton\",\n  \"Mid and East Antrim\",\n  \"Mid Devon\",\n  \"Mid Suffolk\",\n  \"Mid Sussex\",\n  \"Mid Ulster\",\n  \"Middlesbrough\",\n  \"Midlothian\",\n  \"Milton Keynes\",\n  \"Mole Valley\",\n  \"Monmouthshire\",\n  \"Moray\",\n  \"Na h-Eileanan Siar\",\n  \"Neath Port Talbot\",\n  \"New Forest\",\n  \"Newark and Sherwood\",\n  \"Newcastle upon Tyne\",\n  \"Newcastle-under-Lyme\",\n  \"Newham\",\n  \"Newport\",\n  \"Newry, Mourne and Down\",\n  \"North Ayrshire\",\n  \"North Devon\",\n  \"North East Derbyshire\",\n  \"North East Lincolnshire\",\n  \"North Hertfordshire\",\n  \"North Kesteven\",\n  \"North Lanarkshire\",\n  \"North Lincolnshire\",\n  \"North Norfolk\",\n  \"North Somerset\",\n  \"North Tyneside\",\n  \"North Warwickshire\",\n  \"North West Leicestershire\",\n  \"Northampton\",\n  \"Northumberland\",\n  \"Norwich\",\n  \"Nottingham\",\n  \"Nuneaton and Bedworth\",\n  \"Oadby and Wigston\",\n  \"Oldham\",\n  \"Orkney Islands\",\n  \"Oxford\",\n  \"Pembrokeshire\",\n  \"Pendle\",\n  \"Perth and Kinross\",\n  \"Peterborough\",\n  \"Plymouth\",\n  \"Portsmouth\",\n  \"Powys\",\n  \"Preston\",\n  \"Reading\",\n  \"Redbridge\",\n  \"Redcar and Cleveland\",\n  \"Redditch\",\n  \"Reigate and Banstead\",\n  \"Renfrewshire\",\n  \"Resident outside Wales\",\n  \"Rhondda Cynon Taf\",\n  \"Ribble Valley\",\n  \"Richmond upon Thames\",\n  \"Richmondshire\",\n  \"Rochdale\",\n  \"Rochford\",\n  \"Rossendale\",\n  \"Rother\",\n  \"Rotherham\",\n  \"Rugby\",\n  \"Runnymede\",\n  \"Rushcliffe\",\n  \"Rushmoor\",\n  \"Rutland\",\n  \"Ryedale\",\n  \"Salford\",\n  \"Sandwell\",\n  \"Scarborough\",\n  \"Scottish Borders\",\n  \"Sedgemoor\",\n  \"Sefton\",\n  \"Selby\",\n  \"Sevenoaks\",\n  \"Sheffield\",\n  \"Shetland Islands\",\n  \"Shropshire\",\n  \"Slough\",\n  \"Solihull\",\n  \"Somerset West and Taunton\",\n  \"South Ayrshire\",\n  \"South Bucks\",\n  \"South Cambridgeshire\",\n  \"South Derbyshire\",\n  \"South Gloucestershire\",\n  \"South Hams\",\n  \"South Holland\",\n  \"South Kesteven\",\n  \"South Lakeland\",\n  \"South Lanarkshire\",\n  \"South Norfolk\",\n  \"South Northamptonshire\",\n  \"South Oxfordshire\",\n  \"South Ribble\",\n  \"South Somerset\",\n  \"South Staffordshire\",\n  \"South Tyneside\",\n  \"Southampton\",\n  \"Southend-on-Sea\",\n  \"Southwark\",\n  \"Spelthorne\",\n  \"St Albans\",\n  \"St. Helens\",\n  \"Stafford\",\n  \"Staffordshire Moorlands\",\n  \"Stevenage\",\n  \"Stirling\",\n  \"Stockport\",\n  \"Stockton-on-Tees\",\n  \"Stoke-on-Trent\",\n  \"Stratford-on-Avon\",\n  \"Stroud\",\n  \"Sunderland\",\n  \"Surrey Heath\",\n  \"Sutton\",\n  \"Swale\",\n  \"Swansea\",\n  \"Swindon\",\n  \"Tameside\",\n  \"Tamworth\",\n  \"Tandridge\",\n  \"Teignbridge\",\n  \"Telford and Wrekin\",\n  \"Tendring\",\n  \"Test Valley\",\n  \"Tewkesbury\",\n  \"Thanet\",\n  \"Three Rivers\",\n  \"Thurrock\",\n  \"Tonbridge and Malling\",\n  \"Torbay\",\n  \"Torfaen\",\n  \"Torridge\",\n  \"Tower Hamlets\",\n  \"Trafford\",\n  \"Tunbridge Wells\",\n  \"Uttlesford\",\n  \"Vale of Glamorgan\",\n  \"Vale of White Horse\",\n  \"Wakefield\",\n  \"Walsall\",\n  \"Waltham Forest\",\n  \"Wandsworth\",\n  \"Warrington\",\n  \"Warwick\",\n  \"Watford\",\n  \"Waverley\",\n  \"Wealden\",\n  \"Wellingborough\",\n  \"Welwyn Hatfield\",\n  \"West Berkshire\",\n  \"West Devon\",\n  \"West Dunbartonshire\",\n  \"West Lancashire\",\n  \"West Lindsey\",\n  \"West Lothian\",\n  \"West Oxfordshire\",\n  \"West Suffolk\",\n  \"Westminster\",\n  \"Wigan\",\n  \"Wiltshire\",\n  \"Winchester\",\n  \"Windsor and Maidenhead\",\n  \"Wirral\",\n  \"Woking\",\n  \"Wokingham\",\n  \"Wolverhampton\",\n  \"Worcester\",\n  \"Worthing\",\n  \"Wrexham\",\n  \"Wychavon\",\n  \"Wycombe\",\n  \"Wyre\",\n  \"Wyre Forest\",\n  \"York\"\n]\n","import React, { useState, useEffect } from 'react'\nimport Data from '../utilities/Data'\nimport Deaths from '../components/Deaths'\nimport Cases from '../components/Cases'\nimport Tests from '../components/Tests'\nimport Hospital from '../components/Hospital'\nimport Admissions from '../components/Admissions'\nimport IntensiveCare from '../components/IntensiveCare'\nimport Footer from '../components/Footer'\nimport Input from '../components/Input'\nimport './App.css'\n\nfunction App() {\n\n  const [areaType, setAreaType] = useState('overview')\n  const [areaName, setAreaName] = useState('')\n  const [apiData, setAPIData] = useState({})\n  const [apiCaseData, setAPICaseData] = useState([])\n  const [apiDeathData, setAPIDeathData] = useState([])\n  const [apiHospitalData, setAPIHospitalData] = useState({})\n  const [noData, setNoData] = useState(false)\n\n  useEffect(() => {\n    let data = new Data(areaType, areaName)\n    data\n      .getAPIData()\n      .then((response) => {\n        setAPIData(response)\n        setNoData(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setNoData(true)\n      })\n    data = null\n  }, [areaType, areaName]);\n\n  useEffect(() => {\n    let data = new Data(areaType, areaName)\n    if (apiData !== undefined && apiData.casesDateYMD != null) {\n      data\n        .getAPICaseDataByLA(apiData.casesDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPICaseData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n    if (apiData !== undefined && apiData.deathsDateYMD != null) {\n      data\n        .getAPIDeathDataByLA(apiData.deathsDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPIDeathData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [apiData.deathsDate, apiData.casesDate, areaType, areaName]);\n\n  useEffect(() => {\n    let data = new Data()\n    data\n      .getAPIHospitalDataByNHSRegion()\n      .then((response) => {\n        setAPIHospitalData(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }, []);\n\n  const updateAreaTypeAndName = (newAreaType, newAreaName) => {\n    setAreaType(newAreaType)\n    setAreaName(newAreaName)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"display-md-4 display-xs-2 text-center\">Coronavirus {areaName === '' ? 'UK' : areaName}</h1>\n      {(noData)\n        ?\n        <p className=\"display-md-3 display-xs-2 text-center text-danger\">\n          No data is currently available</p>\n        : null\n      }\n      <div className=\"container-fluid\">\n        <div className=\"row mb-3\">\n          <Input areaType={areaType} areaName={areaName}\n            updateAreaTypeAndName={updateAreaTypeAndName} />\n        </div>\n        {\n          (areaType === 'nhsRegion')\n            ? null\n            :\n            <div className=\"row\">\n              <Deaths\n                areaType={areaType}\n                datePub={apiData.deathsDate}\n                newPub={apiData.deathsNew}\n                cumPub={apiData.deathsCum}\n                ratePub={apiData.deathsRate}\n                deathsPub={apiData.deathsPub}\n                dateAct={apiData.deathsDateAct}\n                newAct={apiData.deathsNewAct}\n                cumAct={apiData.deathsCumAct}\n                rateAct={apiData.deathsRateAct}\n                deathsAct={apiData.deathsAct}\n                deathsLoc={apiDeathData}\n              />\n              <Cases\n                areaType={areaType}\n                datePub={apiData.casesDate}\n                newPub={apiData.casesNew}\n                cumPub={apiData.casesCum}\n                ratePub={apiData.casesRate}\n                casesPub={apiData.casesPub}\n                dateAct={apiData.casesDateAct}\n                newAct={apiData.casesNewAct}\n                cumAct={apiData.casesCumAct}\n                rateAct={apiData.casesRateAct}\n                casesAct={apiData.casesAct}\n                casesLoc={apiCaseData}\n              />\n              {\n                (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n                  ? null\n                  :\n                  <Tests\n                    date={apiData.testsDate}\n                    newP1={apiData.newP1}\n                    newP2={apiData.newP2}\n                    newP3={apiData.newP3}\n                    newP4={apiData.newP4}\n                    newTotal={apiData.newTests}\n                    cumP1={apiData.cumP1}\n                    cumP2={apiData.cumP2}\n                    cumP3={apiData.cumP3}\n                    cumP4={apiData.cumP4}\n                    cumTotal={apiData.cumTests}\n                    tests1={apiData.tests1}\n                    tests2={apiData.tests2}\n                    tests3={apiData.tests3}\n                    tests4={apiData.tests4}\n                    testsTot={apiData.testsTot}\n                  />\n              }\n            </div>\n        }\n        {\n          (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n            ? null\n            :\n            <div className=\"row\">\n              <Hospital\n                date={apiData.hospitalDate}\n                latest={apiData.hospitalNew}\n                patients={apiData.patients}\n                regions={apiHospitalData.patients}\n              />\n              <Admissions\n                date={apiData.admissionsDate}\n                latest={apiData.admissionsNew}\n                cumulative={apiData.admissionsCum}\n                admissions={apiData.admissions}\n                regions={apiHospitalData.admissions}\n              />\n              <IntensiveCare\n                date={apiData.intensiveCareDate}\n                latest={apiData.intensiveCareNew}\n                intensiveCare={apiData.intensiveCare}\n                regions={apiHospitalData.intensiveCare}\n              />\n            </div>\n        }\n        <div className=\"row mb-5\">\n          <Footer />\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}