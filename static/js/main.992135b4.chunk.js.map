{"version":3,"sources":["utilities/DataStructures.js","utilities/Utils.js","utilities/Data.js","utilities/CustomTooltip.js","utilities/CustomizedAxisTick.js","utilities/Chart.js","utilities/Graph.js","utilities/TableData.js","components/Deaths.js","utilities/Barchart.js","components/Cases.js","components/Tests.js","components/Hospital.js","components/Admissions.js","components/VentilatorBeds.js","components/WorldWideDeaths.js","components/WorldWideCases.js","components/Footer.js","components/Input.js","utilities/utla.js","utilities/ltla.js","containers/App.js","serviceWorker.js","index.js"],"names":["structureAll","structureDeaths","structureCases","structureHospital","structureRegion","structureNation","getChartSize","sizes","w","width","Math","floor","h","weekdays","apiUrl","ukRegionsNhs","ukRegions","ukNations","Data","areaType","areaName","this","filters","request","JSON","stringify","fetch","response","json","results","requiredData","extractRequiredFields","data","latest","deaths","i","length","status","undefined","filter","la","prefix","code","charAt","count","latestDate","Date","setDate","getDate","getFullYear","getMonth","slice","sort","a","b","deathsByLocation","map","locn","date","location","counts","cases","casesByLocation","hosp","region","k","c","rowDay","getDay","patients","get7DayAverage","admissions","ventilatorBeds","hospital","patientsAve","admissionsAve","ventilatorBedsAve","Object","entries","key","value","day","reg","deathsAct","casesAct","regions","deathsAve","casesAve","apiData","field","tot","val","newDeathsPub","newDeathsAct","newCasesPub","newCasesAct","hospitalCases","newAdmissions","covidOccupiedMVBeds","nat","nations","records","dateRep","countriesAndTerritories","casesTot","deathsTot","round","Number","rate","EPSILON","dateLatest","deathsDate","deathsDateYMD","deathsNew","deathsCum","deathsRate","deathsAverage","deathsDateAct","deathsNewAct","deathsCumAct","deathsRateAct","deathsAverageAct","casesDate","casesDateYMD","casesNew","casesCum","casesRate","casesAverage","casesDateAct","casesNewAct","casesCumAct","casesRateAct","casesAverageAct","hospitalDate","hospitalNew","hospitalAverage","admissionsDate","admissionsNew","admissionsCum","admissionsAverage","ventilatorBedsDate","ventilatorBedsNew","ventilatorBedsAverage","testsDate","newP1","newP2","newP3","newP4","newTests","cumP1","cumP2","cumP3","cumP4","cumTests","maleCases","femaleCases","totalGenderCases","genderDate","deathsPub","casesPub","casesByGender","tests1","tests2","tests3","tests4","testsTot","admissionsByAge","d","rowDate","toLocaleDateString","toLocaleString","cumDeathsPub","cumDeathsPubRate","cumDeathsAct","cumDeathsActRate","cumCasesPub","cumCasesPubRate","cumCasesAct","cumCasesActRate","caseAgeRanges","maleCasesByAgeNow","femaleCasesByAgeNow","forEach","age","loc","indexOf","reduce","g","lines","newPillarOneTestsByPublishDate","newPillarTwoTestsByPublishDate","newPillarThreeTestsByPublishDate","newPillarFourTestsByPublishDate","cumPillarOneTestsByPublishDate","cumPillarTwoTestsByPublishDate","cumPillarThreeTestsByPublishDate","cumPillarFourTestsByPublishDate","cumAdmissions","parseInt","admAgeRanges","admByAge","admByAgePrev","cumAdmissionsByAge","CustomTooltip","payload","label","active","xaxis","className","load","name","CustomizedAxisTick","props","x","y","stroke","transform","dy","textAnchor","fill","fontSize","Chart","desc","linesDesc","useState","height","window","innerHeight","innerWidth","setSizes","useEffect","handleResize","addEventListener","removeEventListener","formatXAxis","tickItem","month","strokeColours","fillColours","lineStrokeColours","margin","top","right","left","bottom","tick","tickFormatter","interval","dataKey","vertical","content","verticalAlign","wrapperStyle","paddingtop","type","stackId","fillOpacity","dot","hide","Graph","TableData","cols","id","elem","country","Deaths","datePub","newPub","cumPub","ratePub","averPub","dateAct","newAct","cumAct","rateAct","averAct","deathsLoc","regionsAct","regionsAve","nationsAct","deathsPubSorted","deathsActSorted","regionsSorted","regionsAveSorted","descAct","regAve","setRegAve","switchMode","nationsActSorted","totAct","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","onClick","Barchart","Cases","casesLoc","casesPubSorted","casesActSorted","Tests","newTotal","cumTotal","testsTotSorted","Hospital","average","patientsSorted","Admissions","cumulative","admissionsSorted","admissionsByAgeSorted","VentilatorBeds","ventilatorBedsSorted","WorldWideDeaths","deathsSorted","deathsTop","splice","WorldWideCases","casesSorted","casesTop","Footer","Input","updateAreaTypeAndName","areaNames","setAreaNames","nameOptions","overview","nation","nhsRegion","utla","ltla","world","onAreaTypeChange","event","target","onSubmitClick","document","getElementById","defaultValue","onChange","App","setAreaType","setAreaName","setAPIData","apiCaseData","setAPICaseData","apiDeathData","setAPIDeathData","apiHospitalData","setAPIHospitalData","apiRegionData","setAPIRegionData","apiNationData","setAPINationData","ecdcCountryData","setECDCCountryData","noData","setNoData","getAPIData","then","catch","err","console","log","getAPICaseDataByLA","getAPIDeathDataByLA","getAPIHospitalDataByNHSRegion","getAPIRegionData","getAPINationData","getECDCData","newAreaType","newAreaName","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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AAW,CAAC,kBAAmB,SAAU,WACvC,2BAA4B,aAAc,aAC1C,cACFC,KCjByB,CAC3B,gBACA,gBACA,QACA,0BACA,sBACA,kBACA,uCACA,uBACA,SACA,WACA,+BACA,UACA,UACA,SACA,aACA,wBACA,YACA,gBACA,SACA,sCACA,mBACA,WACA,QACA,WACA,oBACA,mBACA,UACA,kBACA,OACA,aACA,aACA,iBACA,SACA,UACA,kBACA,2BACA,uBACA,aACA,gBACA,4BACA,oBACA,iBACA,mBACA,QACA,+BACA,gBACA,WACA,UACA,UACA,aACA,eACA,QACA,aACA,0BACA,QACA,YACA,SACA,SACA,wBACA,cACA,SACA,gBACA,sBACA,eACA,oBACA,2BACA,cACA,UACA,QACA,UACA,sBACA,OACA,aACA,YACA,eACA,kBACA,YACA,UACA,6BACA,SACA,yBACA,YACA,WACA,SACA,aACA,WACA,2BACA,gBACA,WACA,aACA,WACA,aACA,mBACA,gBACA,kBACA,YACA,yBACA,OACA,8BACA,uBACA,WACA,WACA,UACA,aACA,QACA,YACA,iBACA,WACA,eACA,0BACA,YACA,QACA,aACA,SACA,iBACA,sBACA,aACA,gBACA,aACA,gBACA,gBACA,QACA,qBACA,oBACA,sBACA,SACA,UACA,yBACA,UACA,iBACA,0BACA,oBACA,qBACA,iBACA,iBACA,kBACA,mBACA,iBACA,aACA,kBACA,SACA,iBACA,cACA,gBACA,oBACA,eACA,WACA,aACA,QACA,UACA,YACA,uBACA,eACA,yBACA,oBACA,uBACA,WACA,YACA,UACA,UACA,WACA,mBACA,SACA,YACA,mBACA,aACA,SACA,WACA,WACA,iBACA,wBACA,oBACA,iBACA,cACA,kBACA,YACA,aACA,gBACA,WACA,YACA,mBACA,iBACA,UACA,aACA,SACA,SACA,UACA,UACA,WACA,qBACA,WACA,SACA,UACA,gBACA,WACA,oBACA,YACA,UACA,iBACA,aACA,aACA,eACA,iBACA,sBACA,eACA,cACA,cACA,QACA,YACA,yBACA,SACA,YACA,gBACA,iBACA,UACA,QDtMEC,KElByB,CAC3B,gBACA,gBACA,OACA,YACA,eACA,QACA,0BACA,sBACA,kBACA,uCACA,OACA,WACA,UACA,iBACA,UACA,uBACA,SACA,WACA,oBACA,WACA,wBACA,YACA,+BACA,UACA,UACA,SACA,aACA,QACA,wBACA,YACA,gBACA,WACA,SACA,SACA,sCACA,mBACA,WACA,YACA,YACA,QACA,YACA,WACA,oBACA,mBACA,YACA,UACA,aACA,aACA,WACA,UACA,OACA,aACA,aACA,YACA,SACA,gBACA,aACA,UACA,WACA,kBACA,eACA,2BACA,uBACA,aACA,YACA,aACA,aACA,WACA,gBACA,4BACA,eACA,aACA,WACA,UACA,oBACA,iBACA,mBACA,aACA,QACA,WACA,QACA,+BACA,WACA,gBACA,WACA,SACA,UACA,UACA,UACA,aACA,WACA,WACA,eACA,QACA,mBACA,0BACA,YACA,SACA,QACA,SACA,wBACA,cACA,SACA,gBACA,sBACA,aACA,sBACA,iBACA,qBACA,eACA,eACA,wBACA,oBACA,2BACA,qBACA,eACA,aACA,YACA,OACA,YACA,UACA,gBACA,kBACA,UACA,SACA,UACA,UACA,UACA,sBACA,OACA,aACA,uBACA,iBACA,QACA,YACA,UACA,eACA,aACA,UACA,YACA,iBACA,YACA,YACA,UACA,6BACA,SACA,YACA,yBACA,aACA,WACA,SACA,YACA,SACA,OACA,aACA,WACA,SACA,WACA,2BACA,YACA,YACA,WACA,aACA,wBACA,UACA,WACA,kBACA,WACA,aACA,UACA,mBACA,gBACA,kBACA,YACA,yBACA,YACA,+BACA,8BACA,uBACA,WACA,WACA,UACA,YACA,QACA,YACA,QACA,WACA,YACA,UACA,0BACA,YACA,QACA,YACA,SACA,gBACA,aACA,YACA,SACA,SACA,SACA,iBACA,SACA,sBACA,YACA,cACA,aACA,aACA,gBACA,aACA,gBACA,cACA,gBACA,QACA,qBACA,oBACA,aACA,sBACA,sBACA,uBACA,SACA,UACA,yBACA,iBACA,cACA,wBACA,0BACA,sBACA,iBACA,oBACA,qBACA,gBACA,iBACA,iBACA,qBACA,4BACA,cACA,iBACA,UACA,aACA,wBACA,oBACA,SACA,iBACA,SACA,gBACA,SACA,oBACA,eACA,WACA,aACA,QACA,UACA,UACA,YACA,uBACA,WACA,uBACA,eACA,yBACA,oBACA,gBACA,uBACA,gBACA,WACA,WACA,aACA,SACA,YACA,QACA,YACA,aACA,WACA,UACA,UACA,UACA,WACA,cACA,mBACA,YACA,SACA,QACA,YACA,YACA,mBACA,aACA,SACA,WACA,4BACA,iBACA,cACA,uBACA,mBACA,wBACA,aACA,gBACA,iBACA,iBACA,oBACA,gBACA,yBACA,oBACA,eACA,iBACA,sBACA,iBACA,cACA,kBACA,YACA,aACA,YACA,aACA,WACA,0BACA,YACA,WACA,YACA,mBACA,iBACA,oBACA,SACA,aACA,eACA,SACA,QACA,UACA,UACA,WACA,WACA,YACA,cACA,qBACA,WACA,cACA,aACA,SACA,eACA,WACA,wBACA,SACA,UACA,WACA,gBACA,WACA,kBACA,aACA,oBACA,sBACA,YACA,UACA,iBACA,aACA,aACA,UACA,UACA,WACA,UACA,iBACA,kBACA,iBACA,aACA,sBACA,kBACA,eACA,eACA,mBACA,eACA,cACA,QACA,YACA,aACA,yBACA,SACA,SACA,YACA,gBACA,YACA,WACA,UACA,WACA,UACA,OACA,cACA,QF5WEC,MAAO,CAAC,KAGJC,EAAmB,SAACC,GACxBT,EAAaC,EAAYQ,EAAMC,OAAOhQ,SAGlCiQ,EAAgB,SAACF,GACrBX,EACEc,SAASC,eAAe,YAAYnQ,MACpCkQ,SAASC,eAAe,YAAYnQ,QAGxC,OAEE,yBAAKgI,UAAU,mBACb,yBAAKA,UAAU,YACb,0BAAMA,UAAU,qBAEd,yBAAKA,UAAU,iCAEb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,2BAAhB,cAEF,4BAAQA,UAAU,6BAA6BsD,GAAG,WAAW8E,aAAcj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","file":"static/js/main.992135b4.chunk.js","sourcesContent":["export const structureAll = {\n  \"areaType\": \"areaType\",\n  \"areaName\": \"areaName\",\n  \"areaCode\": \"areaCode\",\n  \"date\": \"date\",\n  \"newCasesPub\": \"newCasesByPublishDate\",\n  \"cumCasesPub\": \"cumCasesByPublishDate\",\n  \"cumCasesPubRate\": \"cumCasesByPublishDateRate\",\n  \"newCasesAct\": \"newCasesBySpecimenDate\",\n  \"cumCasesAct\": \"cumCasesBySpecimenDate\",\n  \"cumCasesActRate\": \"cumCasesBySpecimenDateRate\",\n  \"maleCases\": \"maleCases\",\n  \"femaleCases\": \"femaleCases\",\n  \"newPillarOneTestsByPublishDate\": \"newPillarOneTestsByPublishDate\",\n  \"cumPillarOneTestsByPublishDate\": \"cumPillarOneTestsByPublishDate\",\n  \"newPillarTwoTestsByPublishDate\": \"newPillarTwoTestsByPublishDate\",\n  \"cumPillarTwoTestsByPublishDate\": \"cumPillarTwoTestsByPublishDate\",\n  \"newPillarThreeTestsByPublishDate\": \"newPillarThreeTestsByPublishDate\",\n  \"cumPillarThreeTestsByPublishDate\": \"cumPillarThreeTestsByPublishDate\",\n  \"newPillarFourTestsByPublishDate\": \"newPillarFourTestsByPublishDate\",\n  \"cumPillarFourTestsByPublishDate\": \"cumPillarFourTestsByPublishDate\",\n  \"newAdmissions\": \"newAdmissions\",\n  \"cumAdmissions\": \"cumAdmissions\",\n  \"cumAdmissionsByAge\": \"cumAdmissionsByAge\",\n  \"cumTests\": \"cumTestsByPublishDate\",\n  \"newTests\": \"newTestsByPublishDate\",\n  \"covidOccupiedMVBeds\": \"covidOccupiedMVBeds\",\n  \"hospitalCases\": \"hospitalCases\",\n  \"plannedCapacityByPublishDate\": \"plannedCapacityByPublishDate\",\n  \"newDeathsPub\": \"newDeaths28DaysByPublishDate\",\n  \"cumDeathsPub\": \"cumDeaths28DaysByPublishDate\",\n  \"cumDeathsPubRate\": \"cumDeaths28DaysByPublishDateRate\",\n  \"newDeathsAct\": \"newDeaths28DaysByDeathDate\",\n  \"cumDeathsAct\": \"cumDeaths28DaysByDeathDate\",\n  \"cumDeathsActRate\": \"cumDeaths28DaysByDeathDateRate\",\n}\n\nexport const structureDeaths = {\n  \"locn\": \"areaName\",\n  \"code\": \"areaCode\",\n  \"date\": \"date\",\n  \"count\": \"newDeaths28DaysByPublishDate\",\n}\n\nexport const structureCases = {\n  \"locn\": \"areaName\",\n  \"code\": \"areaCode\",\n  \"date\": \"date\",\n  \"count\": \"newCasesByPublishDate\",\n}\n\nexport const structureHospital = {\n  \"locn\": \"areaName\",\n  \"code\": \"areaCode\",\n  \"date\": \"date\",\n  \"admissions\": \"newAdmissions\",\n  \"ventilatorBeds\": \"covidOccupiedMVBeds\",\n  \"patients\": \"hospitalCases\"\n}\n\nexport const structureRegion = {\n  \"locn\": \"areaName\",\n  \"code\": \"areaCode\",\n  \"date\": \"date\",\n  \"deaths\": \"newDeaths28DaysByPublishDate\",\n  \"cases\": \"newCasesByPublishDate\",\n  \"deathsAct\": \"newDeaths28DaysByDeathDate\",\n  \"casesAct\": \"newCasesBySpecimenDate\",\n}\nexport const structureNation = {\n  \"locn\": \"areaName\",\n  \"code\": \"areaCode\",\n  \"date\": \"date\",\n  \"deaths\": \"newDeaths28DaysByPublishDate\",\n  \"cases\": \"newCasesByPublishDate\",\n  \"deathsAct\": \"newDeaths28DaysByDeathDate\",\n  \"casesAct\": \"newCasesBySpecimenDate\",\n}","export const compare = () => {\n  return function (a, b) {\n    if (a.date > b.date) return 1\n    if (a.date < b.date) return -1\n    return 0\n  }\n}\n\nexport const getChartSize = (sizes) => {\n  let w = 0\n\n  if (sizes.width >= 992) {\n    w = Math.floor(400 * sizes.width / 1440)\n  } else if (sizes.width >= 576) {\n    w = Math.floor(400 * sizes.width / 1440) * (3 / 2)\n  } else {\n    w = Math.floor(400 * sizes.width / 1440) * 3\n  }\n  const h = Math.floor(w * 0.8)\n\n  return ({ w, h })\n}\n\nexport const weekdays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat']\n\nexport const apiUrl = \"https://api.coronavirus.data.gov.uk/v1/data\"\n\nexport const ecdcUrl = \"https://cors-anywhere.herokuapp.com/\" + \"https://opendata.ecdc.europa.eu/covid19/casedistribution/json/\"\n\nexport const ukRegionsNhs = ['East of England', 'London', 'Midlands',\n  'North East and Yorkshire', 'North West', 'South East',\n  'South West', 'Scotland', 'Wales', 'Northern Ireland']\n\nexport const ukRegions = ['East of England', 'London', 'East Midlands', 'North East',\n  'North West', 'South East', 'South West', 'Scotland', 'Wales', 'Northern Ireland', 'West Midlands', 'Yorkshire and The Humber']\n\nexport const ukNations = ['England', 'Scotland', 'Wales', 'Northern Ireland']","import { structureAll, structureDeaths, structureCases, structureHospital, structureRegion, structureNation } from './DataStructures'\nimport { apiUrl, ecdcUrl, weekdays, ukRegionsNhs, ukRegions, ukNations } from './Utils'\n\nexport default class Data {\n\n  constructor(areaType, areaName) {\n    this.areaType = areaType;\n    this.areaName = areaName;\n  }\n\n  // Fetch all available data from the government API for Type/Area\n  async getAPIData() {\n    let filters = `areaType=${this.areaType}`\n    if (this.areaName !== '') {\n      filters += `;areaName=${this.areaName}`\n    }\n    const request = `\n    ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureAll)}\n    `\n    let response = await fetch(request);\n    let results = await response.json();\n    const requiredData = this.extractRequiredFields(results.data)\n    response = null\n    results = null\n    return requiredData;\n  }\n\n  // Fetch todays or most recent death data from API at lowest local authority level\n  // Latest date may be different to UK value \n  async getAPIDeathDataByLA(latest) {\n    let deaths = []\n    let i = 0\n\n    // Try last 3 days or until data found\n    while (deaths.length === 0 && i <= 3) {\n      i += 1\n\n      let filters = \"areaType=ltla\"\n      filters += `;date=${latest}`\n      const request = `\n      ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureDeaths)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      // No data available\n      if (results.status >= 400) continue\n      if (results.data === undefined) continue\n\n      // Filter to results with a non-zero number of deaths \n      // and filter by nation\n      deaths = results.data.filter(la => {\n        const prefix = la.code.charAt(0)\n        return la.count !== 0 &&\n          (\n            this.areaName === '' ||\n            (this.areaName === 'England' && prefix === 'E') ||\n            (this.areaName === 'Scotland' && prefix === 'S') ||\n            (this.areaName === 'Wales' && prefix === 'W') ||\n            (this.areaName === 'Northern Ireland' && prefix === 'N')\n          )\n      })\n\n      // No deaths on this date, go back 1 day\n      if (deaths.length === 0) {\n        const latestDate = new Date(latest)\n        latestDate.setDate(latestDate.getDate() - 1)\n        latest = '' + latestDate.getFullYear() + '-' + (\"0\" + (latestDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + latestDate.getDate()).slice(-2)\n      }\n    }\n\n    // Sort in descending order by number of deaths\n    deaths.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n\n    let deathsByLocation =\n      deaths.map((locn) => {\n        return (\n          {\n            date: locn.date,\n            location: locn.locn,\n            code: locn.code,\n            counts: [locn.count]\n          }\n        )\n      })\n\n    return deathsByLocation;\n  }\n\n  // Fetch todays or most recent cases data from API at lowest local authority level\n  // Latest date may be different to UK value \n  async getAPICaseDataByLA(latest) {\n    let cases = []\n    let i = 0\n\n    // Try last 3 days or until data found\n    while (cases.length === 0 && i <= 3) {\n      i += 1\n      let filters = \"areaType=ltla\"\n      filters += `;date=${latest}`\n      const request = `\n      ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureCases)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      // No data available\n      if (results.status >= 400) continue\n      if (results.data === undefined) continue\n\n      // Filter to results with a non-zero number of cases\n      // and filter by nation\n      cases = results.data.filter(la => {\n        const prefix = la.code.charAt(0)\n        return la.count !== 0 &&\n          (\n            this.areaName === '' ||\n            (this.areaName === 'England' && prefix === 'E') ||\n            (this.areaName === 'Scotland' && prefix === 'S') ||\n            (this.areaName === 'Wales' && prefix === 'W') ||\n            (this.areaName === 'Northern Ireland' && prefix === 'N')\n          )\n      })\n\n      // No cases on this date, go back 1 day\n      if (cases.length === 0) {\n        const latestDate = new Date(latest)\n        latestDate.setDate(latestDate.getDate() - 1)\n        latest = '' + latestDate.getFullYear() + '-' + (\"0\" + (latestDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + latestDate.getDate()).slice(-2)\n      }\n\n    }\n\n    // Sort in descending order by number of cases\n    cases.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n    let casesByLocation =\n      cases.map((locn) => {\n        return (\n          {\n            date: locn.date,\n            location: locn.locn,\n            code: locn.code,\n            counts: [locn.count]\n          }\n        )\n      })\n\n    return casesByLocation;\n  }\n\n  // Fetch todays or most recent hospital data from API\n  async getAPIHospitalDataByNHSRegion() {\n\n    let hosp = {}\n    let region = ''\n\n    // Retrieve data for each region and merge results\n    for (let k = 0; k < ukRegionsNhs.length; k++) {\n      region = ukRegionsNhs[k]\n\n      let filters = \"\"\n      if (region === \"Scotland\" || region === \"Wales\" || region === \"Northern Ireland\") {\n        filters = \"areaType=nation\"\n      } else {\n        filters = \"areaType=nhsRegion\"\n      }\n      filters += `;areaName=${region}`\n      const request = `\n      ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureHospital)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      // No data available\n      if (results.status >= 400) continue\n      if (results.data === undefined) continue\n\n      // Got data\n      if (results.data != null) {\n\n        // Merge with other regions data by date\n        for (let i = 0; i < results.data.length; i++) {\n          const c = results.data[i]\n          const rowDay = weekdays[(new Date(c.date)).getDay()]\n\n          // New date, create empty object\n          if (!(c.date in hosp)) {\n            hosp[c.date] = {\n              'day': rowDay,\n              'patients': [null, null, null, null, null, null, null, null, null, null],\n              'admissions': [null, null, null, null, null, null, null, null, null, null],\n              'ventilatorBeds': [null, null, null, null, null, null, null, null, null, null],\n              'patientsAve': [null, null, null, null, null, null, null, null, null, null],\n              'admissionsAve': [null, null, null, null, null, null, null, null, null, null],\n              'ventilatorBedsAve': [null, null, null, null, null, null, null, null, null, null]\n            }\n          }\n\n          if (c.patients != null) {\n            hosp[c.date]['patients'][k] = c.patients\n            hosp[c.date]['patientsAve'][k] = this.get7DayAverage(results.data, i, \"patients\")\n          }\n          if (c.admissions != null) {\n            hosp[c.date]['admissions'][k] = c.admissions\n            hosp[c.date]['admissionsAve'][k] = this.get7DayAverage(results.data, i, \"admissions\")\n          }\n          if (c.ventilatorBeds != null) {\n            hosp[c.date]['ventilatorBeds'][k] = c.ventilatorBeds\n            hosp[c.date]['ventilatorBedsAve'][k] = this.get7DayAverage(results.data, i, \"ventilatorBeds\")\n          }\n        }\n      }\n    }\n\n    // Split out deaths and cases\n    let hospital = {\n      patients: [],\n      admissions: [],\n      ventilatorBeds: [],\n      patientsAve: [],\n      admissionsAve: [],\n      ventilatorBedsAve: []\n    }\n\n    for (const [key, value] of Object.entries(hosp)) {\n\n      hospital.patients[hospital.patients.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.patients\n      }\n\n      hospital.admissions[hospital.admissions.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.admissions\n      }\n\n      hospital.ventilatorBeds[hospital.ventilatorBeds.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.ventilatorBeds\n      }\n\n      hospital.patientsAve[hospital.patientsAve.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.patientsAve\n      }\n\n      hospital.admissionsAve[hospital.admissionsAve.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.admissionsAve\n      }\n\n      hospital.ventilatorBedsAve[hospital.ventilatorBedsAve.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.ventilatorBedsAve\n      }\n    }\n    return hospital;\n  }\n\n  // Fetch todays or most recent regional data from API\n  async getAPIRegionData() {\n\n    let reg = {}\n    let region = ''\n\n    // Retrieve data for each region and merge results\n    for (let k = 0; k < ukRegions.length; k++) {\n      region = ukRegions[k]\n\n      let filters = \"\"\n      if (region === \"Scotland\" || region === \"Wales\" || region === \"Northern Ireland\") {\n        filters = \"areaType=nation\"\n      } else {\n        filters = \"areaType=region\"\n      }\n      filters += `;areaName=${region}`\n      const request = `\n      ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureRegion)}\n      `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      // No data available\n      if (results.status >= 400) continue\n      if (results.data === undefined) continue\n\n      // Got data\n      if (results.data != null) {\n\n        // Merge with other regions data by date\n        for (let i = 0; i < results.data.length; i++) {\n          const c = results.data[i]\n\n          // Arrays of date / values after region data is available\n          if (c.date >= '2020-03-01' && c.date !== '2020-07-01') {\n            const rowDay = weekdays[(new Date(c.date)).getDay()]\n\n            // New date, create empty object\n            if (!(c.date in reg)) {\n              reg[c.date] = {\n                'day': rowDay,\n                'deaths': [null, null, null, null, null, null, null, null, null, null, null, null],\n                'cases': [null, null, null, null, null, null, null, null, null, null, null, null],\n                'deathsAct': [null, null, null, null, null, null, null, null, null, null, null, null],\n                'casesAct': [null, null, null, null, null, null, null, null, null, null, null, null],\n                'deathsAve': [null, null, null, null, null, null, null, null, null, null, null, null],\n                'casesAve': [null, null, null, null, null, null, null, null, null, null, null, null]\n              }\n            }\n\n            reg[c.date]['deaths'][k] = c.deaths\n            reg[c.date]['cases'][k] = c.cases\n            reg[c.date]['deathsAct'][k] = c.deathsAct\n            reg[c.date]['casesAct'][k] = c.casesAct\n            reg[c.date]['deathsAve'][k] = this.get7DayAverage(results.data, i, 'deaths')\n            reg[c.date]['casesAve'][k] = this.get7DayAverage(results.data, i, 'cases')\n          }\n        }\n      }\n    }\n\n    // Split out deaths and cases\n    let regions = {\n      deaths: [],\n      cases: [],\n      deathsAct: [],\n      casesAct: [],\n      deathsAve: [],\n      casesAve: [],\n    }\n\n    for (const [key, value] of Object.entries(reg)) {\n      if (key >= '2020-08-16') {\n        regions.deaths[regions.deaths.length] = {\n          'date': key,\n          'day': value.day,\n          'counts': value.deaths\n        }\n      }\n      regions.cases[regions.cases.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.cases\n      }\n\n      regions.deathsAct[regions.deathsAct.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.deathsAct\n      }\n\n      regions.casesAct[regions.casesAct.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.casesAct\n      }\n\n      regions.deathsAve[regions.deathsAve.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.deathsAve\n      }\n\n      regions.casesAve[regions.casesAve.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.casesAve\n      }\n    }\n    return regions;\n  }\n\n  get7DayAverage(apiData, i, field) {\n    let tot = 0\n    for (let a = i; a < (i + 7) && a < apiData.length; a++) {\n      let val = 0\n      switch (field) {\n        case \"deaths\":\n          val = apiData[a].deaths\n          break\n        case \"cases\":\n          val = apiData[a].cases\n          break\n        case \"newDeathsPub\":\n          val = apiData[a].newDeathsPub\n          break\n        case \"newDeathsAct\":\n          val = apiData[a].newDeathsAct\n          break\n        case \"newCasesPub\":\n          if (this.areaType !== 'region' ||\n            (this.areaType === 'region' && apiData[a].date !== '2020-07-01')) {\n            val = apiData[a].newCasesPub\n          }\n          break\n        case \"newCasesAct\":\n          val = apiData[a].newCasesAct\n          break\n        case \"hospitalCases\":\n          val = apiData[a].hospitalCases\n          break\n        case \"newAdmissions\":\n          val = apiData[a].newAdmissions\n          break\n        case \"covidOccupiedMVBeds\":\n          val = apiData[a].covidOccupiedMVBeds\n          break\n        case \"patients\":\n          val = apiData[a].patients\n          break\n        case \"admissions\":\n          val = apiData[a].admissions\n          break\n        case \"ventilatorBeds\":\n          val = apiData[a].ventilatorBeds\n          break\n        default:\n          break\n      }\n      if (a < apiData.length && val != null) {\n        tot += val\n      }\n    }\n    return Math.floor(tot / 7)\n  }\n\n  // Fetch todays or most recent nation data from API and accumulate into UK total\n  async getAPINationData() {\n\n    let nat = {}\n    let nation = ''\n\n    // Retrieve data for each region and merge results\n    for (let k = 0; k < ukNations.length; k++) {\n      nation = ukNations[k]\n\n      let filters = \"areaType=nation\"\n      filters += `;areaName=${nation}`\n      const request = `\n        ${apiUrl}?filters=${filters}&structure=${JSON.stringify(structureNation)}\n        `\n      let response = await fetch(request);\n      let results = await response.json();\n\n      // No data available\n      if (results.status >= 400) continue\n      if (results.data === undefined) continue\n\n      // Got data\n      if (results.data != null) {\n\n        // Merge with other nations data by date\n        for (let i = 0; i < results.data.length; i++) {\n          const c = results.data[i]\n\n          // Arrays of date / values after region data is available\n          if (c.date >= '2020-03-01') {\n            const rowDay = weekdays[(new Date(c.date)).getDay()]\n\n            // Got some data for this date\n            if (c.deathsAct != null || c.casesAct != null) {\n              // New date, create empty object\n              if (!(c.date in nat)) {\n                nat[c.date] = {\n                  'day': rowDay,\n                  'deathsAct': [null, null, null, null, null],\n                  'casesAct': [null, null, null, null, null]\n                }\n              }\n\n              nat[c.date]['deathsAct'][k + 1] = c.deathsAct\n              nat[c.date]['casesAct'][k + 1] = c.casesAct\n              nat[c.date]['deathsAct'][0] = nat[c.date]['deathsAct'][0] + c.deathsAct\n              nat[c.date]['casesAct'][0] = nat[c.date]['casesAct'][0] + c.casesAct\n            }\n          }\n        }\n      }\n    }\n\n    // Split out deaths and cases\n    let nations = {\n      deathsAct: [],\n      casesAct: [],\n    }\n\n    for (const [key, value] of Object.entries(nat)) {\n      nations.deathsAct[nations.deathsAct.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.deathsAct\n      }\n      nations.casesAct[nations.casesAct.length] = {\n        'date': key,\n        'day': value.day,\n        'counts': value.casesAct\n      }\n    }\n\n    return nations;\n  }\n\n\n  // Fetch today's worldwide data from ECDC\n  async getECDCData() {\n\n    let nat = {}\n    let latestDate\n\n    let response = await fetch(ecdcUrl)\n    let results = await response.json()\n\n    // Got data\n    if (results.records !== undefined && results.records != null && results.records.length > 0) {\n      latestDate = results.records[0].dateRep\n\n      for (let i = 0; i < results.records.length; i++) {\n\n        const c = results.records[i]\n        // Got some data for this date\n        if (c.cases != null || c.deaths != null) {\n          // New country, create empty object\n          if (!(c.countriesAndTerritories in nat)) {\n            nat[c.countriesAndTerritories] = {\n              'cases': 0,\n              'deaths': 0,\n              'rate': 0,\n            }\n          }\n          // Add into cumulative totals\n          nat[c.countriesAndTerritories]['cases'] =\n            nat[c.countriesAndTerritories]['cases'] + c.cases\n          nat[c.countriesAndTerritories]['deaths'] =\n            nat[c.countriesAndTerritories]['deaths'] + c.deaths\n          if (c.dateRep === latestDate) {\n            nat[c.countriesAndTerritories]['rate'] = c[\"Cumulative_number_for_14_days_of_COVID-19_cases_per_100000\"]\n          }\n        }\n      }\n    }\n\n    let cases = []\n    let deaths = []\n    let casesTot = 0\n    let deathsTot = 0\n    for (const [key, value] of Object.entries(nat)) {\n      cases[cases.length] = {\n        'country': (key === \"United_States_of_America\") ? \"USA\" : key,\n        'counts': [value.cases],\n        'rate': Math.round((Number(value.rate) + Number.EPSILON) * 10) / 10\n      }\n      casesTot += value.cases\n      deaths[deaths.length] = {\n        'country': (key === \"United_States_of_America\") ? \"USA\" : key,\n        'counts': [value.deaths]\n      }\n      deathsTot += value.deaths\n    }\n\n    return { latestDate: latestDate, cases: [...cases], casesTot: casesTot, deaths: [...deaths], deathsTot: deathsTot }\n\n  }\n\n  // Get required fields from the main extract and reformat\n  extractRequiredFields(apiData) {\n\n    const data = {\n      dateLatest: null, deathsDate: null, deathsDateYMD: null, deathsNew: null, deathsCum: null, deathsRate: null, deathsAverage: null, deathsDateAct: null, deathsNewAct: null, deathsCumAct: null, deathsRateAct: null, deathsAverageAct: null, casesDate: null, casesDateYMD: null, casesNew: null, casesCum: null, casesRate: null, casesAverage: null, casesDateAct: null, casesNewAct: null, casesCumAct: null, casesRateAct: null, casesAverageAct: null, hospitalDate: null, hospitalNew: null, hospitalAverage: null, admissionsDate: null, admissionsNew: null, admissionsCum: null, admissionsAverage: null, ventilatorBedsDate: null, ventilatorBedsNew: null, ventilatorBedsAverage: null, testsDate: null, newP1: null, newP2: null, newP3: null, newP4: null, newTests: null, cumP1: null, cumP2: null, cumP3: null, cumP4: null, cumTests: null, maleCases: null, femaleCases: null, totalGenderCases: null, genderDate: null, deathsPub: [], deathsAct: [], casesPub: [], casesAct: [], casesByGender: [], tests1: [], tests2: [], tests3: [], tests4: [], testsTot: [], patients: [], admissions: [], admissionsByAge: [], ventilatorBeds: []\n    }\n\n    // Got data\n    if (apiData !== undefined && apiData.length > 0) {\n      data.dateLatest = apiData[0].date\n\n      // Got the latest date where data is available\n      if (data.dateLatest != null) {\n\n        // Process all dates\n        for (let i = 0; i < apiData.length; i++) {\n          // Current Row\n          const c = apiData[i]\n          // Next Row\n          let d = null\n          if (i + 1 < apiData.length) {\n            d = apiData[i + 1]\n          }\n\n          const rowDate = (new Date(c.date)).toLocaleDateString()\n          const rowDay = weekdays[(new Date(c.date)).getDay()]\n\n          // Get the latest values for each variable, may be on different dates\n\n          // Deaths Published - Set if not already set\n          if (data.deathsNew == null && c.newDeathsPub != null) {\n            data.deathsNew = (c.newDeathsPub || '0').toLocaleString()\n            data.deathsCum = (c.cumDeathsPub || '0').toLocaleString()\n            data.deathsRate = c.cumDeathsPubRate\n            data.deathsDate = rowDate\n            data.deathsDateYMD = c.date\n            data.deathsAverage = this.get7DayAverage(apiData, i, \"newDeathsPub\")\n              .toLocaleString()\n          }\n\n          // Deaths by Death Date - Set if not already set\n          if (data.deathsNewAct == null && c.newDeathsAct != null) {\n            data.deathsNewAct = (c.newDeathsAct || '0').toLocaleString()\n            data.deathsCumAct = (c.cumDeathsAct || '0').toLocaleString()\n            data.deathsRateAct = c.cumDeathsActRate\n            data.deathsDateAct = rowDate\n            data.deathsAverageAct = this.get7DayAverage(apiData, i, \"newDeathsAct\")\n              .toLocaleString()\n          }\n\n          // Cases Published - Set if not already set\n          if (data.casesNew == null && c.newCasesPub != null) {\n            data.casesNew = (c.newCasesPub || '0').toLocaleString()\n            data.casesCum = (c.cumCasesPub || '0').toLocaleString()\n            data.casesRate = c.cumCasesPubRate\n            data.casesDate = rowDate\n            data.casesDateYMD = c.date\n            data.casesAverage = this.get7DayAverage(apiData, i, \"newCasesPub\")\n              .toLocaleString()\n          }\n          // Cases by specimen date - Set if not already set\n          if (data.casesNewAct == null && c.newCasesAct != null) {\n            data.casesNewAct = (c.newCasesAct || '0').toLocaleString()\n            data.casesCumAct = (c.cumCasesAct || '0').toLocaleString()\n            data.casesRateAct = c.cumCasesActRate\n            data.casesDateAct = rowDate\n            data.casesAverageAct = this.get7DayAverage(apiData, i, \"newCasesAct\")\n              .toLocaleString()\n          }\n\n          const caseAgeRanges =\n            [\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\",\n              \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\",\n              \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90+\"]\n\n          const maleCasesByAgeNow = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          const femaleCasesByAgeNow = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          if (data.casesByGender.length === 0 &&\n            (c.maleCases != null || c.femaleCases != null)) {\n            if (c.maleCases != null) {\n              c.maleCases.forEach((age) => {\n                const loc = caseAgeRanges.indexOf(age.age)\n                if (loc !== -1) {\n                  maleCasesByAgeNow[loc] = age.value\n                }\n              })\n            }\n            if (c.femaleCases != null) {\n              c.femaleCases.forEach((age) => {\n                const loc = caseAgeRanges.indexOf(age.age)\n                if (loc !== -1) {\n                  femaleCasesByAgeNow[loc] = age.value\n                }\n              })\n            }\n\n            const maleCases = maleCasesByAgeNow.reduce((tot, val) => {\n              return ((val == null) ? tot : tot + val)\n            }, 0)\n\n            const femaleCases = femaleCasesByAgeNow.reduce((tot, val) => {\n              return ((val == null) ? tot : tot + val)\n            }, 0)\n\n            data.totalGenderCases = (maleCases + femaleCases).toLocaleString()\n            data.maleCases = maleCases.toLocaleString()\n            data.femaleCases = femaleCases.toLocaleString()\n            data.genderDate = rowDate\n\n            for (let g = 0; g < 19; g++) {\n              data.casesByGender[data.casesByGender.length] = {\n                age: caseAgeRanges[g],\n                counts: [maleCasesByAgeNow[g], femaleCasesByAgeNow[g]],\n                lines: [],\n              }\n            }\n          }\n\n          // Tests - Set if not already set\n          if (data.newP1 == null &&\n            (c.newPillarOneTestsByPublishDate != null ||\n              c.newPillarTwoTestsByPublishDate != null ||\n              c.newPillarThreeTestsByPublishDate != null ||\n              c.newPillarFourTestsByPublishDate != null)) {\n            data.newP1 = (c.newPillarOneTestsByPublishDate || '0').toLocaleString()\n            data.newP2 = (c.newPillarTwoTestsByPublishDate || '0').toLocaleString()\n            data.newP3 = (c.newPillarThreeTestsByPublishDate || '0').toLocaleString()\n            data.newP4 = (c.newPillarFourTestsByPublishDate || '0').toLocaleString()\n            data.newTests = (\n              (c.newPillarOneTestsByPublishDate || 0) +\n              (c.newPillarTwoTestsByPublishDate || 0) +\n              (c.newPillarThreeTestsByPublishDate || 0) +\n              (c.newPillarFourTestsByPublishDate || 0)).toLocaleString()\n            data.cumP1 = (c.cumPillarOneTestsByPublishDate || '0').toLocaleString()\n            data.cumP2 = (c.cumPillarTwoTestsByPublishDate || '0').toLocaleString()\n            data.cumP3 = (c.cumPillarThreeTestsByPublishDate || '0').toLocaleString()\n            data.cumP4 = (c.cumPillarFourTestsByPublishDate || '0').toLocaleString()\n            data.cumTests = (\n              (c.cumPillarOneTestsByPublishDate || 0) +\n              (c.cumPillarTwoTestsByPublishDate || 0) +\n              (c.cumPillarThreeTestsByPublishDate || 0) +\n              (c.cumPillarFourTestsByPublishDate || 0)).toLocaleString()\n            data.testsDate = rowDate\n          }\n\n          // Hospital patients - Set if not already set\n          if (data.hospitalNew == null && c.hospitalCases != null) {\n            data.hospitalNew = (c.hospitalCases).toLocaleString()\n            data.hospitalDate = rowDate\n            data.hospitalAverage = this.get7DayAverage(apiData, i, \"hospitalCases\")\n              .toLocaleString()\n          }\n          // Hospital admissions - Set if not already set\n          if (data.admissionsNew == null && c.newAdmissions != null) {\n            data.admissionsNew = (c.newAdmissions).toLocaleString()\n            data.admissionsCum = (c.cumAdmissions || '0').toLocaleString()\n            data.admissionsDate = rowDate\n            data.admissionsAverage = this.get7DayAverage(apiData, i, \"newAdmissions\")\n              .toLocaleString()\n          }\n\n          // Intensive care - Set if not already set\n          if (data.ventilatorBedsNew == null && c.covidOccupiedMVBeds != null) {\n            data.ventilatorBedsNew = (c.covidOccupiedMVBeds).toLocaleString()\n            data.ventilatorBedsDate = rowDate\n            data.ventilatorBedsAverage = this.get7DayAverage(apiData, i, \"covidOccupiedMVBeds\")\n              .toLocaleString()\n          }\n\n          // Arrays of date / values after covid start date\n          if (c.date >= '2020-03-01' && (c.date !== '2020-07-01' || c.areaType !== 'region')) {\n\n            if (c.newDeathsPub != null) {\n              data.deathsPub[data.deathsPub.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newDeathsPub],\n                rate: c.cumDeathsPubRate,\n                lines: [this.get7DayAverage(apiData, i, \"newDeathsPub\")]\n              }\n            }\n            if (c.newDeathsAct != null) {\n              data.deathsAct[data.deathsAct.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newDeathsAct],\n                rate: c.cumDeathsActRate,\n                lines: [this.get7DayAverage(apiData, i, \"newDeathsAct\")],\n              }\n            }\n            if (c.newCasesPub != null) {\n              data.casesPub[data.casesPub.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newCasesPub],\n                rate: c.cumCasesPubRate,\n                lines: [this.get7DayAverage(apiData, i, \"newCasesPub\")],\n              }\n            }\n            if (c.newCasesAct != null) {\n              data.casesAct[data.casesAct.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newCasesAct],\n                rate: c.cumCasesActRate,\n                lines: [this.get7DayAverage(apiData, i, \"newCasesAct\")],\n              }\n            }\n            if (c.newPillarOneTestsByPublishDate != null) {\n              data.tests1[data.tests1.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newPillarOneTestsByPublishDate],\n                lines: []\n              }\n            }\n            if (c.newPillarTwoTestsByPublishDate != null) {\n              data.tests2[data.tests2.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newPillarTwoTestsByPublishDate],\n                lines: []\n              }\n            }\n            if (c.newPillarThreeTestsByPublishDate != null) {\n              data.tests3[data.tests3.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newPillarThreeTestsByPublishDate],\n                lines: []\n              }\n            }\n            if (c.newPillarFourTestsByPublishDate != null) {\n              data.tests4[data.tests4.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newPillarFourTestsByPublishDate],\n                lines: []\n              }\n            }\n            data.testsTot[data.testsTot.length] = {\n              date: c.date,\n              day: rowDay,\n              counts: [\n                parseInt(c.newTests || 0),\n                parseInt(c.newPillarOneTestsByPublishDate || 0),\n                parseInt(c.newPillarTwoTestsByPublishDate || 0),\n                parseInt(c.newPillarThreeTestsByPublishDate || 0),\n                parseInt(c.newPillarFourTestsByPublishDate || 0)\n              ],\n              lines: []\n            }\n\n            if (c.hospitalCases != null || (c.hospitalCases == null && c.date < '2020-04-01')) {\n              data.patients[data.patients.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.hospitalCases],\n                lines: [this.get7DayAverage(apiData, i, \"hospitalCases\")]\n              }\n            }\n            if (c.newAdmissions != null || (c.newAdmissions == null && c.date < '2020-04-01')) {\n              data.admissions[data.admissions.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.newAdmissions],\n                lines: [this.get7DayAverage(apiData, i, \"newAdmissions\")]\n              }\n            }\n            if (c.covidOccupiedMVBeds != null) {\n              data.ventilatorBeds[data.ventilatorBeds.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [c.covidOccupiedMVBeds],\n                lines: [this.get7DayAverage(apiData, i, \"covidOccupiedMVBeds\")]\n              }\n            }\n\n            const admAgeRanges = [\"0_to_5\", \"6_to_17\", \"18_to_64\", \"65_to_84\", \"85+\"]\n            const admByAge = [0, 0, 0, 0, 0]\n            const admByAgePrev = [0, 0, 0, 0, 0]\n\n            if (c.cumAdmissionsByAge != null) {\n              c.cumAdmissionsByAge.forEach((age) => {\n                const loc = admAgeRanges.indexOf(age.age)\n                if (loc !== -1) {\n                  admByAge[loc] = age.value\n                }\n              })\n              if (d && d.cumAdmissionsByAge != null) {\n                d.cumAdmissionsByAge.forEach((age) => {\n                  const loc = admAgeRanges.indexOf(age.age)\n                  if (loc !== -1) {\n                    admByAgePrev[loc] = age.value\n                  }\n                })\n              }\n\n              data.admissionsByAge[data.admissionsByAge.length] = {\n                date: c.date,\n                day: rowDay,\n                counts: [\n                  admByAge[0] - admByAgePrev[0],\n                  admByAge[1] - admByAgePrev[1],\n                  admByAge[2] - admByAgePrev[2],\n                  admByAge[3] - admByAgePrev[3],\n                  admByAge[4] - admByAgePrev[4]\n                ],\n                lines: []\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return data\n  }\n}\n\n","import React from 'react';\n\nexport default function CustomTooltip({ payload, label, active, xaxis }) {\n  if (active && payload != null && payload[0] !== undefined) {\n    if (xaxis === undefined) {\n      xaxis = \"date\"\n    }\n\n    return (\n      <div className=\"custom-tooltip\">\n        <div className=\"label\">\n          {(xaxis === \"date\") ?\n            (new Date(payload[0].payload.date)).toLocaleDateString()\n            : label\n          }\n        </div>\n        {payload.map((load) => {\n          return (\n            <div key={load.name}>\n              <span className=\"label\">{load.name} </span>\n              <span className=\"data\">{load.value.toLocaleString()}</span>\n            </div>\n          )\n        })\n        }\n      </div>\n    );\n  }\n  return null;\n}","import React from 'react';\n\nexport default function CustomizedAxisTick({ x, y, stroke, payload } = this.props) {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text x={0} y={0} dy={5} textAnchor=\"end\" fill=\"#666\" fontSize=\"0.7rem\" transform=\"rotate(-50)\">{payload.value}</text>\n    </g>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport {\n  ComposedChart, Area, XAxis, YAxis, Line,\n  Tooltip, Legend, CartesianGrid\n} from 'recharts';\nimport CustomTooltip from './CustomTooltip'\nimport CustomizedAxisTick from './CustomizedAxisTick'\nimport { getChartSize } from './Utils';\n\nexport default function Chart({ data, desc, linesDesc, xaxis } = this.props) {\n\n  if (data === undefined) data = []\n  if (desc === undefined) desc = []\n  if (linesDesc === undefined) linesDesc = []\n  if (xaxis === undefined) {\n    xaxis = \"date\"\n  }\n\n  const [sizes, setSizes] = useState(\n    {\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n\n  useEffect(() => {\n    function handleResize() {\n      setSizes({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n\n  const formatXAxis = (tickItem) => {\n    const d = new Date(tickItem);\n    return d.toLocaleString('default', { month: 'short' });\n  };\n\n  const { w, h } = getChartSize(sizes)\n  const strokeColours =\n    [\"#7e8a97\", \"#28abb9\", \"#ffe05d\", \"#b8de6f\", \"#01cfc4\",\n      \"#ff9a76\", \"#ffeadb\", \"#637373\", \"#ffcbcb\", \"#e97171\"]\n  const fillColours =\n    [\"#a9b1ba\", \"#28abb9\", \"#ffe05d\", \"#b8de6f\", \"#01cfc4\",\n      \"#ff9a76\", \"#ffeadb\", \"#637373\", \"#ffcbcb\", \"#e97171\"]\n  const lineStrokeColours =\n    [\"#ff7300\", \"#003EFF\", \"#63c47c\", \"#61D8F5\", \"#1A1A1A\",\n      \"#8B2500\", \"#551A8B\", \"#ff0000\", \"#debe3a\", \"#F08080\"]\n\n  return (\n    <div className=\"line-chart-wrapper\">\n      {(data.length === 0)\n        ?\n        <div className=\"text-info font-weight-bold mt-5 ml-3\">\n          No Data currently available at this level\n        </div>\n        :\n        <ComposedChart width={w} height={h} data={data}\n          margin={{ top: 30, right: 10, left: 10, bottom: 10 }}>\n\n          <YAxis width={40} tick={{ fontSize: '0.7rem' }} tickFormatter={tick => {\n            return tick.toLocaleString();\n          }} />\n          {(xaxis === \"date\") ?\n            <XAxis interval={30} tickFormatter={formatXAxis}\n              tick={{ fontSize: '0.7rem' }} dataKey=\"date\" height={50} />\n            :\n            <XAxis interval={1}\n              tick={<CustomizedAxisTick xaxis={xaxis} />} dataKey={xaxis} height={50} />\n          }\n          <CartesianGrid stroke=\"#ccc\" vertical={false} />\n          <Tooltip content={<CustomTooltip xaxis={xaxis} />} />\n          <Legend verticalAlign=\"bottom\" height={5}\n            wrapperStyle={{ paddingtop: \"20px\" }} />\n\n          {(data.length > 0) ?\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((i) => {\n              if (data[0].counts[i] === undefined) {\n                return null\n              } else {\n                return (\n                  <Area key={\"a\" + i} type=\"monotone\" name={(desc !== undefined) ? desc[i] : 'data'} dataKey={\"counts[\" + i + \"]\"}\n                    stroke={strokeColours[i]} stackId=\"1\" fillOpacity={0.8} fill={fillColours[i]} />\n                )\n              }\n            })\n            : null\n          }\n          {(data.length > 0 && data[0].lines && data[0].lines.length > 0) ?\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((i) => {\n              if (data[0].lines.length < i + 1 || data[0].lines[i] === undefined) {\n                return null\n              } else {\n                return (\n                  <Line key={\"l\" + i} type=\"monotone\" name={(linesDesc[i] !== undefined) ? linesDesc[i] : 'data'} dataKey={\"lines[\" + i + \"]\"} stroke={lineStrokeColours[i]} dot={false} hide={false} />\n                )\n              }\n            })\n            : null\n          }\n        </ComposedChart>\n      }\n    </div>\n  );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  Tooltip, Legend, CartesianGrid\n} from 'recharts';\nimport CustomTooltip from './CustomTooltip'\nimport { getChartSize } from './Utils';\n\nexport default function Graph({ data, desc } = this.props) {\n  if (data === undefined) data = []\n  if (desc === undefined) desc = []\n\n  const [sizes, setSizes] = useState(\n    {\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n\n  useEffect(() => {\n    function handleResize() {\n      setSizes({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n\n  const formatXAxis = (tickItem) => {\n    const d = new Date(tickItem);\n    return d.toLocaleString('default', { month: 'short' });\n  };\n\n  const { w, h } = getChartSize(sizes)\n  const strokeColours =\n    [\"#ff7300\", \"#003EFF\", \"#008000\", \"#00C5CD\", \"#1A1A1A\",\n      \"#8B2500\", \"#551A8B\", \"#ff0000\", \"#EEC900\", \"#b8de6f\",\n      \"#F08080\", \"#7e8a97\"]\n\n  return (\n    <div className=\"line-chart-wrapper\">\n      {(data.length === 0)\n        ?\n        <div className=\"text-info font-weight-bold mt-5 ml-3\">No Data Available for this level</div>\n        :\n        <LineChart\n          width={w} height={h} data={data}\n          margin={{ top: 30, right: 10, bottom: 10, left: 10 }}\n        >\n          <CartesianGrid stroke=\"#ccc\" vertical={false} />\n          <YAxis width={40} tick={{ fontSize: '0.8rem' }} />\n          <XAxis interval={30} tickFormatter={formatXAxis}\n            tick={{ fontSize: '0.8rem' }} dataKey=\"date\" height={50} />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend verticalAlign=\"bottom\" height={5}\n            wrapperStyle={{ paddingtop: \"20px\" }} />\n\n          {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((i) => {\n            if (data[0].counts[i] === undefined) {\n              return null\n            } else {\n              return (\n                <Line key={\"l\" + i} name={(desc[i] !== undefined) ? desc[i] : 'data'} type=\"monotone\" dataKey={\"counts[\" + i + \"]\"} stroke={strokeColours[i]} dot={false} />\n              )\n            }\n          })}\n\n        </LineChart>\n      }\n    </div>\n  );\n}\n\n\n","import React from 'react'\n\nexport default function TableData({ data, cols, id } = this.props) {\n  if (data === undefined) data = []\n\n  return (\n    <div className=\"table-wrapper-scroll-y custom-scrollbar\">\n      <div className=\"table-responsive\">\n        <table id={id} className=\"table table-striped table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th>{cols[0]}</th>\n              <th>{cols[1]}</th>\n              {(cols.length > 2)\n                ? <th>{cols[2]}</th>\n                : null}\n              {(cols.length > 3)\n                ? <th>{cols[3]}</th>\n                : null}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.map((elem) => {\n                return (\n                  <tr key={(elem.location !== undefined) ? elem.location : (elem.country !== undefined) ? elem.country : elem.date}>\n                    {(elem.date !== undefined)\n                      ? <td>{(new Date(elem.date)).toLocaleDateString()}</td>\n                      : null}\n                    {(elem.location !== undefined)\n                      ? <td>{elem.location}</td>\n                      : null}\n                    {(elem.country !== undefined)\n                      ? <td>{elem.country}</td>\n                      : null}\n                    {(elem.day !== undefined)\n                      ? <td>{elem.day}</td>\n                      : null}\n                    {(elem.counts[0] !== undefined && elem.counts[0] != null)\n                      ? <td>{elem.counts[0].toLocaleString()}</td>\n                      : null}\n                    {(elem.rate !== undefined)\n                      ? <td>{elem.rate}</td>\n                      : null}\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport Chart from '../utilities/Chart'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare, ukNations, ukRegions } from '../utilities/Utils'\n\nexport default function Deaths(\n  { areaType, areaName, datePub, newPub, cumPub, ratePub, averPub, deathsPub,\n    dateAct, newAct, cumAct, rateAct, averAct, deathsAct, deathsLoc,\n    regions, regionsAct, regionsAve, nations, nationsAct }\n    = this.props) {\n\n  if (deathsPub === undefined) deathsPub = []\n  if (deathsAct === undefined) deathsAct = []\n  if (regions === undefined) regions = []\n  if (regionsAct === undefined) regionsAct = []\n  if (regionsAve === undefined) regionsAve = []\n  if (nations === undefined) nations = []\n  if (nationsAct === undefined) nationsAct = []\n  if (areaType === 'overview') areaName = 'UK'\n  const deathsPubSorted = [...deathsPub].sort(compare())\n  let deathsActSorted = [...deathsAct].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n  const regionsActSorted = [...regionsAct].sort(compare())\n  const regionsAveSorted = [...regionsAve].sort(compare())\n  let descAct = ['Deaths by Date of Death']\n\n  const [regAve, setRegAve] = useState(true)\n  const switchMode = () => setRegAve(!regAve)\n\n  // UK overall numbers from API are incorrect - replace with sum of nations\n  if (areaType === \"overview\") {\n    descAct = ukNations\n    const nationsActSorted = [...nationsAct].sort(compare())\n    deathsAct = [...nationsAct]\n    cumAct = deathsAct.reduce((tot, val) => tot + val.counts[0], 0)\n    cumAct = cumAct.toLocaleString()\n\n    if (nationsAct.length > 0) {\n      dateAct = (new Date(nationsAct[0].date)).toLocaleDateString()\n      newAct = nationsAct[0].counts[0].toLocaleString()\n      let totAct = 0\n      for (let i = 0; i < 7; i++) {\n        totAct = totAct + nationsAct[i].counts[0]\n      }\n      averAct = Math.floor(totAct / 7).toLocaleString()\n    }\n\n    deathsActSorted = nationsActSorted.map((nat) => {\n      return (\n        {\n          date: nat.date,\n          day: nat.day,\n          counts: nat.counts.slice(1)\n        }\n      )\n    })\n  }\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main shadow h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Deaths</h5>\n\n          {/* Navigation */}\n          <ul className=\"nav nav-tabs\" id=\"deaths-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-tab\" data-toggle=\"tab\" href=\"#published\" role=\"tab\" aria-controls=\"published\" aria-selected=\"true\">Daily</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-data-tab\" data-toggle=\"tab\" href=\"#publisheddata\" role=\"tab\" aria-controls=\"publisheddata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-tab\" data-toggle=\"tab\" href=\"#actual\" role=\"tab\" aria-controls=\"actual\" aria-selected=\"false\">Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-data-tab\" data-toggle=\"tab\" href=\"#actualdata\" role=\"tab\" aria-controls=\"actualdata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"area-deaths-tab\" data-toggle=\"tab\" href=\"#areadeaths\" role=\"tab\" aria-controls=\"areadeaths\" aria-selected=\"false\">Loc</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"death-regions-data-tab\" data-toggle=\"tab\" href=\"#deathregionsdata\" role=\"tab\" aria-controls=\"deathregionsdata\" aria-selected=\"false\">Reg</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"deaths-content\">\n\n            {/* First Tab - Published Deaths with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"published\" role=\"tabpanel\"\n              aria-labelledby=\"published-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{datePub}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{newPub}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {averPub}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Cumulative\n                    </span>\n                    <span className=\"text-right\">\n                      {cumPub}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Rate per 100K population\n                    </span>\n                    <span className=\"text-right\">\n                      {ratePub}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                    </span>\n                    <span className=\"text-right\">\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Deaths by Published Date - {areaName}</h6>\n                <Chart data={deathsPubSorted} desc={['Deaths by Published Date']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Published Deaths Table */}\n            <div className=\"tab-pane fade\" id=\"publisheddata\" role=\"tabpanel\" aria-labelledby=\"published-data-tab\">\n              <h6 className=\"text-center\">Deaths by Published Date - {areaName}</h6>\n              <div>\n                <TableData data={deathsPub} cols={['Date', 'Day', 'Deaths', 'Cum.Rate']} id=\"deathspubtable\" />\n              </div>\n            </div>\n\n            {/* Third Tab - Deaths by Area Table */}\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <div className=\"tab-pane fade\" id=\"areadeaths\" role=\"tabpanel\" aria-labelledby=\"area-deaths-tab\">\n                <h6 className=\"text-center\">Deaths by Location by Published Date - {areaName}</h6>\n                <TableData data={deathsLoc} cols={['Date', 'Location', 'Deaths']} id=\"casesareatable\" />\n              </div>\n              : null}\n\n            {/* Forth Tab - Deaths by Date of Death */}\n            <div className=\"tab-pane fade\" id=\"actual\" role=\"tabpanel\" aria-labelledby=\"actual-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{dateAct}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{newAct}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                     </span>\n                    <span className=\"text-right\">\n                      {averAct}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Cumulative\n                     </span>\n                    <span className=\"text-right\">\n                      {cumAct}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Rate per 100K population\n                     </span>\n                    <span className=\"text-right\">\n                      {rateAct}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Deaths by Date of Death - {areaName}</h6>\n                <Chart data={deathsActSorted} desc={descAct} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Fifth Tab - Date of Death Table */}\n            <div className=\"tab-pane fade\" id=\"actualdata\" role=\"tabpanel\" aria-labelledby=\"actual-data-tab\">\n              <h6 className=\"text-center\">Deaths by Date of Death - {areaName}</h6>\n              <TableData data={deathsAct} cols={['Date', 'Day', 'Deaths']} id=\"casesacttable\" />\n            </div>\n\n            {/* Sixth Tab - Deaths by Region Graph */}\n            <div className=\"tab-pane fade\" id=\"deathregionsdata\" role=\"tabpanel\" aria-labelledby=\"death-regions-data-tab\">\n              <h6 className=\"text-center\">All Regions Deaths - {regAve ? \"7 Day Average\" : \"Actual\"}</h6>\n              <Graph data={regAve ? regionsAveSorted : regionsSorted} desc={ukRegions} />\n              <button type=\"button\" className=\"btn btn-outline-info btn-sm float-right mt-5\" onClick={switchMode}>{regAve ? \"Actual\" : \"7 Day Average\"}</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis,\n  Tooltip, Legend, CartesianGrid\n} from 'recharts';\nimport CustomTooltip from './CustomTooltip'\nimport CustomizedAxisTick from './CustomizedAxisTick'\nimport { getChartSize } from './Utils';\n\nexport default function Barchart({ data, desc, xaxis } = this.props) {\n\n  if (data === undefined) data = []\n  if (desc === undefined) desc = []\n  if (xaxis === undefined) {\n    xaxis = \"date\"\n  }\n\n  const [sizes, setSizes] = useState(\n    {\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n\n  useEffect(() => {\n    function handleResize() {\n      setSizes({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n\n  const formatXAxis = (tickItem) => {\n    const d = new Date(tickItem);\n    return d.toLocaleString('default', { month: 'short' });\n  };\n\n  const { w, h } = getChartSize(sizes)\n\n  const fillColours =\n    [\"#28abb9\", \"#a9b1ba\", \"#ffe05d\", \"#b8de6f\", \"#01cfc4\",\n      \"#ff9a76\", \"#ffeadb\", \"#637373\", \"#ffcbcb\", \"#e97171\"]\n\n  return (\n\n    <div className=\"line-chart-wrapper\">\n      {(data.length === 0)\n        ?\n        <div className=\"text-info font-weight-bold mt-5 ml-3\">\n          No Data Available for this level\n        </div>\n        :\n        <BarChart width={w} height={h} data={data}\n          margin={{ top: 30, right: 10, left: 10, bottom: 10 }}>\n          <YAxis width={60} tick={{ fontSize: '0.7rem' }} tickFormatter={tick => {\n            return tick.toLocaleString();\n          }} />\n\n          {(xaxis === \"date\") ?\n            <XAxis interval={30} tickFormatter={formatXAxis}\n              tick={{ fontSize: '0.7rem' }} dataKey=\"date\" height={50} />\n            :\n            <XAxis interval={0}\n              tick={<CustomizedAxisTick xaxis={xaxis} />} dataKey={xaxis} height={80} />\n          }\n          <CartesianGrid stroke=\"#ccc\" vertical={false} />\n          <Tooltip content={<CustomTooltip xaxis={xaxis} />} />\n          <Legend verticalAlign=\"bottom\"\n            wrapperStyle={{ paddingtop: \"20px\" }} />\n\n          {(data.length > 0) ?\n            [0, 1].map((i) => {\n              if (data[0].counts[i] === undefined) {\n                return null\n              } else {\n                return (\n                  <Bar key={\"b\" + i} type=\"monotone\" name={(desc !== undefined) ? desc[i] : 'data'} dataKey={\"counts[\" + i + \"]\"}\n                    fill={fillColours[i]} fillOpacity={0.8} />\n                )\n              }\n            })\n            : null\n          }\n\n        </BarChart>\n      }\n    </div >\n  );\n}\n\n\n","import React, { useState } from 'react'\nimport Chart from '../utilities/Chart'\nimport Graph from '../utilities/Graph'\nimport Barchart from '../utilities/Barchart'\nimport TableData from '../utilities/TableData'\nimport { compare, ukNations, ukRegions } from '../utilities/Utils'\n\nexport default function Cases(\n  { areaType, areaName, datePub, newPub, cumPub, ratePub, averPub, casesPub,\n    dateAct, newAct, cumAct, rateAct, averAct, casesAct, casesLoc,\n    regions, regionsAct, regionsAve, nations, nationsAct, casesByGender, maleCases, femaleCases,\n    totalGenderCases, genderDate, caseAgeRanges }\n    = this.props) {\n\n  if (casesPub === undefined) casesPub = []\n  if (casesAct === undefined) casesAct = []\n  if (regions === undefined) regions = []\n  if (regionsAct === undefined) regionsAct = []\n  if (regionsAve === undefined) regionsAve = []\n  if (nations === undefined) nations = []\n  if (nationsAct === undefined) nationsAct = []\n  if (casesByGender === undefined) casesByGender = []\n  if (caseAgeRanges === undefined) caseAgeRanges = []\n  if (areaType === 'overview') areaName = 'UK'\n  const casesPubSorted = [...casesPub].sort(compare())\n  let casesActSorted = [...casesAct].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n  const regionsActSorted = [...regionsAct].sort(compare())\n  const regionsAveSorted = [...regionsAve].sort(compare())\n  let descAct = ['Cases by Specimen Date']\n\n  const [regAve, setRegAve] = useState(true)\n  const switchMode = () => setRegAve(!regAve)\n\n  // UK overall numbers from API are incorrect - replace with sum of nations\n  if (areaType === \"overview\") {\n    descAct = ukNations\n    const nationsActSorted = [...nationsAct].sort(compare())\n    casesAct = [...nationsAct]\n    cumAct = casesAct.reduce((tot, val) => tot + val.counts[0], 0)\n    cumAct = cumAct.toLocaleString()\n\n    if (nationsAct.length > 0) {\n      dateAct = (new Date(nationsAct[0].date)).toLocaleDateString()\n      newAct = nationsAct[0].counts[0].toLocaleString()\n      let totAct = 0\n      for (let i = 0; i < 7; i++) {\n        totAct = totAct + nationsAct[i].counts[0]\n      }\n      averAct = Math.floor(totAct / 7).toLocaleString()\n    }\n\n    casesActSorted = nationsActSorted.map((nat) => {\n      return (\n        {\n          date: nat.date,\n          day: nat.day,\n          counts: nat.counts.slice(1)\n        }\n      )\n    })\n  }\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main shadow h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Cases</h5>\n\n          {/* Navigation */}\n          <ul className=\"nav nav-tabs\" id=\"cases-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-cases-tab\" data-toggle=\"tab\" href=\"#publishedcases\" role=\"tab\" aria-controls=\"publishedcases\" aria-selected=\"true\">Daily</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-cases-data-tab\" data-toggle=\"tab\" href=\"#publishedcasesdata\" role=\"tab\" aria-controls=\"publishedcasesdata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"area-cases-tab\" data-toggle=\"tab\" href=\"#areacases\" role=\"tab\" aria-controls=\"areacases\" aria-selected=\"false\">Loc</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-tab\" data-toggle=\"tab\" href=\"#actualcases\" role=\"tab\" aria-controls=\"actualcases\" aria-selected=\"false\">Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-data-tab\" data-toggle=\"tab\" href=\"#actualcasesdata\" role=\"tab\" aria-controls=\"actualcasesdata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"case-ages-tab\" data-toggle=\"tab\" href=\"#caseages\" role=\"tab\" aria-controls=\"caseages\" aria-selected=\"false\">Age</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"case-regions-data-tab\" data-toggle=\"tab\" href=\"#caseregionsdata\" role=\"tab\" aria-controls=\"caseregionsdata\" aria-selected=\"false\">Reg</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"cases-content\">\n\n            {/* First Tab - Published Deaths with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"publishedcases\" role=\"tabpanel\" aria-labelledby=\"published-cases-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{datePub}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{newPub}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {averPub}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Cumulative\n                    </span>\n                    <span className=\"text-right\">\n                      {cumPub}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Rate per 100K population\n                    </span>\n                    <span className=\"text-right\">\n                      {ratePub}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Cases by Published Date - {areaName}</h6>\n                <Chart data={casesPubSorted} desc={['Cases by Published Date']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Published Cases Table */}\n            <div className=\"tab-pane fade\" id=\"publishedcasesdata\" role=\"tabpanel\" aria-labelledby=\"published-cases-data-tab\">\n              <h6 className=\"text-center\">Cases by Published Date - {areaName}</h6>\n              <TableData data={casesPub} cols={['Date', 'Day', 'Cases', 'Cum.Rate']} id=\"casespubtable\" />\n            </div>\n\n            {/* Third Tab - Cases by Area Table */}\n            <div className=\"tab-pane fade\" id=\"areacases\" role=\"tabpanel\" aria-labelledby=\"area-cases-tab\">\n              <h6 className=\"text-center\">Cases by Location by Published Date - {areaName}</h6>\n              {(areaType === 'overview' || areaType === 'nation')\n                ?\n                <TableData data={casesLoc} cols={['Date', 'Location', 'Cases']} id=\"casesareatable\" />\n                :\n                <div className=\"text-info font-weight-bold mt-5 ml-3\">\n                  No Data Available for this level\n                </div>}\n            </div>\n\n            {/* Forth Tab - Cases by specimen date */}\n            <div className=\"tab-pane fade\" id=\"actualcases\" role=\"tabpanel\" aria-labelledby=\"actual-cases-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white p-0 m-0 rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{dateAct}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{newAct}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {averAct}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Cumulative\n                    </span>\n                    <span className=\"text-right\">\n                      {cumAct}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Rate per 100K population\n                    </span>\n                    <span className=\"text-right\">\n                      {rateAct}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Chart with results */}\n              <div>\n                <h6 className=\"text-center\">Cases by Specimen Date - {areaName}</h6>\n                <Chart data={casesActSorted} desc={descAct} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Fifth Tab - Cases by Specimen Date Table */}\n            <div className=\"tab-pane fade\" id=\"actualcasesdata\" role=\"tabpanel\"\n              aria-labelledby=\"actual-cases-data-tab\">\n              <h6 className=\"text-center\">Cases by Specimen Date {areaName}</h6>\n              <TableData data={casesAct} cols={['Date', 'Day', 'Cases']} id=\"casesacttable\" />\n            </div>\n\n            {/* Sixth Tab - Cases by Ages Graph */}\n            <div className=\"tab-pane fade\" id=\"caseages\" role=\"tabpanel\" aria-labelledby=\"case-ages-tab\">\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white p-0 m-0 rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{genderDate}</h6>\n                    </span>\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{totalGenderCases}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      Male Cases\n                    </span>\n                    <span className=\"text-right\">\n                      {maleCases}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-right\">\n                      Female Cases\n                    </span>\n                    <span className=\"text-right\">\n                      {femaleCases}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              {/* Chart with results */}\n              <div>\n                <h6 className=\"text-center\">Cumulative Cases by Age and Gender - {areaName}</h6>\n                <p className=\"text-muted text-center\">Available for England and English Regions</p>\n                <Barchart data={casesByGender} desc={[\"Male\", \"Female\"]} xaxis=\"age\" />\n              </div>\n            </div>\n\n            {/* Seventh Tab - Cases by Region Graph */}\n            <div className=\"tab-pane fade\" id=\"caseregionsdata\" role=\"tabpanel\" aria-labelledby=\"case-regions-data-tab\">\n              <h6 className=\"text-center\">All Regions Cases - {regAve ? \"7 Day Average\" : \"Actual\"}</h6>\n              <Graph data={regAve ? regionsAveSorted : regionsSorted} desc={ukRegions} />\n              <button type=\"button\" className=\"btn btn-outline-info btn-sm float-right mt-5\" onClick={switchMode}>{regAve ? \"Actual\" : \"7 Day Average\"}</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","import React from 'react'\nimport Chart from '../utilities/Chart'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Tests(\n  { areaName, date, newP1, newP2, newP3, newP4, newTotal,\n    cumP1, cumP2, cumP3, cumP4, cumTotal,\n    tests1, tests2, tests3, tests4, testsTot } = this.props) {\n  if (tests1 === undefined) tests1 = []\n  if (tests2 === undefined) tests2 = []\n  if (tests3 === undefined) tests3 = []\n  if (tests4 === undefined) tests4 = []\n  if (testsTot === undefined) testsTot = []\n  if (areaName === '') areaName = 'UK'\n  const testsTotSorted =\n    [...testsTot.map(\n      (day) => {\n        return {\n          date: day.date,\n          day: day.day,\n          counts: [...day.counts].slice(1)\n        }\n      })\n    ].sort(compare())\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Tests</h5>\n\n          {/* Navigation */}\n          <ul className=\"nav nav-tabs\" id=\"tests-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"tests-tab\" data-toggle=\"tab\" href=\"#tests\" role=\"tab\" aria-controls=\"tests\" aria-selected=\"true\">Tests</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p1-data-tab\" data-toggle=\"tab\" href=\"#p1data\" role=\"tab\" aria-controls=\"p1data\" aria-selected=\"false\">P1</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p2-data-tab\" data-toggle=\"tab\" href=\"#p2data\" role=\"tab\" aria-controls=\"p2data\" aria-selected=\"false\">P2</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p3-data-tab\" data-toggle=\"tab\" href=\"#p3data\" role=\"tab\" aria-controls=\"p3data\" aria-selected=\"false\">P3</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p4-data-tab\" data-toggle=\"tab\" href=\"#p4data\" role=\"tab\" aria-controls=\"p4data\" aria-selected=\"false\">P4</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"tests-data-tab\" data-toggle=\"tab\" href=\"#testsdata\" role=\"tab\" aria-controls=\"testsdata\" aria-selected=\"false\">Total</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"tests-content\">\n\n            {/* First Tab - Tests with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"tests\" role=\"tabpanel\"\n              aria-labelledby=\"tests-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left tests\">\n                      <h6 className=\"font-weight-bold\">{date}</h6>\n                    </span>\n                    <span className=\"text-right tests\">\n                      <h6 className=\"font-weight-bold\">{newTotal}</h6>\n                    </span>\n                    <span className=\"text-right tests\">\n                      <h6 className=\"font-weight-bold\">{cumTotal}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left tests\">\n                      Pillar 1\n                    </span>\n                    <span className=\"text-right tests\">\n                      {newP1}\n                    </span>\n                    <span className=\"text-right tests\">\n                      {cumP1}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left tests\">\n                      Pillar 2\n                    </span>\n                    <span className=\"text-right tests\">\n                      {newP2}\n                    </span>\n                    <span className=\"text-right tests\">\n                      {cumP2}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left tests\">\n                      Pillar 3\n                    </span>\n                    <span className=\"text-right tests\">\n                      {newP3}\n                    </span>\n                    <span className=\"text-right tests\">\n                      {cumP3}\n                    </span>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left tests\">\n                      Pillar 4\n                   </span>\n                    <span className=\"text-right tests\">\n                      {newP4}\n                    </span>\n                    <span className=\"text-right tests\">\n                      {cumP4}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Tests by Published Date - {areaName}</h6>\n                <Chart data={testsTotSorted} desc={['Pillar 1', 'Pillar 2', 'Pillar 3', 'Pillar 4']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Pillar 1 Table */}\n            <div className=\"tab-pane fade\" id=\"p1data\" role=\"tabpanel\" aria-labelledby=\"p1-data-tab\">\n              <h6 className=\"text-center\">Pillar 1 (NHS/PHE) Tests - {areaName}</h6>\n              <TableData data={tests1} cols={['Date', 'Day', 'Tests']} id=\"testsp1table\" />\n            </div>\n\n            {/* Third Tab - Pillar 2 Table */}\n            <div className=\"tab-pane fade\" id=\"p2data\" role=\"tabpanel\"\n              aria-labelledby=\"p2-data-tab\">\n              <h6 className=\"text-center\">Pillar 2 (Non-NHS) Tests - {areaName}</h6>\n              <TableData data={tests2} cols={['Date', 'Day', 'Tests']} id=\"testsp2table\" />\n            </div>\n\n            {/* Forth Tab - Pillar 3 Table */}\n            <div className=\"tab-pane fade\" id=\"p3data\" role=\"tabpanel\" aria-labelledby=\"p3-data-tab\">\n              <h6 className=\"text-center\">Pillar 3 (Antibody) Tests - {areaName}</h6>\n              <TableData data={tests3} cols={['Date', 'Day', 'Tests']} id=\"testsp3table\" />\n            </div>\n\n            {/* Fifth Tab - Pillar 4 Table */}\n            <div className=\"tab-pane fade\" id=\"p4data\" role=\"tabpanel\" aria-labelledby=\"p4-data-tab\">\n              <h6 className=\"text-center\">Pillar 4 (Surveillance) Tests - {areaName}</h6>\n              <TableData data={tests4} cols={['Date', 'Day', 'Tests']} id=\"testsp4table\" />\n            </div>\n\n            {/* Sixth Tab - Totals Table */}\n            <div className=\"tab-pane fade\" id=\"testsdata\" role=\"tabpanel\" aria-labelledby=\"tests-data-tab\">\n              <h6 className=\"text-center\">Total Tests - {areaName}</h6>\n              <TableData data={testsTot} cols={['Date', 'Day', 'Tests']} id=\"teststottable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React, { useState } from 'react'\nimport Graph from '../utilities/Graph'\nimport Chart from '../utilities/Chart'\nimport TableData from '../utilities/TableData'\nimport { compare, ukRegionsNhs } from '../utilities/Utils'\n\nexport default function Hospital({ areaName, date, latest, average, patients, regions, regionsAve } = this.props) {\n  if (patients === undefined) patients = []\n  if (regions === undefined) regions = []\n  if (regionsAve === undefined) regionsAve = []\n  if (areaName === '') areaName = 'UK'\n  const patientsSorted = [...patients].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n  const regionsAveSorted = [...regionsAve].sort(compare())\n\n  const [regAve, setRegAve] = useState(true)\n  const switchMode = () => setRegAve(!regAve)\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Hospital Patients</h5>\n\n          {/* Navigation */}\n          <ul className=\"nav nav-tabs\" id=\"patients-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"patients-tab\" data-toggle=\"tab\" href=\"#patients\" role=\"tab\" aria-controls=\"patients\" aria-selected=\"true\">Patients</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"patients-data-tab\" data-toggle=\"tab\" href=\"#patientsdata\" role=\"tab\" aria-controls=\"patientsdata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-data-tab\" data-toggle=\"tab\" href=\"#regionsdata\" role=\"tab\" aria-controls=\"regionsdata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"patients-content\">\n\n            {/* First Tab - Hospital Patients with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"patients\" role=\"tabpanel\" aria-labelledby=\"patients-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{date}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{latest}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {average}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Patients in Hospital - {areaName}</h6>\n                <Chart data={patientsSorted} desc={['Patients']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Patients data table*/}\n            <div className=\"tab-pane fade\" id=\"patientsdata\" role=\"tabpanel\" aria-labelledby=\"patients-data-tab\">\n              <h6 className=\"text-center\">Patients in Hospital - {areaName}</h6>\n              <TableData data={patients} cols={['Date', 'Day', 'Patients']} id=\"hospitaltable\" />\n            </div>\n\n            {/* Third Tab - Patients by Region */}\n            <div className=\"tab-pane fade\" id=\"regionsdata\" role=\"tabpanel\"\n              aria-labelledby=\"regions-data-tab\">\n              <h6 className=\"text-center\">All Regions Hospital Patients - {regAve ? \"7 Day Average\" : \"Actual\"}</h6>\n              <Graph data={regAve ? regionsAveSorted : regionsSorted} desc={ukRegionsNhs} />\n              <button type=\"button\" className=\"btn btn-outline-info btn-sm float-right mt-5\" onClick={switchMode}>{regAve ? \"Actual\" : \"7 Day Average\"}</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React, { useState } from 'react'\nimport Graph from '../utilities/Graph'\nimport Chart from '../utilities/Chart'\nimport TableData from '../utilities/TableData'\nimport { compare, ukRegionsNhs } from '../utilities/Utils'\n\nexport default function Admissions(\n  { areaName, date, latest, average, cumulative, admissions, admissionsByAge, regions, regionsAve }\n    = this.props) {\n\n  if (admissions === undefined || admissions === null) admissions = []\n  if (admissionsByAge === undefined || admissionsByAge === null) admissionsByAge = []\n  if (regions === undefined || regions === null) regions = []\n  if (regionsAve === undefined || regionsAve === null) regionsAve = []\n  if (areaName === '') areaName = 'UK'\n  const admissionsSorted = [...admissions].sort(compare())\n  const admissionsByAgeSorted = [...admissionsByAge].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n  const regionsAveSorted = [...regionsAve].sort(compare())\n\n  const [regAve, setRegAve] = useState(true)\n  const switchMode = () => setRegAve(!regAve)\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Hospital Admissions</h5>\n          <ul className=\"nav nav-tabs\" id=\"admissions-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"admissions-tab\" data-toggle=\"tab\" href=\"#admissions\" role=\"tab\" aria-controls=\"admissions\" aria-selected=\"true\">Admissions</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"admissions-data-tab\" data-toggle=\"tab\" href=\"#admissionsdata\" role=\"tab\" aria-controls=\"admissionsdata\" aria-selected=\"false\">#</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"admissions-byage-data-tab\" data-toggle=\"tab\" href=\"#admissionsbyagedata\" role=\"tab\" aria-controls=\"admissionsbyagedata\" aria-selected=\"false\">By Age</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-admissions-data-tab\" data-toggle=\"tab\" href=\"#regionsadmissionsdata\" role=\"tab\" aria-controls=\"regionsadmissionsdata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"admissions-content\">\n\n            {/* First Tab - Published Deaths with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"admissions\" role=\"tabpanel\" aria-labelledby=\"admissions-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{date}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{latest}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {average}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Chart with results */}\n              <div>\n                <h6 className=\"text-center\">New Admissions to Hospital - {areaName}</h6>\n                <Chart data={admissionsSorted} desc={['Admissions']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Admissions Data Table */}\n            <div className=\"tab-pane fade\" id=\"admissionsdata\" role=\"tabpanel\" aria-labelledby=\"admissions-data-tab\">\n              <h6 className=\"text-center\">New Admissions to Hospital - {areaName}</h6>\n              <TableData data={admissions} cols={['Date', 'Day', 'Admissions']} id='admissionstable' />\n            </div>\n\n            {/* Third Tab - Admissions By Age */}\n            <div className=\"tab-pane fade\" id=\"admissionsbyagedata\" role=\"tabpanel\" aria-labelledby=\"admissions-byage-data-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{date}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{latest}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {average}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">New Admissions to Hospital by Age - {areaName}</h6>\n                <Chart data={admissionsByAgeSorted} desc={['0-5', '6-17', '18-64', '65-84', '85+']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Forth Tab - Admissions by Region */}\n            <div className=\"tab-pane fade\" id=\"regionsadmissionsdata\" role=\"tabpanel\" aria-labelledby=\"regions-admissions-data-tab\">\n              <h6 className=\"text-center\">All Regions Hospital Admissions - {regAve ? \"7 Day Average\" : \"Actual\"}</h6>\n              <Graph data={regAve ? regionsAveSorted : regionsSorted} desc={ukRegionsNhs} />\n              <button type=\"button\" className=\"btn btn-outline-info btn-sm float-right mt-5\" onClick={switchMode}>{regAve ? \"Actual\" : \"7 Day Average\"}</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\n","import React, { useState } from 'react'\nimport Graph from '../utilities/Graph'\nimport Chart from '../utilities/Chart'\nimport TableData from '../utilities/TableData'\nimport { compare, ukRegionsNhs } from '../utilities/Utils'\n\nexport default function VentilatorBeds({ areaName, date, latest, average, ventilatorBeds, regions, regionsAve } = this.props) {\n  if (ventilatorBeds === undefined) ventilatorBeds = []\n  if (regions === undefined) regions = []\n  if (regionsAve === undefined) regionsAve = []\n  if (areaName === '') areaName = 'UK'\n  const ventilatorBedsSorted = [...ventilatorBeds].sort(compare())\n  const regionsSorted = [...regions].sort(compare())\n  const regionsAveSorted = [...regionsAve].sort(compare())\n\n  const [regAve, setRegAve] = useState(true)\n  const switchMode = () => setRegAve(!regAve)\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">Ventilator Beds Occupied</h5>\n          <ul className=\"nav nav-tabs\" id=\"intensivecare-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"intensivecare-tab\" data-toggle=\"tab\" href=\"#intensivecare\" role=\"tab\" aria-controls=\"intensivecare\" aria-selected=\"true\">Ventilator Beds</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"intensivecare-data-tab\" data-toggle=\"tab\" href=\"#intensivecaredata\" role=\"tab\" aria-controls=\"intensivecaredata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"regions-intensivecare-data-tab\" data-toggle=\"tab\" href=\"#regionsintensivecaredata\" role=\"tab\" aria-controls=\"regionsintensivecaredata\" aria-selected=\"false\">Regions</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"intensivecare-content\">\n\n            {/* First Tab - Patients in Intensive Care with Chart */}\n            <div className=\"tab-pane fade show active\" id=\"intensivecare\" role=\"tabpanel\" aria-labelledby=\"intensivecare-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{date}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{latest}</h6>\n                    </span>\n                  </div>\n                </div>\n                {/* Other Stats */}\n                <div className=\"card-body py-1\">\n                  <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"text-left\">\n                      7 Day Average\n                    </span>\n                    <span className=\"text-right\">\n                      {average}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Graph with results */}\n              <div>\n                <h6 className=\"text-center\">Patients in Ventilator Beds - {areaName}</h6>\n                <Chart data={ventilatorBedsSorted} desc={['Ventilator Beds']} linesDesc={['7 Day Average']} />\n              </div>\n            </div>\n\n            {/* Second Tab - Intensive Care Data Table */}\n            <div className=\"tab-pane fade\" id=\"intensivecaredata\" role=\"tabpanel\" aria-labelledby=\"intensivecare-data-tab\">\n              <h6 className=\"text-center\">Patients in Ventilator Beds - {areaName}</h6>\n              <TableData data={ventilatorBeds} cols={['Date', 'Day', 'Beds']} id=\"intensivecaretable\" />\n            </div>\n\n            {/* Third Tab - Intensive Care beds by Region */}\n            <div className=\"tab-pane fade\" id=\"regionsintensivecaredata\" role=\"tabpanel\" aria-labelledby=\"regions-intensivecare-data-tab\">\n              <h6 className=\"text-center\">All Regions Ventilator Beds - {regAve ? \"7 Day Average\" : \"Actual\"}</h6>\n              <Graph data={regAve ? regionsAveSorted : regionsSorted} desc={ukRegionsNhs} />\n              <button type=\"button\" className=\"btn btn-outline-info btn-sm float-right mt-5\" onClick={switchMode}>{regAve ? \"Actual\" : \"7 Day Average\"}</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React from 'react'\nimport Barchart from '../utilities/Barchart'\nimport TableData from '../utilities/TableData'\n\nexport default function WorldWideDeaths(\n  { latestDate, deathsTot, deaths } = this.props) {\n\n  if (deaths === undefined || deaths === null) deaths = []\n  if (deathsTot === undefined || deathsTot === null) deathsTot = 0\n\n  // Sort in descending order by number of deaths\n  let deathsSorted = [...deaths].sort((a, b) => {\n    if (b.counts[0] > a.counts[0]) return 1\n    if (b.counts[0] < a.counts[0]) return -1\n    return 0\n  })\n\n  let deathsTop = []\n  if (deathsSorted.length > 20) {\n    deathsTop = [...deathsSorted].splice(0, 20)\n  } else {\n    deathsTop = deathsSorted\n  }\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">World Wide Deaths</h5>\n          <ul className=\"nav nav-tabs\" id=\"worldwidedeaths-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"worldwidedeaths-tab\" data-toggle=\"tab\" href=\"#worldwidedeaths\" role=\"tab\" aria-controls=\"worldwidedeaths\" aria-selected=\"true\">Deaths</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"world-deaths-tab\" data-toggle=\"tab\" href=\"#worlddeaths\" role=\"tab\" aria-controls=\"worlddeaths\" aria-selected=\"false\">#</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"worldwidedeaths-content\">\n\n            {/* First Tab - Deaths by country */}\n            <div className=\"tab-pane fade show active\" id=\"worldwidedeaths\" role=\"tabpanel\" aria-labelledby=\"worldwidedeaths-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{latestDate}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{deathsTot.toLocaleString()}</h6>\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Chart with results */}\n              <div>\n                <h6 className=\"text-center\">Deaths by Country</h6>\n                <Barchart data={deathsTop} desc={['Deaths']} xaxis='country' />\n              </div>\n            </div>\n\n            {/* Second Tab - Deaths Table */}\n            <div className=\"tab-pane fade\" id=\"worlddeaths\" role=\"tabpanel\" aria-labelledby=\"world-deaths-tab\">\n              <h6 className=\"text-center\">Deaths by Country</h6>\n              <div>\n                <TableData data={deathsSorted} cols={['Country', 'Deaths']} id=\"worlddeathstable\" />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\n","import React from 'react'\nimport Barchart from '../utilities/Barchart'\nimport TableData from '../utilities/TableData'\n\nexport default function WorldWideCases(\n  { latestDate, casesTot, cases } = this.props) {\n\n  if (cases === undefined || cases === null) cases = []\n  if (casesTot === undefined || casesTot === null) casesTot = 0\n\n  // Sort in descending order by number of cases\n  let casesSorted = [...cases].sort((a, b) => {\n    if (b.counts[0] > a.counts[0]) return 1\n    if (b.counts[0] < a.counts[0]) return -1\n    return 0\n  })\n\n  let casesTop = []\n  if (casesSorted.length > 20) {\n    casesTop = [...casesSorted].splice(0, 20)\n  } else {\n    casesTop = casesSorted\n  }\n\n  return (\n    <div className=\"col-sm-6 col-lg-4 mb-3\">\n\n      {/* Card */}\n      <div className=\"card card-main h-100\">\n\n        {/* Card Header and Navigation */}\n        <div className=\"card-header text-center\">\n          <h5 className=\"card-title font-weight-bold\">World Wide Cases</h5>\n          <ul className=\"nav nav-tabs\" id=\"worldwidecases-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"worldwidecases-tab\" data-toggle=\"tab\" href=\"#worldwidecases\" role=\"tab\" aria-controls=\"worldwidecases\" aria-selected=\"true\">Cases</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"world-cases-tab\" data-toggle=\"tab\" href=\"#worldcases\" role=\"tab\" aria-controls=\"worldcases\" aria-selected=\"false\">#</a>\n            </li>\n          </ul>\n        </div>\n\n        {/* Card Body */}\n        <div className=\"card-body\">\n\n          {/* Tabs Content */}\n          <div className=\"tab-content\" id=\"worldwidecases-content\">\n\n            {/* First Tab - Cases by country */}\n            <div className=\"tab-pane fade show active\" id=\"worldwidecases\" role=\"tabpanel\" aria-labelledby=\"worldwidecases-tab\">\n\n              {/* Card with summary details */}\n              <div className=\"card mb-3\">\n                {/* Headline Result */}\n                <div className=\"card-header pt-2 pb-1 bg-info\">\n                  <div className=\"d-flex flex-row justify-content-between text-white rounded\">\n                    <span className=\"text-left\">\n                      <h6 className=\"font-weight-bold\">{latestDate}</h6>\n                    </span>\n                    <span className=\"text-right\">\n                      <h6 className=\"font-weight-bold\">{casesTot.toLocaleString()}</h6>\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Chart with results */}\n              <div>\n                <h6 className=\"text-center\">Cases by Country</h6>\n                <Barchart data={casesTop} desc={['Cases']} xaxis='country' />\n              </div>\n            </div>\n\n            {/* Second Tab - Cases Table */}\n            <div className=\"tab-pane fade\" id=\"worldcases\" role=\"tabpanel\" aria-labelledby=\"world-cases-tab\">\n              <h6 className=\"text-center\">Cases by Country</h6>\n              <div>\n                <TableData data={casesSorted} cols={['Country', 'Cases', '14 Day Rate']} id=\"worldcasestable\" />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <div className=\"col-sm-12\">\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <p className=\"text-left text-white\">Uk Data from https://api.coronavirus.data.gov.uk/v1/data</p>\n        </div>\n        <div className=\"col-sm-4\">\n          <p className=\"text-left text-white\">World Data from https://opendata.ecdc.europa.eu/covid19/casedistribution/json/</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { getUtla } from '../utilities/utla'\nimport { getLtla } from '../utilities/ltla'\n\nexport default function Input({ areaType, areaName, updateAreaTypeAndName } = this.props) {\n\n  const [areaNames, setAreaNames] = useState(['']);\n\n  const nameOptions = {\n    overview: [''],\n    nation: ['England', 'Scotland', 'Wales', 'Northern Ireland'],\n    region: ['East Midlands', 'East of England', 'London', 'North East',\n      'North West', 'South East', 'South West', 'West Midlands',\n      'Yorkshire and The Humber'],\n    nhsRegion: ['East of England', 'London', 'Midlands',\n      'North East and Yorkshire', 'North West', 'South East',\n      'South West'],\n    utla: getUtla(),\n    ltla: getLtla(),\n    world: ['']\n  }\n\n  const onAreaTypeChange = (event) => {\n    setAreaNames(nameOptions[event.target.value])\n  }\n\n  const onSubmitClick = (event) => {\n    updateAreaTypeAndName(\n      document.getElementById(\"areaType\").value,\n      document.getElementById(\"areaName\").value)\n  }\n\n  return (\n\n    <div className=\"container-fluid\">\n      <div className=\"row mb-3\">\n        <form className=\"form-inline w-100\">\n\n          <div className=\"input-group col-sm-6 col-lg-4\">\n\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text prefix\">Area Type</span>\n            </div>\n            <select className=\"form-control custom-select\" id=\"areaType\" defaultValue={areaType} onChange={onAreaTypeChange}>\n              <option value='overview'>UK</option>\n              <option value='nation'>Nation</option>\n              <option value='region'>Region</option>\n              <option value='nhsRegion'>NHS Region</option>\n              <option value='utla'>Upper-tier Local Authority</option>\n              <option value='ltla'>Lower-tier Local Authority</option>\n              <option value='world'>World</option>\n            </select>\n          </div>\n\n          <div className=\"input-group col-sm-6 col-lg-4\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text prefix\">Area Name</span>\n            </div>\n            <select className=\"form-control custom-select\" id=\"areaName\" defaultValue={areaName}>\n              {areaNames.map((name) => (\n                <option value={name} key={name}>{name}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group col-sm-6 col-lg-4\">\n            <button className=\"form-control btn btn-info\" type=\"button\" onClick={onSubmitClick}>Get Data</button>\n          </div>\n        </form >\n      </div>\n    </div >\n  )\n}\n","export const getUtla = () => [\n  \"Aberdeen City\",\n  \"Aberdeenshire\",\n  \"Angus\",\n  \"Antrim and Newtownabbey\",\n  \"Ards and North Down\",\n  \"Argyll and Bute\",\n  \"Armagh City, Banbridge and Craigavon\",\n  \"Barking and Dagenham\",\n  \"Barnet\",\n  \"Barnsley\",\n  \"Bath and North East Somerset\",\n  \"Bedford\",\n  \"Belfast\",\n  \"Bexley\",\n  \"Birmingham\",\n  \"Blackburn with Darwen\",\n  \"Blackpool\",\n  \"Blaenau Gwent\",\n  \"Bolton\",\n  \"Bournemouth, Christchurch and Poole\",\n  \"Bracknell Forest\",\n  \"Bradford\",\n  \"Brent\",\n  \"Bridgend\",\n  \"Brighton and Hove\",\n  \"Bristol, City of\",\n  \"Bromley\",\n  \"Buckinghamshire\",\n  \"Bury\",\n  \"Caerphilly\",\n  \"Calderdale\",\n  \"Cambridgeshire\",\n  \"Camden\",\n  \"Cardiff\",\n  \"Carmarthenshire\",\n  \"Causeway Coast and Glens\",\n  \"Central Bedfordshire\",\n  \"Ceredigion\",\n  \"Cheshire East\",\n  \"Cheshire West and Chester\",\n  \"City of Edinburgh\",\n  \"City of London\",\n  \"Clackmannanshire\",\n  \"Conwy\",\n  \"Cornwall and Isles of Scilly\",\n  \"County Durham\",\n  \"Coventry\",\n  \"Croydon\",\n  \"Cumbria\",\n  \"Darlington\",\n  \"Denbighshire\",\n  \"Derby\",\n  \"Derbyshire\",\n  \"Derry City and Strabane\",\n  \"Devon\",\n  \"Doncaster\",\n  \"Dorset\",\n  \"Dudley\",\n  \"Dumfries and Galloway\",\n  \"Dundee City\",\n  \"Ealing\",\n  \"East Ayrshire\",\n  \"East Dunbartonshire\",\n  \"East Lothian\",\n  \"East Renfrewshire\",\n  \"East Riding of Yorkshire\",\n  \"East Sussex\",\n  \"Enfield\",\n  \"Essex\",\n  \"Falkirk\",\n  \"Fermanagh and Omagh\",\n  \"Fife\",\n  \"Flintshire\",\n  \"Gateshead\",\n  \"Glasgow City\",\n  \"Gloucestershire\",\n  \"Greenwich\",\n  \"Gwynedd\",\n  \"Hackney and City of London\",\n  \"Halton\",\n  \"Hammersmith and Fulham\",\n  \"Hampshire\",\n  \"Haringey\",\n  \"Harrow\",\n  \"Hartlepool\",\n  \"Havering\",\n  \"Herefordshire, County of\",\n  \"Hertfordshire\",\n  \"Highland\",\n  \"Hillingdon\",\n  \"Hounslow\",\n  \"Inverclyde\",\n  \"Isle of Anglesey\",\n  \"Isle of Wight\",\n  \"Isles of Scilly\",\n  \"Islington\",\n  \"Kensington and Chelsea\",\n  \"Kent\",\n  \"Kingston upon Hull, City of\",\n  \"Kingston upon Thames\",\n  \"Kirklees\",\n  \"Knowsley\",\n  \"Lambeth\",\n  \"Lancashire\",\n  \"Leeds\",\n  \"Leicester\",\n  \"Leicestershire\",\n  \"Lewisham\",\n  \"Lincolnshire\",\n  \"Lisburn and Castlereagh\",\n  \"Liverpool\",\n  \"Luton\",\n  \"Manchester\",\n  \"Medway\",\n  \"Merthyr Tydfil\",\n  \"Mid and East Antrim\",\n  \"Mid Ulster\",\n  \"Middlesbrough\",\n  \"Midlothian\",\n  \"Milton Keynes\",\n  \"Monmouthshire\",\n  \"Moray\",\n  \"Na h-Eileanan Siar\",\n  \"Neath Port Talbot\",\n  \"Newcastle upon Tyne\",\n  \"Newham\",\n  \"Newport\",\n  \"Newry, Mourne and Down\",\n  \"Norfolk\",\n  \"North Ayrshire\",\n  \"North East Lincolnshire\",\n  \"North Lanarkshire\",\n  \"North Lincolnshire\",\n  \"North Somerset\",\n  \"North Tyneside\",\n  \"North Yorkshire\",\n  \"Northamptonshire\",\n  \"Northumberland\",\n  \"Nottingham\",\n  \"Nottinghamshire\",\n  \"Oldham\",\n  \"Orkney Islands\",\n  \"Oxfordshire\",\n  \"Pembrokeshire\",\n  \"Perth and Kinross\",\n  \"Peterborough\",\n  \"Plymouth\",\n  \"Portsmouth\",\n  \"Powys\",\n  \"Reading\",\n  \"Redbridge\",\n  \"Redcar and Cleveland\",\n  \"Renfrewshire\",\n  \"Resident outside Wales\",\n  \"Rhondda Cynon Taf\",\n  \"Richmond upon Thames\",\n  \"Rochdale\",\n  \"Rotherham\",\n  \"Rutland\",\n  \"Salford\",\n  \"Sandwell\",\n  \"Scottish Borders\",\n  \"Sefton\",\n  \"Sheffield\",\n  \"Shetland Islands\",\n  \"Shropshire\",\n  \"Slough\",\n  \"Solihull\",\n  \"Somerset\",\n  \"South Ayrshire\",\n  \"South Gloucestershire\",\n  \"South Lanarkshire\",\n  \"South Tyneside\",\n  \"Southampton\",\n  \"Southend-on-Sea\",\n  \"Southwark\",\n  \"St. Helens\",\n  \"Staffordshire\",\n  \"Stirling\",\n  \"Stockport\",\n  \"Stockton-on-Tees\",\n  \"Stoke-on-Trent\",\n  \"Suffolk\",\n  \"Sunderland\",\n  \"Surrey\",\n  \"Sutton\",\n  \"Swansea\",\n  \"Swindon\",\n  \"Tameside\",\n  \"Telford and Wrekin\",\n  \"Thurrock\",\n  \"Torbay\",\n  \"Torfaen\",\n  \"Tower Hamlets\",\n  \"Trafford\",\n  \"Vale of Glamorgan\",\n  \"Wakefield\",\n  \"Walsall\",\n  \"Waltham Forest\",\n  \"Wandsworth\",\n  \"Warrington\",\n  \"Warwickshire\",\n  \"West Berkshire\",\n  \"West Dunbartonshire\",\n  \"West Lothian\",\n  \"West Sussex\",\n  \"Westminster\",\n  \"Wigan\",\n  \"Wiltshire\",\n  \"Windsor and Maidenhead\",\n  \"Wirral\",\n  \"Wokingham\",\n  \"Wolverhampton\",\n  \"Worcestershire\",\n  \"Wrexham\",\n  \"York\"\n]\n","export const getLtla = () => [\n  \"Aberdeen City\",\n  \"Aberdeenshire\",\n  \"Adur\",\n  \"Allerdale\",\n  \"Amber Valley\",\n  \"Angus\",\n  \"Antrim and Newtownabbey\",\n  \"Ards and North Down\",\n  \"Argyll and Bute\",\n  \"Armagh City, Banbridge and Craigavon\",\n  \"Arun\",\n  \"Ashfield\",\n  \"Ashford\",\n  \"Aylesbury Vale\",\n  \"Babergh\",\n  \"Barking and Dagenham\",\n  \"Barnet\",\n  \"Barnsley\",\n  \"Barrow-in-Furness\",\n  \"Basildon\",\n  \"Basingstoke and Deane\",\n  \"Bassetlaw\",\n  \"Bath and North East Somerset\",\n  \"Bedford\",\n  \"Belfast\",\n  \"Bexley\",\n  \"Birmingham\",\n  \"Blaby\",\n  \"Blackburn with Darwen\",\n  \"Blackpool\",\n  \"Blaenau Gwent\",\n  \"Bolsover\",\n  \"Bolton\",\n  \"Boston\",\n  \"Bournemouth, Christchurch and Poole\",\n  \"Bracknell Forest\",\n  \"Bradford\",\n  \"Braintree\",\n  \"Breckland\",\n  \"Brent\",\n  \"Brentwood\",\n  \"Bridgend\",\n  \"Brighton and Hove\",\n  \"Bristol, City of\",\n  \"Broadland\",\n  \"Bromley\",\n  \"Bromsgrove\",\n  \"Broxbourne\",\n  \"Broxtowe\",\n  \"Burnley\",\n  \"Bury\",\n  \"Caerphilly\",\n  \"Calderdale\",\n  \"Cambridge\",\n  \"Camden\",\n  \"Cannock Chase\",\n  \"Canterbury\",\n  \"Cardiff\",\n  \"Carlisle\",\n  \"Carmarthenshire\",\n  \"Castle Point\",\n  \"Causeway Coast and Glens\",\n  \"Central Bedfordshire\",\n  \"Ceredigion\",\n  \"Charnwood\",\n  \"Chelmsford\",\n  \"Cheltenham\",\n  \"Cherwell\",\n  \"Cheshire East\",\n  \"Cheshire West and Chester\",\n  \"Chesterfield\",\n  \"Chichester\",\n  \"Chiltern\",\n  \"Chorley\",\n  \"City of Edinburgh\",\n  \"City of London\",\n  \"Clackmannanshire\",\n  \"Colchester\",\n  \"Conwy\",\n  \"Copeland\",\n  \"Corby\",\n  \"Cornwall and Isles of Scilly\",\n  \"Cotswold\",\n  \"County Durham\",\n  \"Coventry\",\n  \"Craven\",\n  \"Crawley\",\n  \"Croydon\",\n  \"Dacorum\",\n  \"Darlington\",\n  \"Dartford\",\n  \"Daventry\",\n  \"Denbighshire\",\n  \"Derby\",\n  \"Derbyshire Dales\",\n  \"Derry City and Strabane\",\n  \"Doncaster\",\n  \"Dorset\",\n  \"Dover\",\n  \"Dudley\",\n  \"Dumfries and Galloway\",\n  \"Dundee City\",\n  \"Ealing\",\n  \"East Ayrshire\",\n  \"East Cambridgeshire\",\n  \"East Devon\",\n  \"East Dunbartonshire\",\n  \"East Hampshire\",\n  \"East Hertfordshire\",\n  \"East Lindsey\",\n  \"East Lothian\",\n  \"East Northamptonshire\",\n  \"East Renfrewshire\",\n  \"East Riding of Yorkshire\",\n  \"East Staffordshire\",\n  \"East Suffolk\",\n  \"Eastbourne\",\n  \"Eastleigh\",\n  \"Eden\",\n  \"Elmbridge\",\n  \"Enfield\",\n  \"Epping Forest\",\n  \"Epsom and Ewell\",\n  \"Erewash\",\n  \"Exeter\",\n  \"Falkirk\",\n  \"Fareham\",\n  \"Fenland\",\n  \"Fermanagh and Omagh\",\n  \"Fife\",\n  \"Flintshire\",\n  \"Folkestone and Hythe\",\n  \"Forest of Dean\",\n  \"Fylde\",\n  \"Gateshead\",\n  \"Gedling\",\n  \"Glasgow City\",\n  \"Gloucester\",\n  \"Gosport\",\n  \"Gravesham\",\n  \"Great Yarmouth\",\n  \"Greenwich\",\n  \"Guildford\",\n  \"Gwynedd\",\n  \"Hackney and City of London\",\n  \"Halton\",\n  \"Hambleton\",\n  \"Hammersmith and Fulham\",\n  \"Harborough\",\n  \"Haringey\",\n  \"Harlow\",\n  \"Harrogate\",\n  \"Harrow\",\n  \"Hart\",\n  \"Hartlepool\",\n  \"Hastings\",\n  \"Havant\",\n  \"Havering\",\n  \"Herefordshire, County of\",\n  \"Hertsmere\",\n  \"High Peak\",\n  \"Highland\",\n  \"Hillingdon\",\n  \"Hinckley and Bosworth\",\n  \"Horsham\",\n  \"Hounslow\",\n  \"Huntingdonshire\",\n  \"Hyndburn\",\n  \"Inverclyde\",\n  \"Ipswich\",\n  \"Isle of Anglesey\",\n  \"Isle of Wight\",\n  \"Isles of Scilly\",\n  \"Islington\",\n  \"Kensington and Chelsea\",\n  \"Kettering\",\n  \"King's Lynn and West Norfolk\",\n  \"Kingston upon Hull, City of\",\n  \"Kingston upon Thames\",\n  \"Kirklees\",\n  \"Knowsley\",\n  \"Lambeth\",\n  \"Lancaster\",\n  \"Leeds\",\n  \"Leicester\",\n  \"Lewes\",\n  \"Lewisham\",\n  \"Lichfield\",\n  \"Lincoln\",\n  \"Lisburn and Castlereagh\",\n  \"Liverpool\",\n  \"Luton\",\n  \"Maidstone\",\n  \"Maldon\",\n  \"Malvern Hills\",\n  \"Manchester\",\n  \"Mansfield\",\n  \"Medway\",\n  \"Melton\",\n  \"Mendip\",\n  \"Merthyr Tydfil\",\n  \"Merton\",\n  \"Mid and East Antrim\",\n  \"Mid Devon\",\n  \"Mid Suffolk\",\n  \"Mid Sussex\",\n  \"Mid Ulster\",\n  \"Middlesbrough\",\n  \"Midlothian\",\n  \"Milton Keynes\",\n  \"Mole Valley\",\n  \"Monmouthshire\",\n  \"Moray\",\n  \"Na h-Eileanan Siar\",\n  \"Neath Port Talbot\",\n  \"New Forest\",\n  \"Newark and Sherwood\",\n  \"Newcastle upon Tyne\",\n  \"Newcastle-under-Lyme\",\n  \"Newham\",\n  \"Newport\",\n  \"Newry, Mourne and Down\",\n  \"North Ayrshire\",\n  \"North Devon\",\n  \"North East Derbyshire\",\n  \"North East Lincolnshire\",\n  \"North Hertfordshire\",\n  \"North Kesteven\",\n  \"North Lanarkshire\",\n  \"North Lincolnshire\",\n  \"North Norfolk\",\n  \"North Somerset\",\n  \"North Tyneside\",\n  \"North Warwickshire\",\n  \"North West Leicestershire\",\n  \"Northampton\",\n  \"Northumberland\",\n  \"Norwich\",\n  \"Nottingham\",\n  \"Nuneaton and Bedworth\",\n  \"Oadby and Wigston\",\n  \"Oldham\",\n  \"Orkney Islands\",\n  \"Oxford\",\n  \"Pembrokeshire\",\n  \"Pendle\",\n  \"Perth and Kinross\",\n  \"Peterborough\",\n  \"Plymouth\",\n  \"Portsmouth\",\n  \"Powys\",\n  \"Preston\",\n  \"Reading\",\n  \"Redbridge\",\n  \"Redcar and Cleveland\",\n  \"Redditch\",\n  \"Reigate and Banstead\",\n  \"Renfrewshire\",\n  \"Resident outside Wales\",\n  \"Rhondda Cynon Taf\",\n  \"Ribble Valley\",\n  \"Richmond upon Thames\",\n  \"Richmondshire\",\n  \"Rochdale\",\n  \"Rochford\",\n  \"Rossendale\",\n  \"Rother\",\n  \"Rotherham\",\n  \"Rugby\",\n  \"Runnymede\",\n  \"Rushcliffe\",\n  \"Rushmoor\",\n  \"Rutland\",\n  \"Ryedale\",\n  \"Salford\",\n  \"Sandwell\",\n  \"Scarborough\",\n  \"Scottish Borders\",\n  \"Sedgemoor\",\n  \"Sefton\",\n  \"Selby\",\n  \"Sevenoaks\",\n  \"Sheffield\",\n  \"Shetland Islands\",\n  \"Shropshire\",\n  \"Slough\",\n  \"Solihull\",\n  \"Somerset West and Taunton\",\n  \"South Ayrshire\",\n  \"South Bucks\",\n  \"South Cambridgeshire\",\n  \"South Derbyshire\",\n  \"South Gloucestershire\",\n  \"South Hams\",\n  \"South Holland\",\n  \"South Kesteven\",\n  \"South Lakeland\",\n  \"South Lanarkshire\",\n  \"South Norfolk\",\n  \"South Northamptonshire\",\n  \"South Oxfordshire\",\n  \"South Ribble\",\n  \"South Somerset\",\n  \"South Staffordshire\",\n  \"South Tyneside\",\n  \"Southampton\",\n  \"Southend-on-Sea\",\n  \"Southwark\",\n  \"Spelthorne\",\n  \"St Albans\",\n  \"St. Helens\",\n  \"Stafford\",\n  \"Staffordshire Moorlands\",\n  \"Stevenage\",\n  \"Stirling\",\n  \"Stockport\",\n  \"Stockton-on-Tees\",\n  \"Stoke-on-Trent\",\n  \"Stratford-on-Avon\",\n  \"Stroud\",\n  \"Sunderland\",\n  \"Surrey Heath\",\n  \"Sutton\",\n  \"Swale\",\n  \"Swansea\",\n  \"Swindon\",\n  \"Tameside\",\n  \"Tamworth\",\n  \"Tandridge\",\n  \"Teignbridge\",\n  \"Telford and Wrekin\",\n  \"Tendring\",\n  \"Test Valley\",\n  \"Tewkesbury\",\n  \"Thanet\",\n  \"Three Rivers\",\n  \"Thurrock\",\n  \"Tonbridge and Malling\",\n  \"Torbay\",\n  \"Torfaen\",\n  \"Torridge\",\n  \"Tower Hamlets\",\n  \"Trafford\",\n  \"Tunbridge Wells\",\n  \"Uttlesford\",\n  \"Vale of Glamorgan\",\n  \"Vale of White Horse\",\n  \"Wakefield\",\n  \"Walsall\",\n  \"Waltham Forest\",\n  \"Wandsworth\",\n  \"Warrington\",\n  \"Warwick\",\n  \"Watford\",\n  \"Waverley\",\n  \"Wealden\",\n  \"Wellingborough\",\n  \"Welwyn Hatfield\",\n  \"West Berkshire\",\n  \"West Devon\",\n  \"West Dunbartonshire\",\n  \"West Lancashire\",\n  \"West Lindsey\",\n  \"West Lothian\",\n  \"West Oxfordshire\",\n  \"West Suffolk\",\n  \"Westminster\",\n  \"Wigan\",\n  \"Wiltshire\",\n  \"Winchester\",\n  \"Windsor and Maidenhead\",\n  \"Wirral\",\n  \"Woking\",\n  \"Wokingham\",\n  \"Wolverhampton\",\n  \"Worcester\",\n  \"Worthing\",\n  \"Wrexham\",\n  \"Wychavon\",\n  \"Wycombe\",\n  \"Wyre\",\n  \"Wyre Forest\",\n  \"York\"\n]\n","import React, { useState, useEffect } from 'react'\nimport Data from '../utilities/Data'\nimport Deaths from '../components/Deaths'\nimport Cases from '../components/Cases'\nimport Tests from '../components/Tests'\nimport Hospital from '../components/Hospital'\nimport Admissions from '../components/Admissions'\nimport VentilatorBeds from '../components/VentilatorBeds'\nimport WorldWideDeaths from '../components/WorldWideDeaths'\nimport WorldWideCases from '../components/WorldWideCases'\nimport Footer from '../components/Footer'\nimport Input from '../components/Input'\nimport './App.css'\n\nfunction App() {\n\n  const [areaType, setAreaType] = useState('overview')\n  const [areaName, setAreaName] = useState('')\n  const [apiData, setAPIData] = useState({})\n  const [apiCaseData, setAPICaseData] = useState([])\n  const [apiDeathData, setAPIDeathData] = useState([])\n  const [apiHospitalData, setAPIHospitalData] = useState({})\n  const [apiRegionData, setAPIRegionData] = useState({})\n  const [apiNationData, setAPINationData] = useState({})\n  const [ecdcCountryData, setECDCCountryData] = useState({})\n  const [noData, setNoData] = useState(false)\n\n  useEffect(() => {\n    if (areaType !== 'world') {\n      let data = new Data(areaType, areaName)\n      data\n        .getAPIData()\n        .then((response) => {\n          setAPIData(response)\n          setNoData(false)\n        })\n        .catch((err) => {\n          console.log(err)\n          setNoData(true)\n        })\n        .then(() => {\n          data = null\n        })\n    }\n  }, [areaType, areaName]);\n\n  useEffect(() => {\n    let data = new Data(areaType, areaName)\n    if (apiData !== undefined && apiData.casesDateYMD != null) {\n      data\n        .getAPICaseDataByLA(apiData.casesDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPICaseData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n        .then(() => {\n          data = null\n        })\n    }\n    if (apiData !== undefined && apiData.deathsDateYMD != null) {\n      data\n        .getAPIDeathDataByLA(apiData.deathsDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPIDeathData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n        .then(() => {\n          data = null\n        })\n    }\n  }, [apiData.deathsDate, apiData.casesDate, areaType, areaName]);\n\n  useEffect(() => {\n    let data = new Data()\n    data\n      .getAPIHospitalDataByNHSRegion()\n      .then((response) => {\n        setAPIHospitalData(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        data = null\n      })\n  }, []);\n\n  useEffect(() => {\n    let data = new Data()\n    data\n      .getAPIRegionData()\n      .then((response) => {\n        setAPIRegionData(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        data = null\n      })\n  }, []);\n\n  useEffect(() => {\n    let data = new Data()\n    data\n      .getAPINationData()\n      .then((response) => {\n        setAPINationData(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        data = null\n      })\n  }, []);\n\n  useEffect(() => {\n    if (areaType === 'world' || ecdcCountryData === {}) {\n      let data = new Data()\n      data\n        .getECDCData()\n        .then((response) => {\n          setECDCCountryData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n        .then(() => {\n          data = null\n        })\n    }\n  }, [areaType]);\n\n  const updateAreaTypeAndName = (newAreaType, newAreaName) => {\n    setAreaType(newAreaType)\n    setAreaName(newAreaName)\n  }\n\n  return (\n    <div className=\"App bg-dark\">\n\n      <h1 className=\"display-md-1 text-center text-light p-2\">Coronavirus {areaType === 'world' ? 'World' : areaName === '' ? 'UK' : areaName}</h1>\n      {(noData)\n        ?\n        <p className=\"display-md-3 display-xs-2 text-center text-danger\">\n          No data is currently available</p>\n        : null\n      }\n\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n          <Input areaType={areaType}\n            areaName={areaName}\n            updateAreaTypeAndName={updateAreaTypeAndName} />\n        </div>\n\n        {(areaType === 'nhsRegion' || areaType === 'world')\n          ? null\n          :\n          <div className=\"row\">\n            <Deaths\n              areaType={areaType}\n              areaName={areaName}\n              datePub={apiData.deathsDate}\n              newPub={apiData.deathsNew}\n              cumPub={apiData.deathsCum}\n              ratePub={apiData.deathsRate}\n              averPub={apiData.deathsAverage}\n              deathsPub={apiData.deathsPub}\n              dateAct={apiData.deathsDateAct}\n              newAct={apiData.deathsNewAct}\n              cumAct={apiData.deathsCumAct}\n              rateAct={apiData.deathsRateAct}\n              averAct={apiData.deathsAverageAct}\n              deathsAct={apiData.deathsAct}\n              deathsLoc={apiDeathData}\n              regions={apiRegionData.deaths}\n              regionsAct={apiRegionData.deathsAct}\n              regionsAve={apiRegionData.deathsAve}\n              nations={apiNationData.deaths}\n              nationsAct={apiNationData.deathsAct}\n            />\n            <Cases\n              areaType={areaType}\n              areaName={areaName}\n              datePub={apiData.casesDate}\n              newPub={apiData.casesNew}\n              cumPub={apiData.casesCum}\n              ratePub={apiData.casesRate}\n              averPub={apiData.casesAverage}\n              casesPub={apiData.casesPub}\n              dateAct={apiData.casesDateAct}\n              newAct={apiData.casesNewAct}\n              cumAct={apiData.casesCumAct}\n              rateAct={apiData.casesRateAct}\n              averAct={apiData.casesAverageAct}\n              casesAct={apiData.casesAct}\n              casesLoc={apiCaseData}\n              regions={apiRegionData.cases}\n              regionsAct={apiRegionData.casesAct}\n              regionsAve={apiRegionData.casesAve}\n              nations={apiNationData.cases}\n              nationsAct={apiNationData.casesAct}\n              casesByGender={apiData.casesByGender}\n              maleCases={apiData.maleCases}\n              femaleCases={apiData.femaleCases}\n              totalGenderCases={apiData.totalGenderCases}\n              genderDate={apiData.genderDate}\n              caseAgeRanges={apiData.caseAgeRanges}\n            />\n            {\n              (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n                ? null\n                :\n                <Tests\n                  areaName={areaName}\n                  date={apiData.testsDate}\n                  newP1={apiData.newP1}\n                  newP2={apiData.newP2}\n                  newP3={apiData.newP3}\n                  newP4={apiData.newP4}\n                  newTotal={apiData.newTests}\n                  cumP1={apiData.cumP1}\n                  cumP2={apiData.cumP2}\n                  cumP3={apiData.cumP3}\n                  cumP4={apiData.cumP4}\n                  cumTotal={apiData.cumTests}\n                  tests1={apiData.tests1}\n                  tests2={apiData.tests2}\n                  tests3={apiData.tests3}\n                  tests4={apiData.tests4}\n                  testsTot={apiData.testsTot}\n                />\n            }\n          </div>\n        }\n\n        {(areaType === 'region' || areaType === 'ltla' || areaType === \"utla\" || areaType === 'world')\n          ? null\n          :\n          <div className=\"row mb-2\">\n            <Hospital\n              areaName={areaName}\n              date={apiData.hospitalDate}\n              latest={apiData.hospitalNew}\n              average={apiData.hospitalAverage}\n              patients={apiData.patients}\n              regions={apiHospitalData.patients}\n              regionsAve={apiHospitalData.patientsAve}\n            />\n            <Admissions\n              areaName={areaName}\n              date={apiData.admissionsDate}\n              latest={apiData.admissionsNew}\n              average={apiData.admissionsAverage}\n              cumulative={apiData.admissionsCum}\n              admissions={apiData.admissions}\n              admissionsByAge={apiData.admissionsByAge}\n              regions={apiHospitalData.admissions}\n              regionsAve={apiHospitalData.admissionsAve}\n            />\n            <VentilatorBeds\n              areaName={areaName}\n              date={apiData.ventilatorBedsDate}\n              latest={apiData.ventilatorBedsNew}\n              average={apiData.ventilatorBedsAverage}\n              ventilatorBeds={apiData.ventilatorBeds}\n              regions={apiHospitalData.ventilatorBeds}\n              regionsAve={apiHospitalData.ventilatorBedsAve}\n            />\n          </div>\n        }\n\n        {(areaType !== 'world')\n          ? null\n          :\n          <div className=\"row mb-3\">\n            <WorldWideDeaths\n              latestDate={ecdcCountryData.latestDate}\n              deathsTot={ecdcCountryData.deathsTot}\n              deaths={ecdcCountryData.deaths}\n            />\n            <WorldWideCases\n              latestDate={ecdcCountryData.latestDate}\n              casesTot={ecdcCountryData.casesTot}\n              cases={ecdcCountryData.cases}\n            />\n          </div>\n        }\n\n        <div className=\"row mb-2\">\n          <Footer />\n        </div>\n\n      </div>\n    </div >\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}