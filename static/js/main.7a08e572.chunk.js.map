{"version":3,"sources":["utilities/Data.js","utilities/Graph.js","components/DataTable.js","components/Deaths.js","utilities/Utils.js","components/Cases.js","components/Tests.js","components/Hospital.js","components/Admissions.js","components/IntensiveCare.js","components/Input.js","containers/App.js","serviceWorker.js","index.js"],"names":["Data","areaType","areaName","this","filters","structure","request","JSON","stringify","fetch","response","json","responseData","Graph","CustomTooltip","payload","label","active","className","Date","date","toLocaleDateString","value","toLocaleString","width","height","data","props","margin","top","right","bottom","left","stroke","vertical","tick","fontSize","interval","tickFormatter","tickItem","month","dataKey","content","type","dot","Component","DataTable","map","key","count","Deaths","latest","cumulative","rate","deaths","dateActual","latestActual","cumulativeActual","rateActual","deathsActual","deathsSorted","sort","a","b","deathsActualSorted","id","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","Cases","cases","casesActual","casesSorted","casesActualSorted","console","log","Tests","piller1","piller2","piller3","piller4","total","cumPiller1","cumPiller2","cumPiller3","cumPiller4","cumPillerTotal","tests1","tests2","tests3","tests4","testsTotal","testsTotalSorted","Hospital","patients","patientsSorted","Admissions","admissions","admissionsSorted","IntensiveCare","intensiveCare","intensiveCareSorted","Input","updateAreaTypeAndName","useState","areaNames","setAreaNames","nameOptions","overview","nation","region","nhsRegion","utla","ltla","onAreaTypeChange","event","target","onSubmitClick","document","getElementById","htmlFor","defaultValue","onChange","name","onClick","App","setAreaType","setAreaName","apiData","setAPIData","deathsDate","deathsLatest","deathsCum","deathsRate","deathsDateActual","deathsLatestActual","deathsCumActual","deathsRateActual","casesDate","casesLatest","casesCum","casesRate","casesDateActual","casesLatestActual","casesCumActual","casesRateActual","hospitalDate","hospitalLatest","admissionsDate","admissionsLatest","admissionsCum","intensiveCareDate","intensiveCareLatest","testsDate","testsP1","testsP2","testsP3","testsP4","totalPillars","cumTestsP1","cumTestsP2","cumTestsP3","cumTestsP4","cumTotalPillars","totalTests","useEffect","getAPIData","then","results","catch","err","undefined","length","i","c","rowDate","newDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDateRate","newDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDateRate","newCasesByPublishDate","cumCasesByPublishDate","cumCasesByPublishDateRate","newCasesBySpecimenDate","cumCasesBySpecimenDate","cumCasesBySpecimenDateRate","newPillarOneTestsByPublishDate","newPillarTwoTestsByPublishDate","newPillarThreeTestsByPublishDate","newPillarFourTestsByPublishDate","parseInt","cumPillarOneTestsByPublishDate","cumPillarTwoTestsByPublishDate","cumPillarThreeTestsByPublishDate","cumPillarFourTestsByPublishDate","hospitalCases","newAdmissions","cumAdmissions","covidOccupiedMVBeds","newAreaType","newAreaName","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a08e572.chunk.js","sourcesContent":["export default class Data {\n\n  constructor(areaType, areaName) {\n    this.areaType = areaType;\n    this.areaName = areaName;\n  }\n\n  // Fetch data from the government API\n  async getAPIData() {\n\n    let filters = `areaType=${this.areaType}`\n    if (this.areaName !== '') {\n      filters += `;areaName=${this.areaName}`\n    }\n\n    const structure = {\n      \"areaType\": \"areaType\",\n      \"areaName\": \"areaName\",\n      \"areaCode\": \"areaCode\",\n      \"date\": \"date\",\n      \"newCasesByPublishDate\": \"newCasesByPublishDate\",\n      \"cumCasesByPublishDate\": \"cumCasesByPublishDate\",\n      \"cumCasesByPublishDateRate\": \"cumCasesByPublishDateRate\",\n      \"newCasesBySpecimenDate\": \"newCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDate\": \"cumCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDateRate\": \"cumCasesBySpecimenDateRate\",\n      \"maleCases\": \"maleCases\",\n      \"femaleCases\": \"femaleCases\",\n      \"newPillarOneTestsByPublishDate\": \"newPillarOneTestsByPublishDate\",\n      \"cumPillarOneTestsByPublishDate\": \"cumPillarOneTestsByPublishDate\",\n      \"newPillarTwoTestsByPublishDate\": \"newPillarTwoTestsByPublishDate\",\n      \"cumPillarTwoTestsByPublishDate\": \"cumPillarTwoTestsByPublishDate\",\n      \"newPillarThreeTestsByPublishDate\": \"newPillarThreeTestsByPublishDate\",\n      \"cumPillarThreeTestsByPublishDate\": \"cumPillarThreeTestsByPublishDate\",\n      \"newPillarFourTestsByPublishDate\": \"newPillarFourTestsByPublishDate\",\n      \"cumPillarFourTestsByPublishDate\": \"cumPillarFourTestsByPublishDate\",\n      \"newAdmissions\": \"newAdmissions\", \"cumAdmissions\": \"cumAdmissions\",\n      \"cumAdmissionsByAge\": \"cumAdmissionsByAge\",\n      \"cumTestsByPublishDate\": \"cumTestsByPublishDate\",\n      \"newTestsByPublishDate\": \"newTestsByPublishDate\",\n      \"covidOccupiedMVBeds\": \"covidOccupiedMVBeds\",\n      \"hospitalCases\": \"hospitalCases\",\n      \"plannedCapacityByPublishDate\": \"plannedCapacityByPublishDate\",\n      \"newDeaths28DaysByPublishDate\": \"newDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDate\": \"cumDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDateRate\": \"cumDeaths28DaysByPublishDateRate\",\n      \"newDeaths28DaysByDeathDate\": \"newDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDate\": \"cumDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDateRate\": \"cumDeaths28DaysByDeathDateRate\",\n    }\n\n    const page = \"&page=1\"\n    const request = `\n    https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n    `\n    const response = await fetch(request);\n    const responseData = await response.json();\n    return responseData;\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  Tooltip, CartesianGrid,\n} from 'recharts';\n\nexport default class Graph extends Component {\n\n  render() {\n\n    function CustomTooltip({ payload, label, active }) {\n      if (active) {\n        return (\n          <div className=\"custom-tooltip\">\n            <span className=\"label\">{(new Date(payload[0].payload.date)).toLocaleDateString()} </span>\n            <span className=\"data\">{(payload[0].value).toLocaleString()}</span>\n          </div>\n        );\n      }\n      return null;\n    }\n    const formatXAxis = (tickItem) => {\n      const d = new Date(tickItem);\n      return d.toLocaleString('default', { month: 'short' });\n    };\n\n    return (\n      <div className=\"line-chart-wrapper\">\n        <LineChart\n          width={300} height={200} data={this.props.data}\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n        >\n          <CartesianGrid stroke=\"#ccc\" vertical={false} />\n          <YAxis tick={{ fontSize: '0.8rem' }} />\n          <XAxis interval={30} tickFormatter={formatXAxis}\n            tick={{ fontSize: '0.8rem' }} dataKey=\"date\" />\n          <Tooltip content={<CustomTooltip />} />\n          <Line type=\"monotone\" dataKey=\"count\" stroke=\"#ff7300\" dot={false} />\n        </LineChart>\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react'\n\nexport default function DataTable({ data } = this.props) {\n  return (\n    <div className=\"table-wrapper-scroll-y custom-scrollbar\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Count</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((date) => {\n              return (\n                <tr key={date.date}>\n                  <td>{(new Date(date.date)).toLocaleDateString()}</td>\n                  <td>{date.count.toLocaleString()}</td>\n                </tr>\n              )\n            }\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function Deaths({ date, latest, cumulative, rate, deaths,\n  dateActual, latestActual, cumulativeActual, rateActual, deathsActual }\n  = this.props) {\n\n  const deathsSorted = [...deaths].sort(compare())\n  const deathsActualSorted = [...deathsActual].sort(compare())\n\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Deaths\n          <ul className=\"nav nav-tabs\" id=\"deaths-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-tab\" data-toggle=\"tab\" href=\"#published\" role=\"tab\" aria-controls=\"published\" aria-selected=\"true\">Published Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-data-tab\" data-toggle=\"tab\" href=\"#publisheddata\" role=\"tab\" aria-controls=\"publisheddata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-tab\" data-toggle=\"tab\" href=\"#actual\" role=\"tab\" aria-controls=\"actual\" aria-selected=\"false\">Actual Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-data-tab\" data-toggle=\"tab\" href=\"#actualdata\" role=\"tab\" aria-controls=\"actualdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"deaths-content\">\n            <div className=\"tab-pane fade show active\" id=\"published\" role=\"tabpanel\"\n              aria-labelledby=\"published-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Cumulative\n            </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumulative}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Rate\n            </span>\n                <span className=\"col-sm-4 text-right\">\n                  {rate}\n                </span>\n              </div>\n              <Graph data={deathsSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publisheddata\" role=\"tabpanel\" aria-labelledby=\"published-data-tab\">\n              <DataTable data={deaths} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actual\" role=\"tabpanel\" aria-labelledby=\"actual-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {dateActual}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latestActual}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumulativeActual}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {rateActual}\n                </span>\n              </div>\n              <Graph data={deathsActualSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualdata\" role=\"tabpanel\" aria-labelledby=\"actual-data-tab\">\n              <DataTable data={deathsActual} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","export const compare = () => {\n  return function (a, b) {\n    if (a.date > b.date) return 1\n    if (a.date < b.date) return -1\n    return 0\n  }\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function Cases({ date, latest, cumulative, rate, cases,\n  dateActual, latestActual, cumulativeActual, rateActual, casesActual }\n  = this.props) {\n\n  const casesSorted = [...cases].sort(compare())\n  const casesActualSorted = [...casesActual].sort(compare())\n\n  console.log(date, latest, cumulative, rate, cases,\n    dateActual, latestActual, cumulativeActual, rateActual, casesActual)\n\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Cases\n          <ul className=\"nav nav-tabs\" id=\"cases-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-cases-tab\" data-toggle=\"tab\" href=\"#publishedcases\" role=\"tab\" aria-controls=\"publishedcases\" aria-selected=\"true\">Published Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-cases-data-tab\" data-toggle=\"tab\" href=\"#publishedcasesdata\" role=\"tab\" aria-controls=\"publishedcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-tab\" data-toggle=\"tab\" href=\"#actualcases\" role=\"tab\" aria-controls=\"actualcases\" aria-selected=\"false\">Actual Date</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-data-tab\" data-toggle=\"tab\" href=\"#actualcasesdata\" role=\"tab\" aria-controls=\"actualcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"cases-content\">\n            <div className=\"tab-pane fade show active\" id=\"publishedcases\" role=\"tabpanel\"\n              aria-labelledby=\"published-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Cumulative\n            </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumulative}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Rate\n            </span>\n                <span className=\"col-sm-4 text-right\">\n                  {rate}\n                </span>\n              </div>\n              <Graph data={casesSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publishedcasesdata\" role=\"tabpanel\" aria-labelledby=\"published-cases-data-tab\">\n              <DataTable data={cases} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualcases\" role=\"tabpanel\" aria-labelledby=\"actual-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {dateActual}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latestActual}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumulativeActual}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {rateActual}\n                </span>\n              </div>\n              <Graph data={casesActualSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualcasesdata\" role=\"tabpanel\" aria-labelledby=\"actual-cases-data-tab\">\n              <DataTable data={casesActual} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function Tests({ date, piller1, piller2, piller3, piller4, total, cumPiller1, cumPiller2, cumPiller3, cumPiller4, cumPillerTotal, tests1, tests2, tests3, tests4, testsTotal } = this.props) {\n\n  const tests1Sorted = [...tests1].sort(compare())\n  const tests2Sorted = [...tests2].sort(compare())\n  const tests3Sorted = [...tests3].sort(compare())\n  const tests4Sorted = [...tests4].sort(compare())\n  const testsTotalSorted = [...testsTotal].sort(compare())\n\n  return (\n\n    <div className=\"col-md-4\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Tests\n          <ul className=\"nav nav-tabs\" id=\"tests-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"tests-tab\" data-toggle=\"tab\" href=\"#tests\" role=\"tab\" aria-controls=\"tests\" aria-selected=\"true\">Tests</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p1-data-tab\" data-toggle=\"tab\" href=\"#p1data\" role=\"tab\" aria-controls=\"p1data\" aria-selected=\"false\">P1</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p2-data-tab\" data-toggle=\"tab\" href=\"#p2data\" role=\"tab\" aria-controls=\"p2data\" aria-selected=\"false\">P2</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p3-data-tab\" data-toggle=\"tab\" href=\"#p3data\" role=\"tab\" aria-controls=\"p3data\" aria-selected=\"false\">P3</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p4-data-tab\" data-toggle=\"tab\" href=\"#p4data\" role=\"tab\" aria-controls=\"p4data\" aria-selected=\"false\">P4</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"tests-data-tab\" data-toggle=\"tab\" href=\"#testsdata\" role=\"tab\" aria-controls=\"testsdata\" aria-selected=\"false\">Total</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"tests-content\">\n            <div className=\"tab-pane fade show active\" id=\"tests\" role=\"tabpanel\"\n              aria-labelledby=\"tests-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 1\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {piller1}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumPiller1}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 2\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {piller2}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumPiller2}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 3\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {piller3}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumPiller3}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 4\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {piller4}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumPiller4}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Total\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {total}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumPillerTotal}\n                </span>\n              </div>\n              <Graph data={testsTotalSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p1data\" role=\"tabpanel\" aria-labelledby=\"p1-data-tab\">\n              <DataTable data={tests1} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p2data\" role=\"tabpanel\" aria-labelledby=\"p2-data-tab\">\n              <DataTable data={tests2} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p3data\" role=\"tabpanel\" aria-labelledby=\"p3-data-tab\">\n              <DataTable data={tests3} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p4data\" role=\"tabpanel\" aria-labelledby=\"p4-data-tab\">\n              <DataTable data={tests4} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"testsdata\" role=\"tabpanel\" aria-labelledby=\"tests-data-tab\">\n              <DataTable data={testsTotal} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function Hospital({ date, latest, patients } = this.props) {\n  const patientsSorted = [...patients].sort(compare())\n  return (\n\n    <div className=\"col-md-4\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Patients in Hospital\n          <ul className=\"nav nav-tabs\" id=\"patients-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"patients-tab\" data-toggle=\"tab\" href=\"#patients\" role=\"tab\" aria-controls=\"patients\" aria-selected=\"true\">Patients</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"patients-data-tab\" data-toggle=\"tab\" href=\"#patientsdata\" role=\"tab\" aria-controls=\"patientsdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"patients-content\">\n            <div className=\"tab-pane fade show active\" id=\"patients\" role=\"tabpanel\"\n              aria-labelledby=\"patients-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <Graph data={patientsSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"patientsdata\" role=\"tabpanel\" aria-labelledby=\"patients-data-tab\">\n              <DataTable data={patients} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function Admissions({ date, latest, cumulative, admissions } = this.props) {\n  const admissionsSorted = [...admissions].sort(compare())\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Hospital Admissions\n          <ul className=\"nav nav-tabs\" id=\"admissions-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"admissions-tab\" data-toggle=\"tab\" href=\"#admissions\" role=\"tab\" aria-controls=\"admissions\" aria-selected=\"true\">Admissions</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"admissions-data-tab\" data-toggle=\"tab\" href=\"#admissionsdata\" role=\"tab\" aria-controls=\"admissionsdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"admissions-content\">\n            <div className=\"tab-pane fade show active\" id=\"admissions\" role=\"tabpanel\"\n              aria-labelledby=\"admissions-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <Graph data={admissionsSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"admissionsdata\" role=\"tabpanel\" aria-labelledby=\"admissions-data-tab\">\n              <DataTable data={admissions} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport DataTable from '../components/DataTable'\nimport { compare } from '../utilities/Utils'\n\nexport default function IntensiveCare({ date, latest, intensiveCare } = this.props) {\n  const intensiveCareSorted = [...intensiveCare].sort(compare())\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Intensive Care Beds Occupied\n          <ul className=\"nav nav-tabs\" id=\"intensivecare-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"intensivecare-tab\" data-toggle=\"tab\" href=\"#intensivecare\" role=\"tab\" aria-controls=\"intensivecare\" aria-selected=\"true\">Intensive Care</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"intensivecare-data-tab\" data-toggle=\"tab\" href=\"#intensivecaredata\" role=\"tab\" aria-controls=\"intensivecaredata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"intensivecare-content\">\n            <div className=\"tab-pane fade show active\" id=\"intensivecare\" role=\"tabpanel\"\n              aria-labelledby=\"intensivecare-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-8 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <Graph data={intensiveCareSorted} />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"intensivecaredata\" role=\"tabpanel\" aria-labelledby=\"intensivecare-data-tab\">\n              <DataTable data={intensiveCare} />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React, { useState } from 'react'\n\nexport default function Input({ areaType, areaName, updateAreaTypeAndName } = this.props) {\n\n  const [areaNames, setAreaNames] = useState(['']);\n\n  const nameOptions = {\n    overview: [''],\n    nation: ['England', 'Scotland', 'Wales', 'Northern Ireland'],\n    region: ['East Midlands', 'East of England', 'London', 'North East',\n      'North West', 'South East', 'South West', 'West Midlands',\n      'Yorkshire and The Humber'],\n    nhsRegion: ['East of England', 'London', 'Midlands',\n      'North East and Yorkshire', 'North West', 'South East',\n      'South West'],\n    utla: ['Aberdeen City', 'Aberdeenshire', 'Angus', 'Argyll and Bute', 'Barking and Dagenham', 'Barnet', 'Barnsley', 'Bath and North East Somerset', 'Bedford', 'Bexley', 'Birmingham', 'Blackburn with Darwen', 'Blackpool', 'Bolton', 'Bournemouth, Christchurch and Poole', 'Bracknell Forest', 'Bradford', 'Brent', 'Brighton and Hove', 'Bristol, City of', 'Bromley', 'Buckinghamshire', 'Bury', 'Calderdale', 'Cambridgeshire', 'Camden', 'Central Bedfordshire', 'Cheshire East', 'Cheshire West and Chester', 'City of Edinburgh', 'Clackmannanshire', 'Cornwall and Isles of Scilly', 'County Durham', 'Coventry', 'Croydon', 'Cumbria', 'Darlington', 'Derby', 'Derbyshire', 'Devon', 'Doncaster', 'Dorset', 'Dudley', 'Dumfries and Galloway', 'Dundee City', 'Ealing', 'East Ayrshire', 'East Dunbartonshire', 'East Lothian', 'East Renfrewshire', 'East Riding of Yorkshire', 'East Sussex', 'Enfield', 'Essex', 'Falkirk', 'Fife', 'Gateshead', 'Glasgow City', 'Gloucestershire', 'Greenwich', 'Hackney and City of London', 'Halton', 'Hammersmith and Fulham', 'Hampshire', 'Haringey', 'Harrow', 'Hartlepool', 'Havering', 'Herefordshire, County of', 'Hertfordshire', 'Highland', 'Hillingdon', 'Hounslow', 'Inverclyde', 'Isle of Wight', 'Islington', 'Kensington and Chelsea', 'Kent', 'Kingston upon Hull, City of', 'Kingston upon Thames', 'Kirklees', 'Knowsley', 'Lambeth', 'Lancashire', 'Leeds', 'Leicester', 'Leicestershire', 'Lewisham', 'Lincolnshire', 'Liverpool', 'Luton', 'Manchester', 'Medway', 'Merton', 'Middlesbrough', 'Midlothian', 'Milton Keynes', 'Moray', 'Na h-Eileanan Siar', 'Newcastle upon Tyne', 'Newham', 'Norfolk', 'North Ayrshire', 'North East Lincolnshire', 'North Lanarkshire', 'North Lincolnshire', 'North Somerset', 'North Tyneside', 'North Yorkshire', 'Northamptonshire', 'Northumberland', 'Nottingham', 'Nottinghamshire', 'Oldham', 'Orkney Islands', 'Oxfordshire', 'Perth and Kinross', 'Peterborough', 'Plymouth', 'Portsmouth', 'Reading', 'Redbridge', 'Redcar and Cleveland', 'Renfrewshire', 'Richmond upon Thames', 'Rochdale', 'Rotherham', 'Rutland', 'Salford', 'Sandwell', 'Scottish Borders', 'Sefton', 'Sheffield', 'Shetland Islands', 'Shropshire', 'Slough', 'Solihull', 'Somerset', 'South Ayrshire', 'South Gloucestershire', 'South Lanarkshire', 'South Tyneside', 'Southampton', 'Southend-on-Sea', 'Southwark', 'St. Helens', 'Staffordshire', 'Stirling', 'Stockport', 'Stockton-on-Tees', 'Stoke-on-Trent', 'Suffolk', 'Sunderland', 'Surrey', 'Sutton', 'Swindon', 'Tameside', 'Telford and Wrekin', 'Thurrock', 'Torbay', 'Tower Hamlets', 'Trafford', 'Wakefield', 'Walsall', 'Waltham Forest', 'Wandsworth', 'Warrington', 'Warwickshire', 'West Berkshire', 'West Dunbartonshire', 'West Lothian', 'West Sussex', 'Westminster', 'Wigan', 'Wiltshire', 'Windsor and Maidenhead', 'Wirral', 'Wokingham', 'Wolverhampton', 'Worcestershire', 'York'],\n\n    ltla: []\n  }\n\n  const onAreaTypeChange = (event) => {\n    setAreaNames(nameOptions[event.target.value])\n  }\n\n  const onSubmitClick = (event) => {\n    updateAreaTypeAndName(\n      document.getElementById(\"areaType\").value,\n      document.getElementById(\"areaName\").value)\n  }\n\n  return (\n\n    <div className=\"container-fluid\">\n      <form className=\"form-inline\">\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaType\" className=\"mr-2\">Area Type</label>\n          <select className=\"form-control w-75 mr-2\" id=\"areaType\" defaultValue={areaType} onChange={onAreaTypeChange}>\n            <option value='overview'>UK</option>\n            <option value='nation'>Nation</option>\n            <option value='region'>Region</option>\n            <option value='nhsRegion'>NHS Region</option>\n            <option value='utla'>Upper-tier Local Authority</option>\n            <option value='ltla'>Lower-tier Local Authority</option>\n          </select>\n        </div>\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaName\" className=\"mr-2\">Area Name</label>\n          <select className=\"form-control w-75\" id=\"areaName\" defaultValue={areaName}>\n            {areaNames.map((name) => (\n              <option value={name} key={name}>{name}</option>\n            ))}\n          </select>\n        </div>\n\n        <input className=\"btn btn-secondary ml-3\" type=\"button\" value=\"Submit\" onClick={onSubmitClick} />\n      </form >\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport Data from '../utilities/Data'\nimport Deaths from '../components/Deaths'\nimport Cases from '../components/Cases'\nimport Tests from '../components/Tests'\nimport Hospital from '../components/Hospital'\nimport Admissions from '../components/Admissions'\nimport IntensiveCare from '../components/IntensiveCare'\nimport Input from '../components/Input'\nimport { compare } from '../utilities/Utils'\nimport './App.css'\n\nfunction App() {\n\n  const [areaType, setAreaType] = useState('overview');\n  const [areaName, setAreaName] = useState('');\n  const [apiData, setAPIData] = useState([{}])\n  let dateLatest = null\n  let deathsDate = null\n  let deathsLatest = null\n  let deathsCum = null\n  let deathsRate = null\n  let deathsDateActual = null\n  let deathsLatestActual = null\n  let deathsCumActual = null\n  let deathsRateActual = null\n  let casesDate = null\n  let casesLatest = null\n  let casesCum = null\n  let casesRate = null\n  let casesDateActual = null\n  let casesLatestActual = null\n  let casesCumActual = null\n  let casesRateActual = null\n  let hospitalDate = null\n  let hospitalLatest = null\n  let admissionsDate = null\n  let admissionsLatest = null\n  let admissionsCum = null\n  let intensiveCareDate = null\n  let intensiveCareLatest = null\n  let testsDate = null\n  let testsP1 = null\n  let testsP2 = null\n  let testsP3 = null\n  let testsP4 = null\n  let totalPillars = null\n  let cumTestsP1 = null\n  let cumTestsP2 = null\n  let cumTestsP3 = null\n  let cumTestsP4 = null\n  let cumTotalPillars = null\n  let deaths = []\n  let deathsActual = []\n  let cases = []\n  let casesActual = []\n  let tests1 = []\n  let tests2 = []\n  let tests3 = []\n  let tests4 = []\n  let totalTests = []\n  let patients = []\n  let admissions = []\n  let intensiveCare = []\n\n  useEffect(() => {\n    const data = new Data(areaType, areaName)\n    data\n      .getAPIData()\n      .then((results) => {\n        setAPIData(results.data)\n      })\n      .catch((err) => console.log(err))\n  }, [areaType, areaName]);\n\n  const updateAreaTypeAndName = (newAreaType, newAreaName) => {\n    setAreaType(newAreaType)\n    setAreaName(newAreaName)\n  }\n\n  if (apiData !== undefined && apiData.length > 0) {\n\n    dateLatest = apiData[0].date\n\n    if (dateLatest != null) {\n      for (let i = 0; i < apiData.length; i++) {\n        const c = apiData[i]\n        const rowDate = (new Date(c.date)).toLocaleDateString()\n\n        // Get the latest values for each variable, may be on different dates\n        // Deaths Published\n        if (deathsLatest == null && c.newDeaths28DaysByPublishDate != null) {\n          deathsLatest = (c.newDeaths28DaysByPublishDate || '').toLocaleString()\n          deathsCum = (c.cumDeaths28DaysByPublishDate || '').toLocaleString()\n          deathsRate = c.cumDeaths28DaysByPublishDateRate\n          deathsDate = rowDate\n        }\n        // Deaths by Death Date\n        if (deathsLatestActual == null && c.newDeaths28DaysByDeathDate != null) {\n          deathsLatestActual = (c.newDeaths28DaysByDeathDate || '').toLocaleString()\n          deathsCumActual = (c.cumDeaths28DaysByDeathDate || '').toLocaleString()\n          deathsRateActual = c.cumDeaths28DaysByDeathDateRate\n          deathsDateActual = rowDate\n        }\n        // Cases Published\n        if (casesLatest == null && c.newCasesByPublishDate != null) {\n          casesLatest = (c.newCasesByPublishDate || '').toLocaleString()\n          casesCum = (c.cumCasesByPublishDate || '').toLocaleString()\n          casesRate = c.cumCasesByPublishDateRate\n          casesDate = rowDate\n        }\n        // Cases by specimen date\n        if (casesLatestActual == null && c.newCasesBySpecimenDate != null) {\n          casesLatestActual = (c.newCasesBySpecimenDate || '').toLocaleString()\n          casesCumActual = (c.cumCasesBySpecimenDate || '').toLocaleString()\n          casesRateActual = c.cumCasesBySpecimenDateRate\n          casesDateActual = rowDate\n        }\n        // Tests\n        if (testsP1 == null && c.newPillarOneTestsByPublishDate != null) {\n          testsP1 = (c.newPillarOneTestsByPublishDate || '').toLocaleString()\n          testsP2 = (c.newPillarTwoTestsByPublishDate || '').toLocaleString()\n          testsP3 = (c.newPillarThreeTestsByPublishDate || '').toLocaleString()\n          testsP4 = (c.newPillarFourTestsByPublishDate || '').toLocaleString()\n          totalPillars = (parseInt(c.newPillarOneTestsByPublishDate || '0') +\n            parseInt(c.newPillarTwoTestsByPublishDate || '0') +\n            parseInt(c.newPillarThreeTestsByPublishDate || '0') +\n            parseInt(c.newPillarFourTestsByPublishDate || '0')).toLocaleString()\n          cumTestsP1 = (c.cumPillarOneTestsByPublishDate || '').toLocaleString()\n          cumTestsP2 = (c.cumPillarTwoTestsByPublishDate || '').toLocaleString()\n          cumTestsP3 = (c.cumPillarThreeTestsByPublishDate || '').toLocaleString()\n          cumTestsP4 = (c.cumPillarFourTestsByPublishDate || '').toLocaleString()\n          cumTotalPillars = (\n            parseInt(c.cumPillarOneTestsByPublishDate || '0') +\n            parseInt(c.cumPillarTwoTestsByPublishDate || '0') +\n            parseInt(c.cumPillarThreeTestsByPublishDate || '0') +\n            parseInt(c.cumPillarFourTestsByPublishDate || '0')).toLocaleString()\n          testsDate = rowDate\n        }\n\n        // Hospital patients\n        if (hospitalLatest == null && c.hospitalCases != null) {\n          hospitalLatest = (c.hospitalCases).toLocaleString()\n          hospitalDate = rowDate\n        }\n        // Hospital admissions\n        if (admissionsLatest == null && c.newAdmissions != null) {\n          admissionsLatest = (c.newAdmissions).toLocaleString()\n          admissionsCum = (c.cumAdmissions || '').toLocaleString()\n          admissionsDate = rowDate\n        }\n        // Intensive care\n        if (intensiveCareLatest == null && c.covidOccupiedMVBeds != null) {\n          intensiveCareLatest = (c.covidOccupiedMVBeds).toLocaleString()\n          intensiveCareDate = rowDate\n        }\n\n        // Arrays of date / values after covid start date\n        if (c.date >= '2020-03-01') {\n          if (c.newDeaths28DaysByPublishDate != null) {\n            deaths[deaths.length] = {\n              date: c.date,\n              count: c.newDeaths28DaysByPublishDate\n            }\n          }\n          if (c.newDeaths28DaysByDeathDate != null) {\n            deathsActual[deathsActual.length] = {\n              date: c.date,\n              count: c.newDeaths28DaysByDeathDate\n            }\n          }\n          if (c.newCasesByPublishDate != null) {\n            cases[cases.length] = {\n              date: c.date,\n              count: c.newCasesByPublishDate\n            }\n          }\n          if (c.newCasesBySpecimenDate != null) {\n            casesActual[casesActual.length] = {\n              date: c.date,\n              count: c.newCasesBySpecimenDate\n            }\n          }\n          if (c.newPillarOneTestsByPublishDate != null) {\n            tests1[tests1.length] = {\n              date: c.date,\n              count: c.newPillarOneTestsByPublishDate\n            }\n          }\n          if (c.newPillarTwoTestsByPublishDate != null) {\n            tests2[tests2.length] = {\n              date: c.date,\n              count: c.newPillarTwoTestsByPublishDate\n            }\n          }\n          if (c.newPillarThreeTestsByPublishDate != null) {\n            tests3[tests3.length] = {\n              date: c.date,\n              count: c.newPillarThreeTestsByPublishDate\n            }\n          }\n          if (c.newPillarFourTestsByPublishDate != null) {\n            tests4[tests4.length] = {\n              date: c.date,\n              count: c.newPillarFourTestsByPublishDate\n            }\n          }\n          totalTests[totalTests.length] = {\n            date: c.date,\n            count: parseInt(c.newPillarOneTestsByPublishDate || 0) +\n              parseInt(c.newPillarTwoTestsByPublishDate || 0) +\n              parseInt(c.newPillarThreeTestsByPublishDate || 0) +\n              parseInt(c.newPillarFourTestsByPublishDate || 0)\n          }\n          if (c.hospitalCases != null) {\n            patients[patients.length] = {\n              date: c.date,\n              count: c.hospitalCases\n            }\n          }\n          if (c.newAdmissions != null) {\n            admissions[admissions.length] = {\n              date: c.date,\n              count: c.newAdmissions\n            }\n          }\n          if (c.covidOccupiedMVBeds != null) {\n            intensiveCare[intensiveCare.length] = {\n              date: c.date,\n              count: c.covidOccupiedMVBeds\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"display-4 text-center\">Coronavirus {areaName == '' ? 'UK' : areaName}</h1>\n      <div className=\"container-fluid\">\n        <div className=\"row mb-3\">\n          <Input areaType={areaType} areaName={areaName}\n            updateAreaTypeAndName={updateAreaTypeAndName} />\n        </div>\n        {\n          (areaType === 'nhsRegion')\n            ? null\n            :\n            <div className=\"row mb-3\">\n              <Deaths\n                date={deathsDate}\n                latest={deathsLatest}\n                cumulative={deathsCum}\n                rate={deathsRate}\n                deaths={deaths}\n                dateActual={deathsDateActual}\n                latestActual={deathsLatestActual}\n                cumulativeActual={deathsCumActual}\n                rateActual={deathsRateActual}\n                deathsActual={deathsActual}\n              />\n              <Cases\n                date={casesDate}\n                latest={casesLatest}\n                cumulative={casesCum}\n                rate={casesRate}\n                cases={cases}\n                dateActual={casesDateActual}\n                latestActual={casesLatestActual}\n                cumulativeActual={casesCumActual}\n                rateActual={casesRateActual}\n                casesActual={casesActual}\n              />\n              {\n                (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n                  ? null\n                  :\n                  <Tests\n                    date={testsDate}\n                    piller1={testsP1}\n                    piller2={testsP2}\n                    piller3={testsP3}\n                    piller4={testsP4}\n                    total={totalPillars}\n                    cumPiller1={cumTestsP1}\n                    cumPiller2={cumTestsP2}\n                    cumPiller3={cumTestsP3}\n                    cumPiller4={cumTestsP4}\n                    cumPillerTotal={cumTotalPillars}\n                    tests1={tests1}\n                    tests2={tests2}\n                    tests3={tests3}\n                    tests4={tests4}\n                    testsTotal={totalTests}\n                  />\n              }\n            </div>\n        }\n        {\n          (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n            ? null\n            :\n            <div className=\"row mb-3\">\n              <Hospital\n                date={hospitalDate}\n                latest={hospitalLatest}\n                patients={patients}\n              />\n              <Admissions\n                date={admissionsDate}\n                latest={admissionsLatest}\n                cumulative={admissionsCum}\n                admissions={admissions}\n              />\n              <IntensiveCare\n                date={intensiveCareDate}\n                latest={intensiveCareLatest}\n                intensiveCare={intensiveCare}\n              />\n            </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}