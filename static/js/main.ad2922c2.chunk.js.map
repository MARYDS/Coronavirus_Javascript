{"version":3,"sources":["utilities/Data.js","utilities/Graph.js","utilities/TableData.js","components/Deaths.js","utilities/Utils.js","components/Cases.js","components/Tests.js","components/Hospital.js","components/Admissions.js","components/IntensiveCare.js","components/Input.js","utilities/utla.js","utilities/ltla.js","containers/App.js","serviceWorker.js","index.js"],"names":["Data","areaType","areaName","this","filters","structure","request","JSON","stringify","fetch","response","json","results","requiredData","extractRequiredFields","data","latest","deaths","filter","la","count","sort","a","b","deathsByLocation","forEach","locn","prefix","code","charAt","push","date","location","cases","casesByLocation","apiData","dateLatest","deathsDate","deathsDateYMD","deathsNew","deathsCum","deathsRate","deathsDateAct","deathsNewAct","deathsCumAct","deathsRateAct","casesDate","casesDateYMD","casesNew","casesCum","casesRate","casesDateAct","casesNewAct","casesCumAct","casesRateAct","hospitalDate","hospitalNew","admissionsDate","admissionsNew","admissionsCum","intensiveCareDate","intensiveCareNew","testsDate","newP1","newP2","newP3","newP4","newTests","cumP1","cumP2","cumP3","cumP4","cumTests","deathsPub","deathsAct","casesPub","casesAct","tests1","tests2","tests3","tests4","testsTot","patients","admissions","intensiveCare","undefined","length","weekdays","i","c","rowDate","Date","toLocaleDateString","rowDay","getDay","newDeaths28DaysByPublishDate","toLocaleString","cumDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDateRate","newDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDate","cumDeaths28DaysByDeathDateRate","newCasesByPublishDate","cumCasesByPublishDate","cumCasesByPublishDateRate","newCasesBySpecimenDate","cumCasesBySpecimenDate","cumCasesBySpecimenDateRate","newPillarOneTestsByPublishDate","newPillarTwoTestsByPublishDate","newPillarThreeTestsByPublishDate","newPillarFourTestsByPublishDate","parseInt","cumPillarOneTestsByPublishDate","cumPillarTwoTestsByPublishDate","cumPillarThreeTestsByPublishDate","cumPillarFourTestsByPublishDate","hospitalCases","newAdmissions","cumAdmissions","covidOccupiedMVBeds","day","Graph","props","useState","height","window","innerHeight","width","innerWidth","sizes","setSizes","CustomTooltip","payload","label","active","className","value","useEffect","handleResize","addEventListener","_","removeEventListener","formatXAxis","tickItem","month","w","Math","floor","h","margin","top","right","bottom","left","stroke","vertical","tick","fontSize","interval","tickFormatter","dataKey","content","type","dot","TableData","cols","id","map","elem","key","Deaths","datePub","newPub","cumPub","ratePub","dateAct","newAct","cumAct","rateAct","deathsLoc","deathsPubSorted","deathsActSorted","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","Cases","casesLoc","casesPubSorted","casesActSorted","Tests","newTotal","cumTotal","testsTotSorted","Hospital","patientsSorted","Admissions","cumulative","admissionsSorted","IntensiveCare","intensiveCareSorted","Input","updateAreaTypeAndName","areaNames","setAreaNames","nameOptions","overview","nation","region","nhsRegion","utla","ltla","onAreaTypeChange","event","target","onSubmitClick","document","getElementById","htmlFor","defaultValue","onChange","name","onClick","App","setAreaType","setAreaName","setAPIData","apiCaseData","setAPICaseData","apiDeathData","setAPIDeathData","noData","setNoData","getAPIData","then","catch","err","console","log","getAPICaseDataByLA","getAPIDeathDataByLA","newAreaType","newAreaName","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ad2922c2.chunk.js","sourcesContent":["export default class Data {\n\n  constructor(areaType, areaName) {\n    this.areaType = areaType;\n    this.areaName = areaName;\n  }\n\n  // Fetch data from the government API\n  async getAPIData() {\n\n    let filters = `areaType=${this.areaType}`\n    if (this.areaName !== '') {\n      filters += `;areaName=${this.areaName}`\n    }\n\n    const structure = {\n      \"areaType\": \"areaType\",\n      \"areaName\": \"areaName\",\n      \"areaCode\": \"areaCode\",\n      \"date\": \"date\",\n      \"newCasesByPublishDate\": \"newCasesByPublishDate\",\n      \"cumCasesByPublishDate\": \"cumCasesByPublishDate\",\n      \"cumCasesByPublishDateRate\": \"cumCasesByPublishDateRate\",\n      \"newCasesBySpecimenDate\": \"newCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDate\": \"cumCasesBySpecimenDate\",\n      \"cumCasesBySpecimenDateRate\": \"cumCasesBySpecimenDateRate\",\n      \"maleCases\": \"maleCases\",\n      \"femaleCases\": \"femaleCases\",\n      \"newPillarOneTestsByPublishDate\": \"newPillarOneTestsByPublishDate\",\n      \"cumPillarOneTestsByPublishDate\": \"cumPillarOneTestsByPublishDate\",\n      \"newPillarTwoTestsByPublishDate\": \"newPillarTwoTestsByPublishDate\",\n      \"cumPillarTwoTestsByPublishDate\": \"cumPillarTwoTestsByPublishDate\",\n      \"newPillarThreeTestsByPublishDate\": \"newPillarThreeTestsByPublishDate\",\n      \"cumPillarThreeTestsByPublishDate\": \"cumPillarThreeTestsByPublishDate\",\n      \"newPillarFourTestsByPublishDate\": \"newPillarFourTestsByPublishDate\",\n      \"cumPillarFourTestsByPublishDate\": \"cumPillarFourTestsByPublishDate\",\n      \"newAdmissions\": \"newAdmissions\", \"cumAdmissions\": \"cumAdmissions\",\n      \"cumAdmissionsByAge\": \"cumAdmissionsByAge\",\n      \"cumTestsByPublishDate\": \"cumTestsByPublishDate\",\n      \"newTestsByPublishDate\": \"newTestsByPublishDate\",\n      \"covidOccupiedMVBeds\": \"covidOccupiedMVBeds\",\n      \"hospitalCases\": \"hospitalCases\",\n      \"plannedCapacityByPublishDate\": \"plannedCapacityByPublishDate\",\n      \"newDeaths28DaysByPublishDate\": \"newDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDate\": \"cumDeaths28DaysByPublishDate\",\n      \"cumDeaths28DaysByPublishDateRate\": \"cumDeaths28DaysByPublishDateRate\",\n      \"newDeaths28DaysByDeathDate\": \"newDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDate\": \"cumDeaths28DaysByDeathDate\",\n      \"cumDeaths28DaysByDeathDateRate\": \"cumDeaths28DaysByDeathDateRate\",\n    }\n\n    const request = `\n    https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n    `\n    let response = await fetch(request);\n    let results = await response.json();\n    const requiredData = this.extractRequiredFields(results.data)\n    response = null\n    results = null\n    return requiredData;\n  }\n\n  // Fetch todays death data from API\n  async getAPIDeathDataByLA(latest) {\n    let filters = \"areaType=ltla\"\n    filters += `;date=${latest}`\n\n    const structure = {\n      \"locn\": \"areaName\",\n      \"code\": \"areaCode\",\n      \"date\": \"date\",\n      \"count\": \"newDeaths28DaysByPublishDate\",\n    }\n\n    const request = `\n    https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n    `\n    let response = await fetch(request);\n    let results = await response.json();\n    let deaths = results.data.filter(la => la.count !== 0)\n    deaths.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n    let deathsByLocation = []\n    deaths.forEach((locn) => {\n      const prefix = locn.code.charAt(0)\n      if (this.areaName === '' ||\n        (this.areaName === 'England' && prefix === 'E') ||\n        (this.areaName === 'Scotland' && prefix === 'S') ||\n        (this.areaName === 'Wales' && prefix === 'W') ||\n        (this.areaName === 'Northern Ireland' && prefix === 'N')) {\n        deathsByLocation.push({\n          date: locn.date,\n          location: locn.locn,\n          code: locn.code,\n          count: locn.count\n        })\n      }\n    })\n    return deathsByLocation;\n  }\n\n  // Fetch todays cases data from API\n  async getAPICaseDataByLA(latest) {\n    let filters = \"areaType=ltla\"\n    filters += `;date=${latest}`\n\n    const structure = {\n      \"locn\": \"areaName\",\n      \"code\": \"areaCode\",\n      \"date\": \"date\",\n      \"count\": \"newCasesByPublishDate\",\n    }\n\n    const request = `\n    https://api.coronavirus.data.gov.uk/v1/data?filters=${filters}&structure=${JSON.stringify(structure)}\n    `\n    let response = await fetch(request);\n    let results = await response.json();\n    let cases = results.data.filter(la => la.count !== 0)\n    cases.sort((a, b) => {\n      if (b.count > a.count) return 1\n      if (b.count < a.count) return -1\n      return 0\n    })\n    let casesByLocation = []\n    cases.forEach((locn) => {\n      const prefix = locn.code.charAt(0)\n      if (this.areaName === '' ||\n        (this.areaName === 'England' && prefix === 'E') ||\n        (this.areaName === 'Scotland' && prefix === 'S') ||\n        (this.areaName === 'Wales' && prefix === 'W') ||\n        (this.areaName === 'Northern Ireland' && prefix === 'N')) {\n        casesByLocation.push({\n          date: locn.date,\n          location: locn.locn,\n          code: locn.code,\n          count: locn.count\n        })\n      }\n    })\n    return casesByLocation;\n  }\n\n  extractRequiredFields(apiData) {\n\n    const data = {\n      dateLatest: null, deathsDate: null, deathsDateYMD: null, deathsNew: null, deathsCum: null, deathsRate: null, deathsDateAct: null, deathsNewAct: null, deathsCumAct: null, deathsRateAct: null, casesDate: null, casesDateYMD: null, casesNew: null, casesCum: null, casesRate: null, casesDateAct: null, casesNewAct: null, casesCumAct: null, casesRateAct: null, hospitalDate: null, hospitalNew: null, admissionsDate: null, admissionsNew: null, admissionsCum: null, intensiveCareDate: null, intensiveCareNew: null, testsDate: null, newP1: null, newP2: null, newP3: null, newP4: null, newTests: null, cumP1: null, cumP2: null, cumP3: null, cumP4: null, cumTests: null, deathsPub: [], deathsAct: [], casesPub: [], casesAct: [], tests1: [], tests2: [], tests3: [], tests4: [], testsTot: [], patients: [], admissions: [], intensiveCare: []\n    }\n\n    if (apiData !== undefined && apiData.length > 0) {\n\n      const weekdays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat']\n      data.dateLatest = apiData[0].date\n\n      if (data.dateLatest != null) {\n        for (let i = 0; i < apiData.length; i++) {\n          const c = apiData[i]\n          const rowDate = (new Date(c.date)).toLocaleDateString()\n          const rowDay = weekdays[(new Date(c.date)).getDay()]\n\n          // Get the latest values for each variable, may be on different dates\n          // Deaths Published\n          if (data.deathsNew == null && c.newDeaths28DaysByPublishDate != null) {\n            data.deathsNew = (c.newDeaths28DaysByPublishDate || '').toLocaleString()\n            data.deathsCum = (c.cumDeaths28DaysByPublishDate || '').toLocaleString()\n            data.deathsRate = c.cumDeaths28DaysByPublishDateRate\n            data.deathsDate = rowDate\n            data.deathsDateYMD = c.date\n          }\n          // Deaths by Death Date\n          if (data.deathsNewAct == null && c.newDeaths28DaysByDeathDate != null) {\n            data.deathsNewAct = (c.newDeaths28DaysByDeathDate || '').toLocaleString()\n            data.deathsCumAct = (c.cumDeaths28DaysByDeathDate || '').toLocaleString()\n            data.deathsRateAct = c.cumDeaths28DaysByDeathDateRate\n            data.deathsDateAct = rowDate\n          }\n          // Cases Published\n          if (data.casesNew == null && c.newCasesByPublishDate != null) {\n            data.casesNew = (c.newCasesByPublishDate || '').toLocaleString()\n            data.casesCum = (c.cumCasesByPublishDate || '').toLocaleString()\n            data.casesRate = c.cumCasesByPublishDateRate\n            data.casesDate = rowDate\n            data.casesDateYMD = c.date\n          }\n          // Cases by specimen date\n          if (data.casesNewAct == null && c.newCasesBySpecimenDate != null) {\n            data.casesNewAct = (c.newCasesBySpecimenDate || '').toLocaleString()\n            data.casesCumAct = (c.cumCasesBySpecimenDate || '').toLocaleString()\n            data.casesRateAct = c.cumCasesBySpecimenDateRate\n            data.casesDateAct = rowDate\n          }\n          // Tests\n          if (data.newP1 == null && c.newPillarOneTestsByPublishDate != null) {\n            data.newP1 = (c.newPillarOneTestsByPublishDate || '').toLocaleString()\n            data.newP2 = (c.newPillarTwoTestsByPublishDate || '').toLocaleString()\n            data.newP3 = (c.newPillarThreeTestsByPublishDate || '').toLocaleString()\n            data.newP4 = (c.newPillarFourTestsByPublishDate || '').toLocaleString()\n            data.newTests = (parseInt(c.newPillarOneTestsByPublishDate || '0') +\n              parseInt(c.newPillarTwoTestsByPublishDate || '0') +\n              parseInt(c.newPillarThreeTestsByPublishDate || '0') +\n              parseInt(c.newPillarFourTestsByPublishDate || '0')).toLocaleString()\n            data.cumP1 = (c.cumPillarOneTestsByPublishDate || '').toLocaleString()\n            data.cumP2 = (c.cumPillarTwoTestsByPublishDate || '').toLocaleString()\n            data.cumP3 = (c.cumPillarThreeTestsByPublishDate || '').toLocaleString()\n            data.cumP4 = (c.cumPillarFourTestsByPublishDate || '').toLocaleString()\n            data.cumTests = (\n              parseInt(c.cumPillarOneTestsByPublishDate || '0') +\n              parseInt(c.cumPillarTwoTestsByPublishDate || '0') +\n              parseInt(c.cumPillarThreeTestsByPublishDate || '0') +\n              parseInt(c.cumPillarFourTestsByPublishDate || '0')).toLocaleString()\n            data.testsDate = rowDate\n          }\n\n          // Hospital patients\n          if (data.hospitalNew == null && c.hospitalCases != null) {\n            data.hospitalNew = (c.hospitalCases).toLocaleString()\n            data.hospitalDate = rowDate\n          }\n          // Hospital admissions\n          if (data.admissionsNew == null && c.newAdmissions != null) {\n            data.admissionsNew = (c.newAdmissions).toLocaleString()\n            data.admissionsCum = (c.cumAdmissions || '').toLocaleString()\n            data.admissionsDate = rowDate\n          }\n          // Intensive care\n          if (data.intensiveCareNew == null && c.covidOccupiedMVBeds != null) {\n            data.intensiveCareNew = (c.covidOccupiedMVBeds).toLocaleString()\n            data.intensiveCareDate = rowDate\n          }\n          // Arrays of date / values after covid start date\n          if (c.date >= '2020-03-01') {\n            if (c.newDeaths28DaysByPublishDate != null) {\n              data.deathsPub[data.deathsPub.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newDeaths28DaysByPublishDate\n              }\n            }\n            if (c.newDeaths28DaysByDeathDate != null) {\n              data.deathsAct[data.deathsAct.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newDeaths28DaysByDeathDate\n              }\n            }\n            if (c.newCasesByPublishDate != null) {\n              data.casesPub[data.casesPub.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newCasesByPublishDate\n              }\n            }\n            if (c.newCasesBySpecimenDate != null) {\n              data.casesAct[data.casesAct.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newCasesBySpecimenDate\n              }\n            }\n            if (c.newPillarOneTestsByPublishDate != null) {\n              data.tests1[data.tests1.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newPillarOneTestsByPublishDate\n              }\n            }\n            if (c.newPillarTwoTestsByPublishDate != null) {\n              data.tests2[data.tests2.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newPillarTwoTestsByPublishDate\n              }\n            }\n            if (c.newPillarThreeTestsByPublishDate != null) {\n              data.tests3[data.tests3.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newPillarThreeTestsByPublishDate\n              }\n            }\n            if (c.newPillarFourTestsByPublishDate != null) {\n              data.tests4[data.tests4.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newPillarFourTestsByPublishDate\n              }\n            }\n            data.testsTot[data.testsTot.length] = {\n              date: c.date,\n              day: rowDay,\n              count: parseInt(c.newPillarOneTestsByPublishDate || 0) +\n                parseInt(c.newPillarTwoTestsByPublishDate || 0) +\n                parseInt(c.newPillarThreeTestsByPublishDate || 0) +\n                parseInt(c.newPillarFourTestsByPublishDate || 0)\n            }\n            if (c.hospitalCases != null) {\n              data.patients[data.patients.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.hospitalCases\n              }\n            }\n            if (c.newAdmissions != null) {\n              data.admissions[data.admissions.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.newAdmissions\n              }\n            }\n            if (c.covidOccupiedMVBeds != null) {\n              data.intensiveCare[data.intensiveCare.length] = {\n                date: c.date,\n                day: rowDay,\n                count: c.covidOccupiedMVBeds\n              }\n            }\n          }\n        }\n      }\n    }\n    return data\n  }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  Tooltip, CartesianGrid,\n} from 'recharts';\n\nexport default function Graph({ data } = this.props) {\n\n  const [sizes, setSizes] = useState(\n    {\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n\n  useEffect(() => {\n    function handleResize() {\n      setSizes({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    }\n    window.addEventListener('resize', handleResize)\n\n    return _ => {\n      window.removeEventListener('resize', handleResize)\n    }\n\n  })\n\n  function CustomTooltip({ payload, label, active }) {\n    if (active && payload != null) {\n      return (\n        <div className=\"custom-tooltip\">\n          <span className=\"label\">{(new Date(payload[0].payload.date)).toLocaleDateString()} </span>\n          <span className=\"data\">{(payload[0].value).toLocaleString()}</span>\n        </div>\n      );\n    }\n    return null;\n  }\n  const formatXAxis = (tickItem) => {\n    const d = new Date(tickItem);\n    return d.toLocaleString('default', { month: 'short' });\n  };\n\n  let w = 0\n  if (sizes.width >= 770) {\n    w = Math.floor(400 * sizes.width / 1440)\n  } else if (sizes.width >= 540) {\n    w = Math.floor(400 * sizes.width / 1440) * (3 / 2)\n  } else {\n    w = Math.floor(400 * sizes.width / 1440) * 3\n  }\n  const h = Math.floor(w / 2)\n\n  return (\n    <div className=\"line-chart-wrapper\">\n      <LineChart\n        width={w} height={h} data={data}\n        margin={{ top: 30, right: 10, bottom: 10, left: 10 }}\n      >\n        <CartesianGrid stroke=\"#ccc\" vertical={false} />\n        <YAxis tick={{ fontSize: '0.8rem' }} />\n        <XAxis interval={30} tickFormatter={formatXAxis}\n          tick={{ fontSize: '0.8rem' }} dataKey=\"date\" />\n        <Tooltip content={<CustomTooltip />} />\n        <Line type=\"monotone\" dataKey=\"count\" stroke=\"#ff7300\" dot={false} />\n      </LineChart>\n    </div>\n  );\n}\n\n\n","import React from 'react'\n\nexport default function TableData({ data, cols, id } = this.props) {\n  if (data === undefined) data = []\n\n  return (\n    <div className=\"table-wrapper-scroll-y custom-scrollbar\">\n      <div className=\"table-responsive\">\n        <table id={id} className=\"table table-striped table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th>{cols[0]}</th>\n              <th>{cols[1]}</th>\n              <th>{cols[2]}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.map((elem) => {\n                return (\n                  <tr key={(elem.location !== undefined) ? elem.location : elem.date}>\n                    {(elem.date !== undefined)\n                      ? <td>{(new Date(elem.date)).toLocaleDateString()}</td>\n                      : null}\n                    {(elem.location !== undefined)\n                      ? <td>{elem.location}</td>\n                      : null}\n                    {(elem.day !== undefined)\n                      ? <td>{elem.day}</td>\n                      : null}\n                    <td>{elem.count.toLocaleString()}</td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Deaths(\n  { areaType, datePub, newPub, cumPub, ratePub, deathsPub,\n    dateAct, newAct, cumAct, rateAct, deathsAct, deathsLoc }\n    = this.props) {\n\n  if (deathsPub === undefined) deathsPub = []\n  if (deathsAct === undefined) deathsAct = []\n  const deathsPubSorted = [...deathsPub].sort(compare())\n  const deathsActSorted = [...deathsAct].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Deaths\n          <ul className=\"nav nav-tabs\" id=\"deaths-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-tab\" data-toggle=\"tab\" href=\"#published\" role=\"tab\" aria-controls=\"published\" aria-selected=\"true\">Published</a>\n            </li>\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" id=\"area-deaths-tab\" data-toggle=\"tab\" href=\"#areadeaths\" role=\"tab\" aria-controls=\"areadeaths\" aria-selected=\"false\">Areas</a>\n              </li>\n              : null}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-data-tab\" data-toggle=\"tab\" href=\"#publisheddata\" role=\"tab\" aria-controls=\"publisheddata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-tab\" data-toggle=\"tab\" href=\"#actual\" role=\"tab\" aria-controls=\"actual\" aria-selected=\"false\">Actual</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-data-tab\" data-toggle=\"tab\" href=\"#actualdata\" role=\"tab\" aria-controls=\"actualdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"deaths-content\">\n            <div className=\"tab-pane fade show active\" id=\"published\" role=\"tabpanel\"\n              aria-labelledby=\"published-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {datePub}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {ratePub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={deathsPubSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publisheddata\" role=\"tabpanel\" aria-labelledby=\"published-data-tab\">\n              <TableData data={deathsPub} cols={['Date', 'Day', 'Deaths']} id=\"deathspubtable\" />\n            </div>\n\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <div className=\"tab-pane fade\" id=\"areadeaths\" role=\"tabpanel\" aria-labelledby=\"area-deaths-tab\">\n                <TableData data={deathsLoc} cols={['Date', 'Location', 'Deaths']} id=\"casesareatable\" />\n              </div>\n              : null}\n\n            <div className=\"tab-pane fade\" id=\"actual\" role=\"tabpanel\" aria-labelledby=\"actual-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {dateAct}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {rateAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={deathsActSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualdata\" role=\"tabpanel\" aria-labelledby=\"actual-data-tab\">\n              <TableData data={deathsAct} cols={['Date', 'Day', 'Deaths']} id=\"casesacttable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","export const compare = () => {\n  return function (a, b) {\n    if (a.date > b.date) return 1\n    if (a.date < b.date) return -1\n    return 0\n  }\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Cases(\n  { areaType, datePub, newPub, cumPub, ratePub, casesPub,\n    dateAct, newAct, cumAct, rateAct, casesAct, casesLoc }\n    = this.props) {\n\n  if (casesPub === undefined) casesPub = []\n  if (casesAct === undefined) casesAct = []\n  const casesPubSorted = [...casesPub].sort(compare())\n  const casesActSorted = [...casesAct].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Cases\n          <ul className=\"nav nav-tabs\" id=\"cases-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"published-cases-tab\" data-toggle=\"tab\" href=\"#publishedcases\" role=\"tab\" aria-controls=\"publishedcases\" aria-selected=\"true\">Published</a>\n            </li>\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" id=\"area-cases-tab\" data-toggle=\"tab\" href=\"#areacases\" role=\"tab\" aria-controls=\"areacases\" aria-selected=\"false\">Areas</a>\n              </li>\n              : null}\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"published-cases-data-tab\" data-toggle=\"tab\" href=\"#publishedcasesdata\" role=\"tab\" aria-controls=\"publishedcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-tab\" data-toggle=\"tab\" href=\"#actualcases\" role=\"tab\" aria-controls=\"actualcases\" aria-selected=\"false\">Actual</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"actual-cases-data-tab\" data-toggle=\"tab\" href=\"#actualcasesdata\" role=\"tab\" aria-controls=\"actualcasesdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"cases-content\">\n            <div className=\"tab-pane fade show active\" id=\"publishedcases\" role=\"tabpanel\"\n              aria-labelledby=\"published-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {datePub}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n            </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumPub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n            </span>\n                <span className=\"col-sm-6 text-right\">\n                  {ratePub}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={casesPubSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"publishedcasesdata\" role=\"tabpanel\" aria-labelledby=\"published-cases-data-tab\">\n              <TableData data={casesPub} cols={['Date', 'Day', 'Cases']} id=\"casespubtable\" />\n            </div>\n\n            {(areaType === 'overview' || areaType === 'nation')\n              ?\n              <div className=\"tab-pane fade\" id=\"areacases\" role=\"tabpanel\" aria-labelledby=\"area-cases-tab\">\n                <TableData data={casesLoc} cols={['Date', 'Location', 'Cases']} id=\"casesareatable\" />\n              </div>\n              : null}\n\n            <div className=\"tab-pane fade\" id=\"actualcases\" role=\"tabpanel\" aria-labelledby=\"actual-cases-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {dateAct}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {newAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Cumulative\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {cumAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  Rate\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {rateAct}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={casesActSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"actualcasesdata\" role=\"tabpanel\" aria-labelledby=\"actual-cases-data-tab\">\n              <TableData data={casesAct} cols={['Date', 'Day', 'Cases']} id=\"casesacttable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Tests(\n  { date, newP1, newP2, newP3, newP4, newTotal,\n    cumP1, cumP2, cumP3, cumP4, cumTotal,\n    tests1, tests2, tests3, tests4, testsTot } = this.props) {\n  if (tests1 === undefined) tests1 = []\n  if (tests2 === undefined) tests2 = []\n  if (tests3 === undefined) tests3 = []\n  if (tests4 === undefined) tests4 = []\n  if (testsTot === undefined) testsTot = []\n  const testsTotSorted = [...testsTot].sort(compare())\n\n  return (\n\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card h-100\">\n\n        <div className=\"card-header text-center\">\n          Tests\n          <ul className=\"nav nav-tabs\" id=\"tests-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"tests-tab\" data-toggle=\"tab\" href=\"#tests\" role=\"tab\" aria-controls=\"tests\" aria-selected=\"true\">Tests</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p1-data-tab\" data-toggle=\"tab\" href=\"#p1data\" role=\"tab\" aria-controls=\"p1data\" aria-selected=\"false\">P1</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p2-data-tab\" data-toggle=\"tab\" href=\"#p2data\" role=\"tab\" aria-controls=\"p2data\" aria-selected=\"false\">P2</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p3-data-tab\" data-toggle=\"tab\" href=\"#p3data\" role=\"tab\" aria-controls=\"p3data\" aria-selected=\"false\">P3</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"p4-data-tab\" data-toggle=\"tab\" href=\"#p4data\" role=\"tab\" aria-controls=\"p4data\" aria-selected=\"false\">P4</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"tests-data-tab\" data-toggle=\"tab\" href=\"#testsdata\" role=\"tab\" aria-controls=\"testsdata\" aria-selected=\"false\">Total</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"tests-content\">\n            <div className=\"tab-pane fade show active\" id=\"tests\" role=\"tabpanel\"\n              aria-labelledby=\"tests-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 1\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP1}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP1}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 2\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP2}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP2}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 3\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP3}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP3}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Pillar 4\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newP4}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumP4}\n                </span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-sm-4 text-left\">\n                  Total\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {newTotal}\n                </span>\n                <span className=\"col-sm-4 text-right\">\n                  {cumTotal}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={testsTotSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p1data\" role=\"tabpanel\" aria-labelledby=\"p1-data-tab\">\n              <TableData data={tests1} cols={['Date', 'Day', 'Tests']} id=\"testsp1table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p2data\" role=\"tabpanel\" aria-labelledby=\"p2-data-tab\">\n              <TableData data={tests2} cols={['Date', 'Day', 'Tests']} id=\"testsp2table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p3data\" role=\"tabpanel\" aria-labelledby=\"p3-data-tab\">\n              <TableData data={tests3} cols={['Date', 'Day', 'Tests']} id=\"testsp3table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"p4data\" role=\"tabpanel\" aria-labelledby=\"p4-data-tab\">\n              <TableData data={tests4} cols={['Date', 'Day', 'Tests']} id=\"testsp4table\" />\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"testsdata\" role=\"tabpanel\" aria-labelledby=\"tests-data-tab\">\n              <TableData data={testsTot} cols={['Date', 'Day', 'Tests']} id=\"teststottable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Hospital({ date, latest, patients } = this.props) {\n  if (patients === undefined) patients = []\n  const patientsSorted = [...patients].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Patients in Hospital\n          <ul className=\"nav nav-tabs\" id=\"patients-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"patients-tab\" data-toggle=\"tab\" href=\"#patients\" role=\"tab\" aria-controls=\"patients\" aria-selected=\"true\">Patients</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"patients-data-tab\" data-toggle=\"tab\" href=\"#patientsdata\" role=\"tab\" aria-controls=\"patientsdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"patients-content\">\n            <div className=\"tab-pane fade show active\" id=\"patients\" role=\"tabpanel\"\n              aria-labelledby=\"patients-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={patientsSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"patientsdata\" role=\"tabpanel\" aria-labelledby=\"patients-data-tab\">\n              <TableData data={patients} cols={['Date', 'Day', 'Patients']} id=\"hospitaltable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function Admissions({ date, latest, cumulative, admissions } = this.props) {\n  if (admissions === undefined) admissions = []\n  const admissionsSorted = [...admissions].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Hospital Admissions\n          <ul className=\"nav nav-tabs\" id=\"admissions-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"admissions-tab\" data-toggle=\"tab\" href=\"#admissions\" role=\"tab\" aria-controls=\"admissions\" aria-selected=\"true\">Admissions</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"admissions-data-tab\" data-toggle=\"tab\" href=\"#admissionsdata\" role=\"tab\" aria-controls=\"admissionsdata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"admissions-content\">\n            <div className=\"tab-pane fade show active\" id=\"admissions\" role=\"tabpanel\"\n              aria-labelledby=\"admissions-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={admissionsSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"admissionsdata\" role=\"tabpanel\" aria-labelledby=\"admissions-data-tab\">\n              <TableData data={admissions} cols={['Date', 'Day', 'Admissions']} id='admissionstable' />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React from 'react'\nimport Graph from '../utilities/Graph'\nimport TableData from '../utilities/TableData'\nimport { compare } from '../utilities/Utils'\n\nexport default function IntensiveCare({ date, latest, intensiveCare } = this.props) {\n  if (intensiveCare === undefined) intensiveCare = []\n  const intensiveCareSorted = [...intensiveCare].sort(compare())\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card mb-5 h-100\">\n\n        <div className=\"card-header text-center\">\n          Intensive Care Beds Occupied\n          <ul className=\"nav nav-tabs\" id=\"intensivecare-list\" role=\"tablist\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" id=\"intensivecare-tab\" data-toggle=\"tab\" href=\"#intensivecare\" role=\"tab\" aria-controls=\"intensivecare\" aria-selected=\"true\">Intensive Care</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" id=\"intensivecare-data-tab\" data-toggle=\"tab\" href=\"#intensivecaredata\" role=\"tab\" aria-controls=\"intensivecaredata\" aria-selected=\"false\">Data</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"tab-content\" id=\"intensivecare-content\">\n            <div className=\"tab-pane fade show active\" id=\"intensivecare\" role=\"tabpanel\"\n              aria-labelledby=\"intensivecare-tab\">\n              <div className=\"row\">\n                <span className=\"col-sm-6 text-left\">\n                  {date}\n                </span>\n                <span className=\"col-sm-6 text-right\">\n                  {latest}\n                </span>\n              </div>\n              <div className=\"row\">\n                <Graph data={intensiveCareSorted} />\n              </div>\n            </div>\n\n            <div className=\"tab-pane fade\" id=\"intensivecaredata\" role=\"tabpanel\" aria-labelledby=\"intensivecare-data-tab\">\n              <TableData data={intensiveCare} cols={['Date', 'Day', 'Beds']} id=\"intensivecaretable\" />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\n","import React, { useState } from 'react'\nimport { getUtla } from '../utilities/utla'\nimport { getLtla } from '../utilities/ltla'\n\nexport default function Input({ areaType, areaName, updateAreaTypeAndName } = this.props) {\n\n  const [areaNames, setAreaNames] = useState(['']);\n\n  const nameOptions = {\n    overview: [''],\n    nation: ['England', 'Scotland', 'Wales', 'Northern Ireland'],\n    region: ['East Midlands', 'East of England', 'London', 'North East',\n      'North West', 'South East', 'South West', 'West Midlands',\n      'Yorkshire and The Humber'],\n    nhsRegion: ['East of England', 'London', 'Midlands',\n      'North East and Yorkshire', 'North West', 'South East',\n      'South West'],\n    utla: getUtla(),\n    ltla: getLtla()\n  }\n\n  const onAreaTypeChange = (event) => {\n    setAreaNames(nameOptions[event.target.value])\n  }\n\n  const onSubmitClick = (event) => {\n    updateAreaTypeAndName(\n      document.getElementById(\"areaType\").value,\n      document.getElementById(\"areaName\").value)\n  }\n\n  return (\n\n    <div className=\"container-fluid\">\n      <form className=\"form-inline\">\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaType\" className=\"mr-2\">Area Type</label>\n          <select className=\"form-control w-75 mr-2\" id=\"areaType\" defaultValue={areaType} onChange={onAreaTypeChange}>\n            <option value='overview'>UK</option>\n            <option value='nation'>Nation</option>\n            <option value='region'>Region</option>\n            <option value='nhsRegion'>NHS Region</option>\n            <option value='utla'>Upper-tier Local Authority</option>\n            <option value='ltla'>Lower-tier Local Authority</option>\n          </select>\n        </div>\n\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"areaName\" className=\"mr-2\">Area Name</label>\n          <select className=\"form-control w-75\" id=\"areaName\" defaultValue={areaName}>\n            {areaNames.map((name) => (\n              <option value={name} key={name}>{name}</option>\n            ))}\n          </select>\n        </div>\n\n        <input className=\"btn btn-secondary ml-3\" type=\"button\" value=\"Submit\" onClick={onSubmitClick} />\n      </form >\n    </div>\n  )\n}\n","export const getUtla = () => ['Aberdeen City', 'Aberdeenshire', 'Angus', 'Argyll and Bute', 'Barking and Dagenham', 'Barnet', 'Barnsley', 'Bath and North East Somerset', 'Bedford', 'Bexley', 'Birmingham', 'Blackburn with Darwen', 'Blackpool', 'Bolton', 'Bournemouth, Christchurch and Poole', 'Bracknell Forest', 'Bradford', 'Brent', 'Brighton and Hove', 'Bristol, City of', 'Bromley', 'Buckinghamshire', 'Bury', 'Calderdale', 'Cambridgeshire', 'Camden', 'Central Bedfordshire', 'Cheshire East', 'Cheshire West and Chester', 'City of Edinburgh', 'Clackmannanshire', 'Cornwall and Isles of Scilly', 'County Durham', 'Coventry', 'Croydon', 'Cumbria', 'Darlington', 'Derby', 'Derbyshire', 'Devon', 'Doncaster', 'Dorset', 'Dudley', 'Dumfries and Galloway', 'Dundee City', 'Ealing', 'East Ayrshire', 'East Dunbartonshire', 'East Lothian', 'East Renfrewshire', 'East Riding of Yorkshire', 'East Sussex', 'Enfield', 'Essex', 'Falkirk', 'Fife', 'Gateshead', 'Glasgow City', 'Gloucestershire', 'Greenwich', 'Hackney and City of London', 'Halton', 'Hammersmith and Fulham', 'Hampshire', 'Haringey', 'Harrow', 'Hartlepool', 'Havering', 'Herefordshire, County of', 'Hertfordshire', 'Highland', 'Hillingdon', 'Hounslow', 'Inverclyde', 'Isle of Wight', 'Islington', 'Kensington and Chelsea', 'Kent', 'Kingston upon Hull, City of', 'Kingston upon Thames', 'Kirklees', 'Knowsley', 'Lambeth', 'Lancashire', 'Leeds', 'Leicester', 'Leicestershire', 'Lewisham', 'Lincolnshire', 'Liverpool', 'Luton', 'Manchester', 'Medway', 'Merton', 'Middlesbrough', 'Midlothian', 'Milton Keynes', 'Moray', 'Na h-Eileanan Siar', 'Newcastle upon Tyne', 'Newham', 'Norfolk', 'North Ayrshire', 'North East Lincolnshire', 'North Lanarkshire', 'North Lincolnshire', 'North Somerset', 'North Tyneside', 'North Yorkshire', 'Northamptonshire', 'Northumberland', 'Nottingham', 'Nottinghamshire', 'Oldham', 'Orkney Islands', 'Oxfordshire', 'Perth and Kinross', 'Peterborough', 'Plymouth', 'Portsmouth', 'Reading', 'Redbridge', 'Redcar and Cleveland', 'Renfrewshire', 'Richmond upon Thames', 'Rochdale', 'Rotherham', 'Rutland', 'Salford', 'Sandwell', 'Scottish Borders', 'Sefton', 'Sheffield', 'Shetland Islands', 'Shropshire', 'Slough', 'Solihull', 'Somerset', 'South Ayrshire', 'South Gloucestershire', 'South Lanarkshire', 'South Tyneside', 'Southampton', 'Southend-on-Sea', 'Southwark', 'St. Helens', 'Staffordshire', 'Stirling', 'Stockport', 'Stockton-on-Tees', 'Stoke-on-Trent', 'Suffolk', 'Sunderland', 'Surrey', 'Sutton', 'Swindon', 'Tameside', 'Telford and Wrekin', 'Thurrock', 'Torbay', 'Tower Hamlets', 'Trafford', 'Wakefield', 'Walsall', 'Waltham Forest', 'Wandsworth', 'Warrington', 'Warwickshire', 'West Berkshire', 'West Dunbartonshire', 'West Lothian', 'West Sussex', 'Westminster', 'Wigan', 'Wiltshire', 'Windsor and Maidenhead', 'Wirral', 'Wokingham', 'Wolverhampton', 'Worcestershire', 'York']\n","export const getLtla = () => [\n  'Adur', 'Allerdale', 'Amber Valley', 'Arun', 'Ashfield', 'Ashford', 'Aylesbury Vale', 'Babergh', 'Barking and Dagenham', 'Barnet', 'Barnsley', 'Barrow-in-Furness', 'Basildon', 'Basingstoke and Deane', 'Bassetlaw', 'Bath and North East Somerset', 'Bedford', 'Bexley', 'Birmingham', 'Blaby', 'Blackburn with Darwen', 'Blackpool', 'Blaenau Gwent', 'Bolsover', 'Bolton', 'Boston', 'Bournemouth, Christchurch and Poole', 'Bracknell Forest', 'Bradford', 'Braintree', 'Breckland', 'Brent', 'Brentwood', 'Bridgend', 'Brighton and Hove', 'Bristol, City of', 'Broadland', 'Bromley', 'Bromsgrove', 'Broxbourne', 'Broxtowe', 'Burnley', 'Bury', 'Caerphilly', 'Calderdale', 'Cambridge', 'Camden', 'Cannock Chase', 'Canterbury', 'Cardiff', 'Carlisle', 'Carmarthenshire', 'Castle Point', 'Central Bedfordshire', 'Ceredigion', 'Charnwood', 'Chelmsford', 'Cheltenham', 'Cherwell', 'Cheshire East', 'Cheshire West and Chester', 'Chesterfield', 'Chichester', 'Chiltern', 'Chorley', 'City of London', 'Colchester', 'Conwy', 'Copeland', 'Corby', 'Cornwall', 'Cotswold', 'County Durham', 'Coventry', 'Craven', 'Crawley', 'Croydon', 'Dacorum', 'Darlington', 'Dartford', 'Daventry', 'Denbighshire', 'Derby', 'Derbyshire Dales', 'Doncaster', 'Dorset', 'Dover', 'Dudley', 'Ealing', 'East Cambridgeshire', 'East Devon', 'East Hampshire', 'East Hertfordshire', 'East Lindsey', 'East Northamptonshire', 'East Riding of Yorkshire', 'East Staffordshire', 'East Suffolk', 'Eastbourne', 'Eastleigh', 'Eden', 'Elmbridge', 'Enfield', 'Epping Forest', 'Epsom and Ewell', 'Erewash', 'Exeter', 'Fareham', 'Fenland', 'Flintshire', 'Folkestone and Hythe', 'Forest of Dean', 'Fylde', 'Gateshead', 'Gedling', 'Gloucester', 'Gosport', 'Gravesham', 'Great Yarmouth', 'Greenwich', 'Guildford', 'Gwynedd', 'Hackney', 'Halton', 'Hambleton', 'Hammersmith and Fulham', 'Harborough', 'Haringey', 'Harlow', 'Harrogate', 'Harrow', 'Hart', 'Hartlepool', 'Hastings', 'Havant', 'Havering', 'Herefordshire, County of', 'Hertsmere', 'High Peak', 'Hillingdon', 'Hinckley and Bosworth', 'Horsham', 'Hounslow', 'Huntingdonshire', 'Hyndburn', 'Ipswich', 'Isle of Anglesey', 'Isle of Wight', 'Isles of Scilly', 'Islington', 'Kensington and Chelsea', 'Kettering', 'Kings Lynn and West Norfolk', 'Kingston upon Hull, City of', 'Kingston upon Thames', 'Kirklees', 'Knowsley', 'Lambeth', 'Lancaster', 'Leeds', 'Leicester', 'Lewes', 'Lewisham', 'Lichfield', 'Lincoln', 'Liverpool', 'Luton', 'Maidstone', 'Maldon', 'Malvern Hills', 'Manchester', 'Mansfield', 'Medway', 'Melton', 'Mendip', 'Merthyr Tydfil', 'Merton', 'Mid Devon', 'Mid Suffolk', 'Mid Sussex', 'Middlesbrough', 'Milton Keynes', 'Mole Valley', 'Monmouthshire', 'Neath Port Talbot', 'New Forest', 'Newark and Sherwood', 'Newcastle upon Tyne', 'Newcastle-under-Lyme', 'Newham', 'Newport', 'North Devon', 'North East Derbyshire', 'North East Lincolnshire', 'North Hertfordshire', 'North Kesteven', 'North Lincolnshire', 'North Norfolk', 'North Somerset', 'North Tyneside', 'North Warwickshire', 'North West Leicestershire', 'Northampton', 'Northumberland', 'Norwich', 'Nottingham', 'Nuneaton and Bedworth', 'Oadby and Wigston', 'Oldham', 'Oxford', 'Pembrokeshire', 'Pendle', 'Peterborough', 'Plymouth', 'Portsmouth', 'Powys', 'Preston', 'Reading', 'Redbridge', 'Redcar and Cleveland', 'Redditch', 'Reigate and Banstead', 'Rhondda Cynon Taf', 'Ribble Valley', 'Richmond upon Thames', 'Richmondshire', 'Rochdale', 'Rochford', 'Rossendale', 'Rother', 'Rotherham', 'Rugby', 'Runnymede', 'Rushcliffe', 'Rushmoor', 'Rutland', 'Ryedale', 'Salford', 'Sandwell', 'Scarborough', 'Sedgemoor', 'Sefton', 'Selby', 'Sevenoaks', 'Sheffield', 'Shropshire', 'Slough', 'Solihull', 'Somerset West and Taunton', 'South Bucks', 'South Cambridgeshire', 'South Derbyshire', 'South Gloucestershire', 'South Hams', 'South Holland', 'South Kesteven', 'South Lakeland', 'South Norfolk', 'South Northamptonshire', 'South Oxfordshire', 'South Ribble', 'South Somerset', 'South Staffordshire', 'South Tyneside', 'Southampton', 'Southend-on-Sea', 'Southwark', 'Spelthorne', 'St Albans', 'St. Helens', 'Stafford', 'Staffordshire Moorlands', 'Stevenage', 'Stockport', 'Stockton-on-Tees', 'Stoke-on-Trent', 'Stratford-on-Avon', 'Stroud', 'Sunderland', 'Surrey Heath', 'Sutton', 'Swale', 'Swansea', 'Swindon', 'Tameside', 'Tamworth', 'Tandridge', 'Teignbridge', 'Telford and Wrekin', 'Tendring', 'Test Valley', 'Tewkesbury', 'Thanet', 'Three Rivers', 'Thurrock', 'Tonbridge and Malling', 'Torbay', 'Torfaen', 'Torridge', 'Tower Hamlets', 'Trafford', 'Tunbridge Wells', 'Uttlesford', 'Vale of Glamorgan', 'Vale of White Horse', 'Wakefield', 'Walsall', 'Waltham Forest', 'Wandsworth', 'Warrington', 'Warwick', 'Watford', 'Waverley', 'Wealden', 'Wellingborough', 'Welwyn Hatfield', 'West Berkshire', 'West Devon', 'West Lancashire', 'West Lindsey', 'West Oxfordshire', 'West Suffolk', 'Westminster', 'Wigan', 'Wiltshire', 'Winchester', 'Windsor and Maidenhead', 'Wirral', 'Woking', 'Wokingham', 'Wolverhampton', 'Worcester', 'Worthing', 'Wrexham', 'Wychavon', 'Wycombe', 'Wyre', 'Wyre Forest', 'York']\n","import React, { useState, useEffect } from 'react'\nimport Data from '../utilities/Data'\nimport Deaths from '../components/Deaths'\nimport Cases from '../components/Cases'\nimport Tests from '../components/Tests'\nimport Hospital from '../components/Hospital'\nimport Admissions from '../components/Admissions'\nimport IntensiveCare from '../components/IntensiveCare'\nimport Input from '../components/Input'\nimport './App.css'\n\nfunction App() {\n\n  const [areaType, setAreaType] = useState('overview')\n  const [areaName, setAreaName] = useState('')\n  const [apiData, setAPIData] = useState({})\n  const [apiCaseData, setAPICaseData] = useState([])\n  const [apiDeathData, setAPIDeathData] = useState([])\n  const [noData, setNoData] = useState(false)\n\n  useEffect(() => {\n    let data = new Data(areaType, areaName)\n    data\n      .getAPIData()\n      .then((response) => {\n        setAPIData(response)\n        setNoData(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setNoData(true)\n      })\n    data = null\n  }, [areaType, areaName]);\n\n  useEffect(() => {\n    let data = new Data(areaType, areaName)\n    if (apiData !== undefined && apiData.casesDateYMD != null) {\n      data\n        .getAPICaseDataByLA(apiData.casesDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPICaseData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n    if (apiData !== undefined && apiData.deathsDateYMD != null) {\n      data\n        .getAPIDeathDataByLA(apiData.deathsDateYMD, apiData.areaName)\n        .then((response) => {\n          setAPIDeathData(response)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [apiData.deathsDate, apiData.casesDate, areaType, areaName]);\n\n  const updateAreaTypeAndName = (newAreaType, newAreaName) => {\n    setAreaType(newAreaType)\n    setAreaName(newAreaName)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"display-md-4 display-xs-2 text-center\">Coronavirus {areaName === '' ? 'UK' : areaName}</h1>\n      {(noData)\n        ?\n        <p className=\"display-md-3 display-xs-2 text-center text-danger\">\n          No data is currently available</p>\n        : null\n      }\n      <div className=\"container-fluid\">\n        <div className=\"row mb-3\">\n          <Input areaType={areaType} areaName={areaName}\n            updateAreaTypeAndName={updateAreaTypeAndName} />\n        </div>\n        {\n          (areaType === 'nhsRegion')\n            ? null\n            :\n            <div className=\"row mb-3\">\n              <Deaths\n                areaType={areaType}\n                datePub={apiData.deathsDate}\n                newPub={apiData.deathsNew}\n                cumPub={apiData.deathsCum}\n                ratePub={apiData.deathsRate}\n                deathsPub={apiData.deathsPub}\n                dateAct={apiData.deathsDateAct}\n                newAct={apiData.deathsNewAct}\n                cumAct={apiData.deathsCumAct}\n                rateAct={apiData.deathsRateAct}\n                deathsAct={apiData.deathsAct}\n                deathsLoc={apiDeathData}\n              />\n              <Cases\n                areaType={areaType}\n                datePub={apiData.casesDate}\n                newPub={apiData.casesNew}\n                cumPub={apiData.casesCum}\n                ratePub={apiData.casesRate}\n                casesPub={apiData.casesPub}\n                dateAct={apiData.casesDateAct}\n                newAct={apiData.casesNewAct}\n                cumAct={apiData.casesCumAct}\n                rateAct={apiData.casesRateAct}\n                casesAct={apiData.casesAct}\n                casesLoc={apiCaseData}\n              />\n              {\n                (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n                  ? null\n                  :\n                  <Tests\n                    date={apiData.testsDate}\n                    newP1={apiData.newP1}\n                    newP2={apiData.newP2}\n                    newP3={apiData.newP3}\n                    newP4={apiData.newP4}\n                    newTotal={apiData.newTests}\n                    cumP1={apiData.cumP1}\n                    cumP2={apiData.cumP2}\n                    cumP3={apiData.cumP3}\n                    cumP4={apiData.cumP4}\n                    cumTotal={apiData.cumTests}\n                    tests1={apiData.tests1}\n                    tests2={apiData.tests2}\n                    tests3={apiData.tests3}\n                    tests4={apiData.tests4}\n                    testsTot={apiData.testsTot}\n                  />\n              }\n            </div>\n        }\n        {\n          (areaType === 'region' || areaType === 'ltla' || areaType === \"utla\")\n            ? null\n            :\n            <div className=\"row mb-3\">\n              <Hospital\n                date={apiData.hospitalDate}\n                latest={apiData.hospitalNew}\n                patients={apiData.patients}\n              />\n              <Admissions\n                date={apiData.admissionsDate}\n                latest={apiData.admissionsNew}\n                cumulative={apiData.admissionsCum}\n                admissions={apiData.admissions}\n              />\n              <IntensiveCare\n                date={apiData.intensiveCareDate}\n                latest={apiData.intensiveCareNew}\n                intensiveCare={apiData.intensiveCare}\n              />\n            </div>\n        }\n      </div>\n    </div >\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}